{
  "extraction_info": {
    "date": "2025-10-01T13:54:58.202666",
    "total_toolsets": 1,
    "total_tools": 51,
    "toolbox": "cartography"
  },
  "tools": [
    {
      "toolset": "cartography",
      "tool_name": "Annotate Selected Features",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/annotate-selected-features.htm",
      "parameters": [
        {
          "name": "in_map",
          "explanation": "The input map.",
          "datatype": "Map"
        },
        {
          "name": "in_layer",
          "explanation": "The layer for which the selected features will have annotation created.",
          "datatype": "Feature Layer"
        },
        {
          "name": "anno_layers[[annotation_layer, sublayer;sublayer],...]",
          "explanation": "The feature-linked annotation layers and the specified sublayers that will have annotation converted into them.",
          "datatype": "Value Table"
        },
        {
          "name": "generate_unplaced(Optional)",
          "explanation": "Specifies whether to create unplaced annotation\r\nfrom unplaced labels.\r\n\r\n\r\nONLY_PLACED—Annotation will only be created\r\nfor features that are currently labeled. This is the\r\ndefault.GENERATE_UNPLACED—Unplaced annotation are\r\nstored in the annotation feature class. The status field for these\r\nannotation is set to Unplaced.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Creates annotation for the selected features of a layer. The labeling properties defined in the annotation class properties of  the specified related annotation feature classes are used.",
      "extraction_date": "2025-10-01T13:52:07.137924"
    },
    {
      "toolset": "cartography",
      "tool_name": "Contour Annotation",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/contour-annotation.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The contour line feature class for which the annotation will be created.",
          "datatype": "Feature Layer"
        },
        {
          "name": "out_geodatabase",
          "explanation": "The workspace where the output feature classes will be saved. The workspace can be an existing geodatabase or an existing feature dataset.",
          "datatype": "Workspace; Feature Dataset"
        },
        {
          "name": "contour_label_field",
          "explanation": "The field in the input layer attribute table on which the annotation text will be based.",
          "datatype": "Field"
        },
        {
          "name": "reference_scale_value",
          "explanation": "The scale that will be used as a reference for the annotation. This sets the scale on which all symbol and text sizes in the annotation will be based.",
          "datatype": "Double"
        },
        {
          "name": "out_layer",
          "explanation": "The group layer that will contain the contour layer, the annotation, and the mask layer. When working in the Catalog pane, you can use the Save To Layer File tool to write the output group layer to a layer file. When using ArcGIS Pro, the tool adds the group layer to the display if the Add output datasets to an open map option is checked on the Geoprocessing tab on the Options dialog box. The group layer that is created is temporary and will not persist after the session ends unless the document is saved.",
          "datatype": "Group Layer"
        },
        {
          "name": "contour_color",
          "explanation": "Specifies the color of the output contour layer and annotation features.\r\nBLACK—The output contour layer and annotation features will be drawn in black.  This is the default.BROWN—The output contour layer and annotation features will be drawn in brown.BLUE—The output contour layer and annotation features will be drawn in blue.",
          "datatype": "String"
        },
        {
          "name": "contour_type_field(Optional)",
          "explanation": "The field in the input layer attribute table containing a value for the type of contour feature.  An annotation class will be created for each type value.",
          "datatype": "Field"
        },
        {
          "name": "contour_alignment(Optional)",
          "explanation": "Specifies how the annotation will be aligned to contour elevations.\r\nThe annotation can be aligned to the contour elevations so that\r\nthe top of the text is always placed uphill or downhill. These options allow\r\nthe annotation to be placed upside down. The contour annotation can also be\r\naligned to the page, ensuring that the text is never placed upside\r\ndown.\r\n\r\nPAGE—  The annotation will be\r\naligned to the page, ensuring that the text is never placed upside\r\ndown.\r\n\r\nThis is the default.UPHILL—The annotation will be aligned to the contour elevations so that\r\nthe top of the text is always placed uphill. This option allows\r\nthe annotation to be placed upside down.DOWNHILL—The annotation will be aligned to the contour elevations so that\r\nthe top of the text is always placed downhill. This option allows\r\nthe annotation to be placed upside down.",
          "datatype": "String"
        },
        {
          "name": "enable_laddering(Optional)",
          "explanation": "Specifies whether annotation will be placed in ladders. Placing annotation in ladders will place the text so it appears to\r\nstep up and step down the contours in a straight  path.\r\nThese ladders will run from the top of a hill to the bottom, will\r\nnot cross each other, will belong to a single slope, and will not\r\ncross any other slope.\r\nENABLE_LADDERING—Annotation will step up and down the contours in a straight path.NOT_ENABLE_LADDERING—Annotation will not be placed up and down the contours in a straight path.  This is the default.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Creates annotation for contour features. The tool creates an annotation feature class with corresponding mask polygons based on input contour features.",
      "extraction_date": "2025-10-01T13:52:09.718186"
    },
    {
      "toolset": "cartography",
      "tool_name": "Convert Labels To Annotation",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/convert-labels-to-annotation.htm",
      "parameters": [
        {
          "name": "input_map",
          "explanation": "The input map.",
          "datatype": "Map"
        },
        {
          "name": "conversion_scale",
          "explanation": "The scale at which labels will be converted. If a reference scale is set on the map, the reference scale will be used for symbol sizing and annotation feature class creation, but conversion will occur at this scale.",
          "datatype": "Double"
        },
        {
          "name": "output_geodatabase",
          "explanation": "The workspace where the output feature classes will be saved. The workspace can be an existing geodatabase or an existing feature dataset. If this is not the same database used by all the layers in the map, the feature-linked option will be disabled.",
          "datatype": "Workspace; Feature Dataset"
        },
        {
          "name": "anno_suffix(Optional)",
          "explanation": "The suffix that will be added to each new annotation feature class. This suffix will be appended to the name of the source feature class for each new annotation feature class.",
          "datatype": "String"
        },
        {
          "name": "extent(Optional)",
          "explanation": "Specifies the extent that contains the labels to convert to annotation.MAXOF—The maximum extent of all inputs will be used.MINOF—The minimum area common to all inputs will be used.DISPLAY—The extent is equal to the visible display.Layer name—The extent of the specified layer will be used.Extent object—The extent of the specified object will be used. Space delimited string of coordinates—The extent of the specified string will be used. Coordinates are expressed in the order of x-min, y-min, x-max, y-max.If no extent value is set, the extent will be based on the maximum extent of all participating inputs. This is the default.",
          "datatype": "Extent"
        },
        {
          "name": "generate_unplaced(Optional)",
          "explanation": "Specifies whether unplaced annotation\r\nwill be created from unplaced labels.\r\n\r\n\r\nONLY_PLACED—Annotation will only be created\r\nfor features that are currently labeled. This is the\r\ndefault.GENERATE_UNPLACED—Unplaced annotation will be\r\nstored in the annotation feature class. The status field for this\r\nannotation is set to Unplaced.",
          "datatype": "Boolean"
        },
        {
          "name": "require_symbol_id(Optional)",
          "explanation": "Specifies whether all\r\ntext symbol properties can be edited.NO_REQUIRE_ID—All text symbol properties can be edited. This is the default.REQUIRE_ID—Only symbol properties that enable\r\nannotation features can be edited to maintain reference to their associated text\r\nsymbol in the collection.",
          "datatype": "Boolean"
        },
        {
          "name": "feature_linked(Optional)",
          "explanation": "Specifies whether the output annotation feature\r\nclass will be linked to the features in another feature\r\nclass.STANDARD—The output annotation feature class\r\nwill not be linked to the features in another feature class. This\r\nis the default.FEATURE_LINKED—The output annotation feature\r\nclass will be linked to the features in another feature\r\nclass.",
          "datatype": "Boolean"
        },
        {
          "name": "auto_create(Optional)",
          "explanation": "Specifies whether annotation will be created when new\r\nfeatures are added to the linked feature class and the feature_linked parameter is set to FEATURE_LINKED.AUTO_CREATE—Feature-linked annotation will\r\nbe created when new features are added to the linked feature class.\r\nThis is the default.NO_AUTO_CREATE—Feature-linked annotation\r\nwill not be created when new features are added to the linked\r\nfeature class.",
          "datatype": "Boolean"
        },
        {
          "name": "update_on_shape_change(Optional)",
          "explanation": "Specifies whether the position of annotation will be updated when the shape of the linked feature is modified and the feature_linked parameter is set to FEATURE_LINKED.SHAPE_UPDATE—The position of the annotation will be updated when the shape of the linked feature is modified. This is the default.\r\nNO_SHAPE_UPDATE—The position of the annotation will not be updated when the shape of the linked feature is modified.",
          "datatype": "Boolean"
        },
        {
          "name": "output_group_layer(Optional)",
          "explanation": "The group layer that will contain the generated annotation. You can use the Save To Layer File tool to write the output group layer to a layer file.",
          "datatype": "Group Layer"
        },
        {
          "name": "which_layers(Optional)",
          "explanation": "Specifies whether annotation will be converted for all layers in the map or for a single layer. The single layer must be specified.\r\n\r\n\r\nALL_LAYERS—Labels will be converted to annotation for all layers in the map.\r\n\r\nThis is the default.SINGLE_LAYER—Labels will be converted to annotation for a single layer. The layer must be specified.",
          "datatype": "String"
        },
        {
          "name": "single_layer(Optional)",
          "explanation": "The layer with the annotation that will be converted when the which_layers parameter is set to SINGLE_LAYER. This layer must be in the map.",
          "datatype": "Feature Layer"
        },
        {
          "name": "multiple_feature_classes(Optional)",
          "explanation": "Specifies whether labels will be converted to individual annotation feature classes or to a single annotation feature class. If converting to a single annotation feature class, the annotation cannot be feature-linked.SINGLE_FEATURE_CLASS—Labels from all layers will be converted to a single annotation feature class.FEATURE_CLASS_PER_FEATURE_LAYER—Labels will be converted to individual annotation feature classes that correspond to their layers.\r\nThis is the default.",
          "datatype": "Boolean"
        },
        {
          "name": "merge_label_classes(Optional)",
          "explanation": "Specifies whether similar label classes will be merged when the multiple_feature_classes parameter is set to SINGLE_FEATURE_CLASS.MERGE_LABEL_CLASS—Label classes with similar properties will be merged when converting to a single feature class.NO_MERGE_LABEL_CLASS—Label classes with similar properties will not be merged. This is the default.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Converts labels to annotation for a single layer or the entire map. Both standard annotation and feature-linked annotation can be created.",
      "extraction_date": "2025-10-01T13:52:12.527084"
    },
    {
      "toolset": "cartography",
      "tool_name": "Convert Labels To Graphics",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/convert-labels-to-graphics.htm",
      "parameters": [
        {
          "name": "input_map",
          "explanation": "The input map object.",
          "datatype": "Map"
        },
        {
          "name": "conversion_scale",
          "explanation": "The scale at which to convert labels. If a reference scale is set on the map, the reference scale will be used for symbol sizing and graphics layer creation, but conversion will happen at this scale.",
          "datatype": "Double"
        },
        {
          "name": "which_layers(Optional)",
          "explanation": "Specifies whether to convert graphics for all layers in the map or for a single layer. ALL_LAYERS—Labels will be converted to graphics for all layers in the map.\r\n\r\nThis is the default.SINGLE_LAYER—Labels will be converted to graphics for a single layer. The layer must be specified with the single_layer parameter.",
          "datatype": "String"
        },
        {
          "name": "single_layer(Optional)",
          "explanation": "The layer with the labels to convert when the which_layers parameter is set to SINGLE_LAYER. This layer must be in the map.",
          "datatype": "Feature Layer"
        },
        {
          "name": "graphics_suffix(Optional)",
          "explanation": "The suffix that will be added to each new graphics layer. This suffix will be appended to the name of the source feature class for each new graphics layer.",
          "datatype": "String"
        },
        {
          "name": "extent(Optional)",
          "explanation": "Specifies the extent that contains the labels to convert to graphics.MAXOF—The maximum extent of all inputs will be used.MINOF—The minimum area common to all inputs will be used.DISPLAY—The extent is equal to the visible display.Layer name—The extent of the specified layer will be used.Extent object—The extent of the specified object will be used. Space delimited string of coordinates—The extent of the specified string will be used. Coordinates are expressed in the order of x-min, y-min, x-max, y-max.",
          "datatype": "Extent"
        },
        {
          "name": "multiple_graphics_layers(Optional)",
          "explanation": "Specifies whether labels will be converted to individual graphics layers or to a single graphics layer. SINGLE_GRAPHICS_LAYER—Labels from all layers will be converted to a single graphics layer.GRAPHICS_LAYER_PER_FEATURE_LAYER—Labels will be converted to individual graphics layers that correspond to their layers.\r\nThis is the default.",
          "datatype": "Boolean"
        },
        {
          "name": "generate_unplaced(Optional)",
          "explanation": "Specifies whether graphics\r\nwill be created from unplaced labels.\r\n\r\n\r\nONLY_PLACED—Graphics will only be created\r\nfor features that are currently labeled. This is the\r\ndefault.GENERATE_UNPLACED—Unplaced graphics are\r\nstored in the graphics layer with their visibility is turned off.",
          "datatype": "Boolean"
        },
        {
          "name": "output_group_layer(Optional)",
          "explanation": "The group layer that will contain the generated graphics. You can use the Save To Layer File tool to write the output group layer to a layer file.",
          "datatype": "Group Layer"
        }
      ],
      "summary": "Converts labels to graphics for a single layer or an entire map.",
      "extraction_date": "2025-10-01T13:52:15.119333"
    },
    {
      "toolset": "cartography",
      "tool_name": "Map Server Cache Tiling Scheme To Polygons",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/map-server-cache-tiling-scheme-to-polygons.htm",
      "parameters": [
        {
          "name": "input_map",
          "explanation": "The current map with the extent that will be used.",
          "datatype": "Map"
        },
        {
          "name": "tiling_scheme",
          "explanation": "A predefined tiling scheme .xml file.",
          "datatype": "File"
        },
        {
          "name": "output_feature_class",
          "explanation": "The output polygon feature class.",
          "datatype": "Feature Class"
        },
        {
          "name": "use_map_extent",
          "explanation": "Specifies whether polygon features will be  created for the entire extent of the tiling scheme or only those tiles that intersect the full extent of the map.  USE_MAP_EXTENT—Polygon features will be created for the full extent of the map. This is the default.FULL_TILING_SCHEME—Polygon features will be created for the full extent of the tiling scheme.",
          "datatype": "Boolean"
        },
        {
          "name": "clip_to_horizon",
          "explanation": "Specifies whether polygons will be constrained to the valid area of use for the geographic or projected coordinate system of the map. CLIP_TO_HORIZON—Polygon features will only be created within the valid area of use for the geographic or projected coordinate system of the map. Tiles that are within the extent of the tiling scheme but  outside the extent of the coordinate system horizon will be clipped. This is the default.UNIFORM_TILE_SIZE—Polygon features will be created for the full extent of the tiling scheme.  Within each scale level, polygons will be of a uniform size and will not  be clipped at the coordinate system horizon.  This may create data that is outside the valid area of use for the geographic or projected coordinate system.   If a scale within the tiling scheme would generate a tile that is larger than the spatial domain of the feature class, null geometry will be created for that feature.",
          "datatype": "Boolean"
        },
        {
          "name": "antialiasing(Optional)",
          "explanation": "Specifies whether polygons that match map service caches with antialiasing enabled will be generated.\r\nA map service cache supertile is 2048 x 2048 pixels with antialiasing or 4096 x 4096\r\npixels without.\r\nTo determine whether antialiasing was used in an existing cache, open the\r\ntiling scheme file (conf.xml) and see if the\r\n&lt;Antialiasing&gt; tag is set to true.   ANTIALIASING—Polygon tiles will be generated to match the supertile extent of a map service cache with antialiasing enabled.  NONE—Polygon tiles will be generated to match the supertile extent of a map service cache without antialiasing enabled.  This is the default.",
          "datatype": "Boolean"
        },
        {
          "name": "levels[level,...](Optional)",
          "explanation": "The scale levels at which polygons will be created.  To create polygons for all scale levels included in a tiling scheme, leave this parameter blank. You can create polygons for some or all of the scale levels that are included in the tiling scheme.  To add more scale levels, however, you must modify the tiling scheme file or create a new one.",
          "datatype": "Double"
        }
      ],
      "summary": "Creates a polygon feature class from an existing tiling scheme. This tool subdivides a map extent using the same scales as an existing map service cache tiling scheme and creates tiles over a large area, or supertile. Since the supertile extent is larger than the actual tiles defined in the tiling scheme, tiles used as input to the Tiled Labels To Annotation tool can convert labels to annotation over a larger area at a time. This process minimizes annotation duplication across tiles.",
      "extraction_date": "2025-10-01T13:52:17.578550"
    },
    {
      "toolset": "cartography",
      "tool_name": "Tiled Labels To Annotation",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/tiled-labels-to-annotation.htm",
      "parameters": [
        {
          "name": "input_map",
          "explanation": "The map that contains the labels to convert to annotation.",
          "datatype": "Map"
        },
        {
          "name": "polygon_index_layer",
          "explanation": "The polygon layer that contains tile features.",
          "datatype": "Table View"
        },
        {
          "name": "out_geodatabase",
          "explanation": "The workspace where the output feature classes will be saved. The workspace can be an existing geodatabase or an existing feature dataset.",
          "datatype": "Workspace; Feature Dataset"
        },
        {
          "name": "out_layer",
          "explanation": "The group layer that will contain the generated annotation. You can use the Save To Layer File tool to write the output group layer to a layer file.",
          "datatype": "Group Layer"
        },
        {
          "name": "anno_suffix",
          "explanation": "The suffix that will be added to each new annotation feature class. This suffix will be appended to the name of the source feature class for each new annotation feature class. The reference scale for the annotation will follow this suffix.",
          "datatype": "String"
        },
        {
          "name": "reference_scale_value(Optional)",
          "explanation": "The scale value that will be used as a reference for the annotation. This is the scale on which all symbol and text sizes in the annotation will be based.",
          "datatype": "Double"
        },
        {
          "name": "reference_scale_field(Optional)",
          "explanation": "The field in the polygon index layer that will determine the reference scale of the annotation. This is the scale on which all symbol and text sizes in the annotation will be based.",
          "datatype": "Field"
        },
        {
          "name": "tile_id_field(Optional)",
          "explanation": "A field in the polygon index layer that uniquely identifies the tiled area. These values will populate the TileID field in the annotation feature class attribute table.",
          "datatype": "Field"
        },
        {
          "name": "coordinate_sys_field(Optional)",
          "explanation": "A field in the polygon index layer that contains the coordinate system information for each tile. Due to the length required for a field to store coordinate system information, a polygon index layer that contains a coordinate system field must be a geodatabase feature class.",
          "datatype": "Field"
        },
        {
          "name": "map_rotation_field(Optional)",
          "explanation": "A field in the polygon index layer that contains the angle by which the map will be rotated.",
          "datatype": "Field"
        },
        {
          "name": "feature_linked(Optional)",
          "explanation": "Specifies whether the output annotation feature\r\nclass will be linked to the features in another feature\r\nclass.STANDARD— The output annotation feature class will not be linked to the features in another feature class. This is the default.FEATURE_LINKED—The output annotation feature class will be linked to the features in another feature class.",
          "datatype": "Boolean"
        },
        {
          "name": "generate_unplaced_annotation(Optional)",
          "explanation": "Specifies whether unplaced annotation\r\nwill be created from unplaced labels.NOT_GENERATE_UNPLACED_ANNOTATION—Annotation will only be created for features that are currently labeled. This is the default.GENERATE_UNPLACED_ANNOTATION—Unplaced annotation will be stored in the annotation feature class. The status field for this annotation is set to Unplaced.",
          "datatype": "Boolean"
        },
        {
          "name": "which_layers(Optional)",
          "explanation": "Specifies whether annotation will be converted for all layers in the map or for a single layer. The single layer must be specified.\r\n\r\n\r\nALL_LAYERS—Labels will be converted to annotation for all layers in the map.\r\n\r\nThis is the default.SINGLE_LAYER—Labels will be converted to annotation for a single layer. The layer must be specified.",
          "datatype": "String"
        },
        {
          "name": "single_layer(Optional)",
          "explanation": "The layer with the annotation that will be converted when the which_layers parameter is set to SINGLE_LAYER. This layer must be in the map.",
          "datatype": "Feature Layer"
        },
        {
          "name": "require_symbol_id(Optional)",
          "explanation": "Specifies whether all\r\ntext symbol properties can be edited.NO_REQUIRE_ID—All text symbol properties can be edited. This is the default.REQUIRE_ID—Only symbol properties that enable\r\nannotation features can be edited to maintain reference to their associated text\r\nsymbol in the collection.",
          "datatype": "Boolean"
        },
        {
          "name": "auto_create(Optional)",
          "explanation": "Specifies whether annotation will be created when new\r\nfeatures are added to the linked feature class if the feature_linked parameter is set to FEATURE_LINKED.AUTO_CREATE—Feature-linked annotation will\r\nbe created when new features are added to the linked feature class.\r\nThis is the default.NO_AUTO_CREATE—Feature-linked annotation\r\nwill not be created when new features are added to the linked\r\nfeature class.",
          "datatype": "Boolean"
        },
        {
          "name": "update_on_shape_change(Optional)",
          "explanation": "Specifies whether the position of annotation will be updated when the shape of the linked feature is modified if the feature_linked parameter is set to FEATURE_LINKED.SHAPE_UPDATE—The position of the annotation will be updated when the shape of the linked feature is modified. This is the default.\r\nNO_SHAPE_UPDATE—The position of the annotation will not be updated when the shape of the linked feature is modified.",
          "datatype": "Boolean"
        },
        {
          "name": "multiple_feature_classes(Optional)",
          "explanation": "Specifies whether labels will be converted to individual annotation feature classes or to a single annotation feature class. If converting to a single annotation feature class, the annotation cannot be feature-linked.SINGLE_FEATURE_CLASS—Labels from all layers will be converted to a single annotation feature class.FEATURE_CLASS_PER_FEATURE_LAYER—Labels will be converted to individual annotation feature classes that correspond to their layers.\r\nThis is the default.",
          "datatype": "Boolean"
        },
        {
          "name": "merge_label_classes(Optional)",
          "explanation": "Specifies whether similar label classes will be merged if the multiple_feature_classes parameter is set to SINGLE_FEATURE_CLASS.MERGE_LABEL_CLASS—Label classes with similar properties will be merged when converting to a single feature class.NO_MERGE_LABEL_CLASS—Label classes with similar properties will not be merged. This is the default.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Converts labels to annotation for layers in a map based on a polygon index layer. The tool divides a map into tiles and creates annotation for each tile in turn. This is useful for converting a large number of labels to annotation. The polygon index layer can be generated using the Map Server Cache Tiling Scheme To Polygons or Grid Index Features tool or any other polygon feature class that covers the area where you want to create annotation.",
      "extraction_date": "2025-10-01T13:52:20.459582"
    },
    {
      "toolset": "cartography",
      "tool_name": "Update Annotation Reference Scale",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/update-annotation-reference-scale.htm",
      "parameters": [
        {
          "name": "in_anno_features",
          "explanation": "The input annotation or dimension features.",
          "datatype": "Annotation Layer; Dimension Layer"
        },
        {
          "name": "reference_scale",
          "explanation": "The feature class reference scale that will be updated.",
          "datatype": "Double"
        }
      ],
      "summary": "Updates the reference scale of an existing annotation or dimension feature class.",
      "extraction_date": "2025-10-01T13:52:23.025085"
    },
    {
      "toolset": "cartography",
      "tool_name": "Generate Contiguous Cartogram",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/generate-contiguous-cartogram.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input polygon features that will be used to generate the cartogram.",
          "datatype": "Feature Layer"
        },
        {
          "name": "field_name",
          "explanation": "The numeric field containing the values that will determine the area of the polygon features in the output cartogram. \r\nAny features with a negative value or a value of 0 will be omitted from the output.",
          "datatype": "Field"
        },
        {
          "name": "out_features",
          "explanation": "The output polygons with the cartogram transformation applied.",
          "datatype": "Feature Layer"
        },
        {
          "name": "method(Optional)",
          "explanation": "Specifies the method that will be used to transform the input and create the cartogram.FLOW-BASED—An evolution of the diffusion method that is often faster will be used, which may increase distortion. This is the default.DIFFUSION—The diffusion method will be used, which may introduce less distortion than the flow-based method while taking longer to complete.",
          "datatype": "String"
        }
      ],
      "summary": "Generates a cartogram by distorting the area of polygons to be proportional to each other based on a numeric field while preserving shared boundaries.",
      "extraction_date": "2025-10-01T13:52:27.603022"
    },
    {
      "toolset": "cartography",
      "tool_name": "Align Marker To Stroke Or Fill",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/align-marker-to-stroke-or-fill.htm",
      "parameters": [
        {
          "name": "in_point_features",
          "explanation": "The input point feature layer containing point symbols to be aligned to nearby lines or polygons. Symbols are aligned by storing an angle in the  attribute connected to the angle property of the marker symbol layer. This must be connected to a single field with no expression applied. If multiple marker symbol layers in the same point symbol have the Angle property connected to the same field, the Rotate clockwise setting must match in each of those marker layers.",
          "datatype": "Layer"
        },
        {
          "name": "in_line_or_polygon_features",
          "explanation": "The input line or polygon feature layer to which the input point symbols will be aligned.",
          "datatype": "Layer"
        },
        {
          "name": "search_distance",
          "explanation": "The search distance from graphical marker edge to graphical stroke or fill edge. A distance greater than or equal to zero must be specified.",
          "datatype": "Linear Unit"
        },
        {
          "name": "marker_orientation(Optional)",
          "explanation": "Specifies how the marker symbol layer will be oriented relative to the stroke or fill symbol layer's edge.PERPENDICULAR—Marker symbol layers will be aligned perpendicularly to the stroke or fill edge. This is the default. PARALLEL—Marker symbol layers will be aligned parallel to the stroke or fill edge.",
          "datatype": "String"
        }
      ],
      "summary": "Aligns the marker symbol layers of a point feature class to the nearest stroke or fill symbol layers in a line or polygon feature class within a specified search distance.",
      "extraction_date": "2025-10-01T13:52:31.908211"
    },
    {
      "toolset": "cartography",
      "tool_name": "Calculate Color Theorem Field",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/calculate-color-theorem-field.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input polygons that will use the tool results to symbolize features.",
          "datatype": "Feature Layer"
        },
        {
          "name": "field_name",
          "explanation": "The field that will store the tool results. Each feature will be assigned an integer between 1 and the number of unique values created to ensure no two adjacent polygons have the same value.If the field does not exist, it will be created with the short integer data type. If an  existing field is specified, it must be of short, long, or big integer data type. Existing values will be overwritten with the tool results.",
          "datatype": "Field"
        }
      ],
      "summary": "Populates an integer field to use for symbolizing polygons with a small number of colors and ensuring no two adjacent polygons are the same color. Values are assigned to each polygon based on the theorem that only a small number of colors, often four or five, are needed to ensure no two adjacent polygons in a 2-dimensional map are the same color. Overlapping and multipart polygons can increase the number of colors required. The assigned values will be integers ranging from 1 to the number of unique values assigned.",
      "extraction_date": "2025-10-01T13:52:34.363257"
    },
    {
      "toolset": "cartography",
      "tool_name": "Calculate Line Caps",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/calculate-line-caps.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input feature layer containing line symbols. Stroke symbol layers must have the Cap Type property connected to a single attribute field with no expression applied. The values in this field are updated by this tool.",
          "datatype": "Layer"
        },
        {
          "name": "cap_type(Optional)",
          "explanation": "Specifies how the ends of stroke symbol layers will be drawn. The default cap type of strokes is round; the symbol is terminated with a semicircle of radius equal to stroke width centered at the line endpoint. BUTT—The stroke symbol will end exactly where the line geometry ends. This is the default. SQUARE—The stroke symbol will end with closed, square caps that extend past the endpoint of the line by half the symbol width.",
          "datatype": "String"
        },
        {
          "name": "dangle_option(Optional)",
          "explanation": "Specifies how line caps will be calculated for adjoining line features that share an endpoint but are drawn with different symbology. CASED_LINE_DANGLE—The cap style will be modified for dangling lines (those not connected at their endpoints to another line), as well as for lines where a cased-line  symbol is joined at the endpoint of a single-stroke layer line symbol. This is the default. TRUE_DANGLE—The cap style will be modified only for endpoints that are not connected to another feature.",
          "datatype": "String"
        }
      ],
      "summary": "Modifies the cap type for stroke symbol layers in the line symbols of the input layer.",
      "extraction_date": "2025-10-01T13:52:36.845486"
    },
    {
      "toolset": "cartography",
      "tool_name": "Calculate Polygon Main Angle",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/calculate-polygon-main-angle.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input polygon features.",
          "datatype": "Feature Layer"
        },
        {
          "name": "angle_field",
          "explanation": "The field that will be updated with the polygon main angle values.",
          "datatype": "Field"
        },
        {
          "name": "rotation_method(Optional)",
          "explanation": "Specifies the method and origin point of rotation that will be used.. \r\nGEOGRAPHIC—The angle will be calculated clockwise with 0 at the top (north).ARITHMETIC—The angle will be calculated counterclockwise with 0 at the right (east).GRAPHIC—The angle will be calculated counterclockwise with 0 at the top (north).\r\nThis is the default.",
          "datatype": "String"
        }
      ],
      "summary": "Calculates the dominant angles of  input polygon features and assigns the values to a field to use to orient symbology such as markers or hatch lines within the polygons.",
      "extraction_date": "2025-10-01T13:52:39.307531"
    },
    {
      "toolset": "cartography",
      "tool_name": "Convert Control Points To Vertices",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/convert-control-points-to-vertices.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The line or polygon input features containing control point geometry that will be converted to vertices.",
          "datatype": "Feature Layer"
        }
      ],
      "summary": "Converts control points in a line or polygon feature layer to vertices.",
      "extraction_date": "2025-10-01T13:52:41.814217"
    },
    {
      "toolset": "cartography",
      "tool_name": "Convert Marker Placement To Points",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/convert-marker-placement-to-points.htm",
      "parameters": [
        {
          "name": "in_layer",
          "explanation": "A polygon layer symbolized with a marker placement.",
          "datatype": "Layer"
        },
        {
          "name": "out_feature_class",
          "explanation": "A point feature class containing points created from markers in the input layer's marker placement settings. The points will be added to the active map as a layer symbolized with a unique value renderer using symbols from the input.",
          "datatype": "Feature Class"
        },
        {
          "name": "create_multipoints(Optional)",
          "explanation": "Specifies whether output point features will be multipoint.\r\nCREATE_MULTIPOINTS—A multipoint feature will be created for the markers in each input polygon. This is the default.CREATE_POINTS—A point feature will be created for each marker.",
          "datatype": "Boolean"
        },
        {
          "name": "boundary_option(Optional)",
          "explanation": "Specifies whether output points will be created for input markers that cross polygon boundaries.MAY_CROSS_BOUNDARY—Output points will be created for input markers that cross polygon boundaries. This is the default.FIXED_DISTANCE—Output points will not be created for input markers that are within the distance of polygon boundaries specified by the boundary_distance parameter.VALUE_FROM_FIELD—Output points will not be created for input markers that are within the distance of polygon boundaries specified by the boundary_distance_field parameter.",
          "datatype": "String"
        },
        {
          "name": "boundary_distance(Optional)",
          "explanation": "The minimum distance between the output point symbols and the polygon boundaries. This parameter is applied only when the boundary_option parameter is set to FIXED_DISTANCE. The default value is 0.",
          "datatype": "Double"
        },
        {
          "name": "boundary_distance_field(Optional)",
          "explanation": "A numeric field from the input polygons that will be used to determine the boundary distance .This parameter is applied only when the boundary_option parameter is set to VALUE_FROM_FIELD.",
          "datatype": "Field"
        },
        {
          "name": "boundary_distance_unit(Optional)",
          "explanation": "Specifies the linear unit that will be used for boundary distance values.Kilometers—The unit will be kilometers.Meters—The unit will be meters.Decimeters—The unit will be decimeters.Centimeters—The unit will be centimeters.Millimeters—The unit will be millimeters.Nautical Miles—The unit will be nautical miles.Statute Miles—The unit will be statute miles.Yards—The unit will be yards.Feet—The unit will be feet.Inches—The unit will be inches.Degrees—The unit will be degreesPoints—The unit will be points. This is the default.",
          "datatype": "String"
        },
        {
          "name": "in_barriers[[barrier_layer, {barrier_distance}, {barrier_distance_field}, {barrier_distance_unit}],...](Optional)",
          "explanation": "The layers containing points, lines, or polygon features that are conflict barriers for input markers. Markers that conflict with barriers will not be created. The symbology of the barrier layers will be considered.barrier_layer—A layer containing points, lines, or polygon features.barrier_distance—A numeric value specifying the minimum distance between markers and the barrier. This will be ignored if the barrier_distance_field value is set. The default value is 0.barrier_distance_field—A numerical field from the barrier layer that will be used as the barrier distance. This will override the barrier_distance value. The default value is &lt;None&gt;. barrier_distance_unit—The linear unit that will be used for barrier distance values. The default value is Points.",
          "datatype": "Value Table"
        },
        {
          "name": "keep_at_least_one_marker(Optional)",
          "explanation": "Specifies whether a single marker will be created for input polygons when all markers conflict with boundaries or barriers.\r\nKEEP_AT_LEAST_ONE_MARKER—One marker will be created for input polygons when all markers conflict with boundaries or barriers.DO_NOT_KEEP_AT_LEAST_ONE_MARKER—No markers will be created for input polygons when all markers conflict with boundaries or barriers. This is the default.",
          "datatype": "Boolean"
        },
        {
          "name": "displacement_method(Optional)",
          "explanation": "Specifies the displacement method that will be used to move markers that are too close to each other. This parameter is applied only when markers are positioned randomly inside the polygons.\r\nDO_NOT_DISPLACE—Markers will not be displaced. This is the default.DISPLACE_TOWARD_GRID—Conflicting markers will be moved toward their original regular grid points.DISPLACE_APART—Conflicting markers will be moved away from each other.",
          "datatype": "String"
        },
        {
          "name": "minimum_marker_distance(Optional)",
          "explanation": "The minimum distance between individual markers. This parameter is applied only when markers are positioned randomly inside the polygons. The default value is 0.",
          "datatype": "Linear Unit"
        }
      ],
      "summary": "Creates points from the markers of a marker placement in a symbolized  polygon feature.",
      "extraction_date": "2025-10-01T13:52:44.518247"
    },
    {
      "toolset": "cartography",
      "tool_name": "marker placement",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/mapping/layer-properties/position-and-place-marker-symbol-layers.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T13:52:47.261026"
    },
    {
      "toolset": "cartography",
      "tool_name": "Create Overpass",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/create-overpass.htm",
      "parameters": [
        {
          "name": "in_above_features",
          "explanation": "The input line feature layer containing lines that intersect—and will be symbolized as passing above—lines in the in_below_features parameter value.",
          "datatype": "Layer"
        },
        {
          "name": "in_below_features",
          "explanation": "The input line feature layer containing lines that intersect—and will be symbolized as passing below—lines in the in_above_features parameter value. These features will be masked by the polygons created in the out_overpass_feature_class parameter value.",
          "datatype": "Layer"
        },
        {
          "name": "margin_along",
          "explanation": "The length of the mask polygons along the in_above_features parameter, which is the distance in page units that the mask will extend beyond the width of the stroke symbol of the in_below_features parameter value. This parameter value must be greater than or equal to zero. Choose a page unit (points, millimeters, and so on) for the margin; the default is points.",
          "datatype": "Linear Unit"
        },
        {
          "name": "margin_across",
          "explanation": "The width of the mask polygons across the in_above_features parameter value, which is the distance in page units that the mask will extend beyond the width of the stroke symbol of the in_above_features parameter value. This parameter value must be greater than or equal to zero. Choose a page unit (points, millimeters, and so on) for the margin; the default is points.",
          "datatype": "Linear Unit"
        },
        {
          "name": "out_overpass_feature_class",
          "explanation": "The output feature class that will be created to store polygons to mask the in_below_features parameter value.",
          "datatype": "Feature Class"
        },
        {
          "name": "out_mask_relationship_class",
          "explanation": "The output relationship class that will be created to store links between overpass mask polygons and the lines of the in_below_features parameter value.",
          "datatype": "Relationship Class"
        },
        {
          "name": "where_clause(Optional)",
          "explanation": "An SQL expression that will be used to select a subset of features from the in_above_features parameter valueUse quotation marks for field names, for example, \"MY_FIELD\".\r\n\r\n\r\n\r\nSee SQL reference for query expressions used in ArcGIS for more information about SQL syntax.",
          "datatype": "SQL Expression"
        },
        {
          "name": "out_decoration_feature_class(Optional)",
          "explanation": "The output line feature class that will be created to store parapet features.",
          "datatype": "Feature Class"
        },
        {
          "name": "wing_type(Optional)",
          "explanation": "Specifies the wing style that will be used for the parapet features.ANGLED—The wing tick of the parapet will be angled between the in_above_features parameter value and the in_below_features parameter value. This is the default. PARALLEL—The wing tick of the overpass wing will be parallel to the in_below_features parameter value.NONE—No wing ticks will be created on the parapets.",
          "datatype": "String"
        },
        {
          "name": "wing_tick_length(Optional)",
          "explanation": "The length of the parapet wings in page units. The length must be greater than or equal to zero; the default length is 1. Choose a page unit (points, millimeters, and so on) for the length; the default is points. This parameter does not apply when the wing_type parameter is set to NONE.",
          "datatype": "Linear Unit"
        }
      ],
      "summary": "Creates bridge parapets and polygon masks at line intersections to indicate overpasses.",
      "extraction_date": "2025-10-01T13:52:49.733078"
    },
    {
      "toolset": "cartography",
      "tool_name": "Create Underpass",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/create-underpass.htm",
      "parameters": [
        {
          "name": "in_above_features",
          "explanation": "The input line feature layer containing lines that intersect—and will be symbolized as passing above—lines in the in_below_features parameter value.",
          "datatype": "Layer"
        },
        {
          "name": "in_below_features",
          "explanation": "The input line feature layer containing lines that intersect—and will be symbolized as passing below—lines in the in_above_features parameter value. These features will be masked by the polygons created in the out_underpass_feature_class parameter value.",
          "datatype": "Layer"
        },
        {
          "name": "margin_along",
          "explanation": "The length of the mask polygons along the in_above_features parameter value, which is the distance in page units that the mask will extend beyond the width of the stroke symbol of the in_below_features parameter value. This parameter value must be greater than or equal to zero. Choose a page unit (points, millimeters, and so on) for the margin; the default is points.",
          "datatype": "Linear Unit"
        },
        {
          "name": "margin_across",
          "explanation": "The width of the mask polygons across the in_above_features parameter value, which is the distance in page units that the mask will extend beyond the width of the stroke symbol of the in_above_features parameter value. This parameter value must be greater than or equal to zero. Choose a page unit (points, millimeters, and so on) for the margin; the default is points.",
          "datatype": "Linear Unit"
        },
        {
          "name": "out_underpass_feature_class",
          "explanation": "The output feature class that will be created to store polygons to mask the in_below_features parameter value.",
          "datatype": "Feature Class"
        },
        {
          "name": "out_mask_relationship_class",
          "explanation": "The output relationship class that will be created to store links between underpass mask polygons and the lines of the in_below_features parameter value.",
          "datatype": "Relationship Class"
        },
        {
          "name": "where_clause(Optional)",
          "explanation": "An SQL expression used to select a subset of features from the in_above_features parameter value.Use quotation marks for field names, for example, \"MY_FIELD\".\r\n\r\n\r\n\r\nSee SQL reference for query expressions used in ArcGIS for more information about SQL syntax.",
          "datatype": "SQL Expression"
        },
        {
          "name": "out_decoration_feature_class(Optional)",
          "explanation": "The output line feature class that will be created to store parapet features.",
          "datatype": "Feature Class"
        },
        {
          "name": "wing_type(Optional)",
          "explanation": "Specifies the wing style that will be used for the parapet features.ANGLED—The wing tick of the parapet will be angled between the in_above_features parameter value and the in_below_features parameter value. This is the default. PARALLEL—The wing tick of the underpass wing will be parallel to the in_below_features parameter value. NONE—No wing ticks will be created on the parapets.",
          "datatype": "String"
        },
        {
          "name": "wing_tick_length(Optional)",
          "explanation": "The length of the parapet wings in page units. The length must be greater than or equal to zero; the default length is 1. Choose a page unit (points, millimeters, and so on) for the length; the default is points. This parameter does not apply when the wing_type parameter is set to NONE.",
          "datatype": "Linear Unit"
        }
      ],
      "summary": "Creates bridge parapets and polygon masks at line intersections to indicate underpasses.",
      "extraction_date": "2025-10-01T13:52:52.092487"
    },
    {
      "toolset": "cartography",
      "tool_name": "Disperse Markers",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/disperse-markers.htm",
      "parameters": [
        {
          "name": "in_point_features",
          "explanation": "The input point feature layer to be dispersed.",
          "datatype": "Layer"
        },
        {
          "name": "minimum_spacing",
          "explanation": "The minimum separation distance between individual point symbols in page units. A distance must be specified and must be greater than or equal to zero. When a positive value is specified, markers will be separated by that value; when a value of zero is specified, point symbols will touch. The default page unit is Points.",
          "datatype": "Linear Unit"
        },
        {
          "name": "dispersal_pattern(Optional)",
          "explanation": "Specifies the pattern that will be used to place the dispersed point symbols. A group of point symbols will have a center of mass derived from the locations of all points in the group. The center of mass is used as the anchor point around which the dispersal pattern operates.EXPANDED—The general pattern of the point symbols will be maintained as they are spread apart. Points that were exactly coincident will be dispersed to a circle around their center of mass. This is the default. RANDOM—Point symbols will be placed around the center of mass in a random dispersal that respects the minimum spacing. SQUARES—Point symbols will be placed in multiple square rings around the center of mass, ensuring that all points are placed as closely together as allowable by the minimum spacing parameter. RINGS—Point symbols will be placed in multiple circular rings around the center of mass, ensuring that all points are placed as closely together as allowable by the minimum spacing parameter. SQUARE—Point symbols will be placed evenly around the center of mass in a single square pattern. RING—Point symbols will be placed evenly around the center of mass in a single circular pattern. CROSS—Point symbols will be spaced evenly on horizontal and vertical axes originating from the center of mass. X_CROSS—Point symbols will be spaced evenly on 45° axes originating from the center of mass. COLUMN—Point symbols will be spaced evenly on a vertical axis originating from\r\nthe center of mass.\r\nROW—Point symbols will be spaced evenly on a horizontal axis originating from\r\nthe center of mass.",
          "datatype": "String"
        }
      ],
      "summary": "Finds point symbols that overlap or are too close to one another based on symbology at reference scale and spreads them apart based on a minimum spacing and dispersal pattern.",
      "extraction_date": "2025-10-01T13:52:54.560498"
    },
    {
      "toolset": "cartography",
      "tool_name": "Generate Hachures For Defined Slopes",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/generate-hachures-for-defined-slopes.htm",
      "parameters": [
        {
          "name": "upper_lines",
          "explanation": "The line features that represent the top of a slope.",
          "datatype": "Feature Layer"
        },
        {
          "name": "lower_lines",
          "explanation": "The line features that represent the bottom of a slope.",
          "datatype": "Feature Layer"
        },
        {
          "name": "output_feature_class",
          "explanation": "The output feature class containing multipart line or polygon hachures representing the slope area.",
          "datatype": "Feature Class"
        },
        {
          "name": "output_type(Optional)",
          "explanation": "Specifies whether polygon triangles or tick lines  will be created to represent the slope.POLYGON_TRIANGLES—Multipart polygon features will be created in which a triangular polygon is created for each hachure, with the base along the upper line. This is the default.LINE_TICKS—Multipart line features will be created in which a linear tick is created for each hachure.",
          "datatype": "String"
        },
        {
          "name": "fully_connected(Optional)",
          "explanation": "Specifies whether the upper and lower lines in the input data form fully connected areas.  If the upper and lower lines are not fully connected, choose NOT_CONNECTED to create hachures inside areas that are derived by connecting the extremities of the upper and lower features. If the upper and lower lines are fully connected, choose FULLY_CONNECTED to create hachures inside the fully enclosed areas. NOT_CONNECTED— The upper and lower features are not fully connected in the input data. New connections between the upper and lower features will be derived. This is the default.FULLY_CONNECTED—The upper and lower features are fully connected in the input data. New connections between features will not be derived.",
          "datatype": "Boolean"
        },
        {
          "name": "search_distance(Optional)",
          "explanation": "The distance used when deriving connections between the upper and lower features. When the extremities for the upper and lower feature are within this distance, the area between the features is used for creating hachures. The default value is 20 meters. When the fully_connected parameter is set to FULLY_CONNECTED, this parameter is ignored.",
          "datatype": "Linear Unit"
        },
        {
          "name": "interval(Optional)",
          "explanation": "The distance between the hachure ticks or triangles within the slope area. The default value is 10 meters.",
          "datatype": "Linear Unit"
        },
        {
          "name": "minimum_length(Optional)",
          "explanation": "The length a hachure tick or triangle must be to be created. Hachures that are shorter than this length will not  be created. The default value is 0 meters.",
          "datatype": "Linear Unit"
        },
        {
          "name": "alternate_hachures(Optional)",
          "explanation": "Specifies whether the length of every other hachure triangle or tick will differ.UNIFORM_HACHURES—All hachures will be of uniform  length, which is the distance between the upper and lower slope lines. This is the default.ALTERNATE_HACHURES—Every other hachure will be one-half the distance between the upper and lower slope lines.",
          "datatype": "Boolean"
        },
        {
          "name": "perpendicular(Optional)",
          "explanation": "Specifies whether the hachure ticks or triangles will be perpendicular to the upper slope line.NOT_PERPENDICULAR— Hachures will be oriented to obtain even spacing. This is the default.PERPENDICULAR—Hachures will be oriented perpendicularly to the upper line.",
          "datatype": "Boolean"
        },
        {
          "name": "polygon_base_width(Optional)",
          "explanation": "The width of the base of triangular polygon hachures. This parameter is enabled only when the  output_type parameter is set to polygon_triangles. The default value is 5 meters.",
          "datatype": "Linear Unit"
        }
      ],
      "summary": "Creates multipart lines or polygons representing the slope between the lines representing the upper and lower parts of a slope.",
      "extraction_date": "2025-10-01T13:52:57.125788"
    },
    {
      "toolset": "cartography",
      "tool_name": "Set Control Point At Intersect",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/set-control-point-at-intersect.htm",
      "parameters": [
        {
          "name": "in_line_or_polygon_features",
          "explanation": "The  line or polygon feature layer.",
          "datatype": "Feature Layer"
        },
        {
          "name": "in_features(Optional)",
          "explanation": "The line or polygon feature layer with features coincident to the input features.",
          "datatype": "Feature Layer"
        }
      ],
      "summary": "Creates a control point at vertices that are shared by one or more line or polygon features. This tool is commonly used to synchronize boundary symbology on adjacent polygons.",
      "extraction_date": "2025-10-01T13:52:59.594163"
    },
    {
      "toolset": "cartography",
      "tool_name": "Set Control Point By Angle",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/set-control-point-by-angle.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The  feature layer containing line or polygon features.",
          "datatype": "Feature Layer"
        },
        {
          "name": "maximum_angle",
          "explanation": "The angle used to determine whether a vertex along a line or polygon outline  will be set as a control point. The angle value must be greater than zero and less than 180 decimal degrees.",
          "datatype": "Double"
        }
      ],
      "summary": "Places a control point at vertices along a line or polygon outline where the angle created by a change in line direction is less than or equal to a specified maximum angle.",
      "extraction_date": "2025-10-01T13:53:02.029432"
    },
    {
      "toolset": "cartography",
      "tool_name": "Aggregate Points",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/aggregate-points.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input point features that will be assessed for proximity and clustering.",
          "datatype": "Feature Layer"
        },
        {
          "name": "out_feature_class",
          "explanation": "The feature class created to hold the polygons that represent the point clusters.",
          "datatype": "Feature Class"
        },
        {
          "name": "aggregation_distance",
          "explanation": "The distance between points that will be clustered.",
          "datatype": "Linear Unit"
        }
      ],
      "summary": "Creates polygon features around clusters of proximate point features.",
      "extraction_date": "2025-10-01T13:53:06.110140"
    },
    {
      "toolset": "cartography",
      "tool_name": "Aggregate Polygons",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/aggregate-polygons.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The polygon features to be aggregated. If this is a layer referencing a representation and shape overrides are present on the input features, the overridden shapes, not the feature shapes, will be considered in aggregation processing.",
          "datatype": "Feature Layer"
        },
        {
          "name": "out_feature_class",
          "explanation": "The output feature class to be created.",
          "datatype": "Feature Class"
        },
        {
          "name": "aggregation_distance",
          "explanation": "The distance to be satisfied between polygon boundaries for aggregation to occur. A distance must be specified, and it must be greater than zero. You can choose a preferred unit; the default is the feature unit.",
          "datatype": "Linear Unit"
        },
        {
          "name": "minimum_area(Optional)",
          "explanation": "The minimum area for an aggregated polygon to be retained. The default value is zero, that is, to keep all polygons. You can specify a preferred unit; the default is the feature unit.",
          "datatype": "Areal Unit"
        },
        {
          "name": "minimum_hole_size(Optional)",
          "explanation": "The minimum size of a polygon hole to be retained. The default value is zero, that is, to keep all polygon holes. You can specify a preferred unit; the default is the feature unit.",
          "datatype": "Areal Unit"
        },
        {
          "name": "orthogonality_option(Optional)",
          "explanation": "Specifies the characteristic of the output features when constructing the aggregated boundaries.NON_ORTHOGONAL—Organically shaped output features will be created. This is suitable for natural features, such as vegetation or soil polygons. This is the default.ORTHOGONAL—Orthogonally shaped output features will be created. This is suitable for preserving the geometric characteristic  of anthropogenic input features, such as building footprints.",
          "datatype": "Boolean"
        },
        {
          "name": "barrier_features[barrier_features,...](Optional)",
          "explanation": "The layers containing the line or polygon features that are aggregation barriers for input features. Features will not be aggregated across barrier features. Barrier features that are in geometric conflict with input features will be ignored.",
          "datatype": "Feature Layer"
        },
        {
          "name": "out_table(Optional)",
          "explanation": "A one-to-many relationship table that links the aggregated polygons to their source polygon features. This table contains two fields, OUTPUT_FID and INPUT_FID, that store the aggregated feature IDs and their source feature IDs, respectively. Use this table to  derive necessary attributes for the output features from their source features.\r\nThe default name for this table is the name of the output feature class, appended with _tbl. The default path is the same as the output feature class. If the output features location is specified in a feature dataset,\r\nthis table will be created one level higher, at the geodatabase\r\nlevel. No table is created when this parameter is left blank.",
          "datatype": "Table"
        },
        {
          "name": "aggregate_field(Optional)",
          "explanation": "The field that contains attributes for aggregation. Features must share the same attribute value to be considered for aggregation. For example, use a building classification field as the aggregate field to prevent commercial buildings from aggregating with  residential buildings.",
          "datatype": "Field"
        }
      ],
      "summary": "Combines polygons that are within a specified distance of each other into new polygons.",
      "extraction_date": "2025-10-01T13:53:08.710786"
    },
    {
      "toolset": "cartography",
      "tool_name": "Collapse Dual Lines To Centerline",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/collapse-dual-lines-to-centerline.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input dual-line features, such as road casings, from which centerlines will be derived.",
          "datatype": "Feature Layer"
        },
        {
          "name": "out_feature_class",
          "explanation": "The output feature class that will be created.",
          "datatype": "Feature Class"
        },
        {
          "name": "maximum_width",
          "explanation": "The maximum width of the dual-line features that will be used to derive a centerline. A value must be specified, and it must be greater than zero. You can specify a unit; the default is the feature unit.",
          "datatype": "Linear Unit"
        },
        {
          "name": "minimum_width(Optional)",
          "explanation": "The minimum width of the dual-line features that will be used to derive a centerline. The minimum width must be greater than or equal to zero, and it must be less than the maximum width. The default value is zero. You can specify a unit; the default is the feature unit.",
          "datatype": "Linear Unit"
        }
      ],
      "summary": "Derives centerlines from dual-line (double-line) features, such as road casings, based on specified width tolerances.",
      "extraction_date": "2025-10-01T13:53:11.079417"
    },
    {
      "toolset": "cartography",
      "tool_name": "Collapse Hydro Polygon",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/collapse-hydro-polygon.htm",
      "parameters": [
        {
          "name": "in_features[in_features,...]",
          "explanation": "One or more feature layers containing hydro polygons.",
          "datatype": "Feature Layer"
        },
        {
          "name": "out_line_feature_class",
          "explanation": "The line feature class containing the centerlines of the collapsed polygons. It contains centerlines of all input polygons including those that are not collapsed. This feature class has a COLLAPSED attribute that specifies whether the centerline feature represents a collapsed polygon.",
          "datatype": "Feature Class"
        },
        {
          "name": "merge_adjacent_input_polygons(Optional)",
          "explanation": "Specifies whether adjacent input polygons will be merged before calculating the centerlines.\r\n\r\n\r\nMERGE_ADJACENT—Input hydro polygons will be merged before calculating the centerlines. This is the\r\ndefault.NO_MERGE—Centerlines will be calculated from input hydro polygons that are not merged.",
          "datatype": "Boolean"
        },
        {
          "name": "connecting_features[connecting_features,...](Optional)",
          "explanation": "Input hydro line features that connect to the input hydro polygons to be collapsed. Line features will be created to maintain these connections.",
          "datatype": "Feature Layer"
        },
        {
          "name": "collapse_width(Optional)",
          "explanation": "The threshold width of an input hydro polygon to be considered for collapse. All polygons below the specified width will be collapsed. The default value is 0, which will collapse all features.",
          "datatype": "Linear Unit"
        },
        {
          "name": "collapse_width_tolerance(Optional)",
          "explanation": "A percentage tolerance within which features will be analyzed and the surrounding context will be considered when determining whether to collapse a feature. This is to minimize oscillations within the collapse. The default value is 20 percent. This parameter is applied only when the collapse_width parameter value is specified.",
          "datatype": "Double"
        },
        {
          "name": "minimum_length(Optional)",
          "explanation": "The minimum length required for a polygon to be retained in the output polygon  feature class. The minimum length is based on the length of the centerline created for the polygon. If the centerline of a polygon is longer than the  collapse width but shorter than  the minimum length, the polygon will not be included in the output polygon feature class. The default value is 0.\r\nThis parameter is applied only when the collapse_width parameter value is specified.",
          "datatype": "Linear Unit"
        },
        {
          "name": "out_poly_feature_class(Optional)",
          "explanation": "The polygon feature class containing the portions of the input hydro polygons  that are not collapsed. This parameter is applied only when the collapse_width parameter value is specified.",
          "datatype": "Feature Class"
        }
      ],
      "summary": "Collapses or partially collapses hydro polygons to a \r\ncenterline based on a collapse width.",
      "extraction_date": "2025-10-01T13:53:13.785378"
    },
    {
      "toolset": "cartography",
      "tool_name": "Collapse Road Detail",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/collapse-road-detail.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input features containing small enclosed road details, such as traffic circles, to be collapsed.",
          "datatype": "Feature Layer"
        },
        {
          "name": "collapse_distance",
          "explanation": "The diameter of, or distance across, the road detail that will be considered for collapse.",
          "datatype": "Linear Unit"
        },
        {
          "name": "output_feature_class",
          "explanation": "The output feature class containing the collapsed features—features that were modified to accommodate the collapse—and all unaffected features.",
          "datatype": "Feature Class"
        },
        {
          "name": "locking_field(Optional)",
          "explanation": "The field that contains locking information for the features. The data type must be short or long integer. A value of 1 indicates that a feature will not be collapsed.",
          "datatype": "Field"
        }
      ],
      "summary": "Collapses small, open  configurations of road segments that interrupt the general trend of a road network, such as traffic circles, and replaces them with a simplified depiction. Configurations are collapsed regardless of  road class if the diameter across the open area is less than or equal to the Collapse Distance   parameter value. All roads from the input collection that are not collapsed will be copied to the output feature class. Learn more about how Collapse Road Detail works This tool is generally used to simplify a relatively large-scale road collection at a smaller scale when it is appropriate to depict traffic circles or other small interruptions to the network as a simple intersection. At medium scales, it may be preferable to retain these configurations as separate features and possibly exaggerate them. In that case,  consider using the Resolve Road Conflicts tool instead to ensure that symbolized lines are displayed without symbol conflicts.  If both Resolve Road Conflicts and Collapse Road Detail tools will be run on the same collection of roads, it is recommended that you run Collapse Road Detail first.",
      "extraction_date": "2025-10-01T13:53:16.240929"
    },
    {
      "toolset": "cartography",
      "tool_name": "Create Cartographic Partitions",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/create-cartographic-partitions.htm",
      "parameters": [
        {
          "name": "in_features[in_features,...]",
          "explanation": "The input feature classes or layers with feature distribution and density, or vertex distribution and density, that determine the size and arrangement of output polygons. The input features are typically destined for subsequent processing with other geoprocessing tools. Typically, the input features, when considered simultaneously, would exceed memory limitations of other tools, so partitions are created to subdivide inputs for processing.",
          "datatype": "Feature Layer"
        },
        {
          "name": "out_features",
          "explanation": "The output polygon feature class of partitions each of which encloses a manageable number of input features or manageable number of input vertices not exceeding the number specified by the feature_count parameter.",
          "datatype": "Feature Class"
        },
        {
          "name": "feature_count",
          "explanation": "The ideal number of features or vertices (depending on the partition_method parameter value) to be enclosed by each polygon in the output feature class.\r\n  \r\nThe recommended count for features is 50,000, which is the default value. For vertices, 1 million vertices will consume approximately 0.5 GB of memory depending on the tool using the partitions. The feature count cannot be less than 500.",
          "datatype": "Long"
        },
        {
          "name": "partition_method(Optional)",
          "explanation": "Specifies whether the feature_count parameter references the ideal number of features or the ideal number of vertices in each output polygon. \r\nFEATURES—Partitioning  considers the number and density of individual features. This method is applicable in most cases and is the default.VERTICES—Partitioning considers the number and density of vertices. This method is used in cases in which the input data contains a relatively small number of very complex features, such as high-resolution country polygons, or when very long features are likely to cross multiple partition boundaries, such as contour lines.",
          "datatype": "String"
        }
      ],
      "summary": "Creates a mesh of polygon features that cover the input feature class in which each output polygon encloses no more than a specified number of  input features or input vertices. as determined by the density and distribution of the input features. The resulting  partition feature class is ideally suited for the  Cartographic Partitions geoprocessing environment setting. The Cartographic Partitions environment setting causes certain geoprocessing tools to load and process input features by partition. These tools operate contextually, meaning that multiple features, possibly from multiple themes, must be loaded simultaneously. Memory limitations are encountered with large datasets. Partitioning allows large datasets to be processed by these tools in portions sequentially.",
      "extraction_date": "2025-10-01T13:53:18.779473"
    },
    {
      "toolset": "cartography",
      "tool_name": "Delineate Built-Up Areas",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/delineate-built-up-areas.htm",
      "parameters": [
        {
          "name": "in_buildings[in_buildings,...]",
          "explanation": "The layers containing buildings with density and arrangement \r\nthat are used to define appropriate output built-up polygons. Multiple building layers can be assessed simultaneously. Building features can be points or polygons.",
          "datatype": "Feature Layer"
        },
        {
          "name": "identifier_field(Optional)",
          "explanation": "A  field in the input feature classes that will hold a status code indicating whether the input feature is part of the resulting built-up area .  This field must be either short or long integer type and common to all input layers if multiple input layers are used.0—The building is  not represented by an output built-up area polygon.1—The building is represented by an output built-up area polygon and is within the resulting polygon.2—The building is represented by an output built-up area polygon and is outside the resulting polygon.",
          "datatype": "String"
        },
        {
          "name": "edge_features[edge_features,...](Optional)",
          "explanation": "The layers that will be used to define the edges of the built-up area polygons. Typically, these are roads, but other common examples are rivers, coastlines, and administrative areas. Built-up area polygons snap to an edge feature if one is generally aligned with the trend of the polygon edge and within the grouping distance away. \r\nEdge features can be lines or polygons.",
          "datatype": "Feature Layer"
        },
        {
          "name": "grouping_distance",
          "explanation": "Buildings closer together than the grouping distance are considered collectively as candidates for representation by an output built-up area polygon. \r\nThis distance is measured from the edges of polygon buildings and the centers of point buildings.",
          "datatype": "Linear Unit"
        },
        {
          "name": "minimum_detail_size",
          "explanation": "The relative degree of detail in the output built-up area polygons. This is approximately to the minimum allowable diameter of \r\na hole or cavity in the built-up area polygon. The actual size and shape of holes and cavities within the polygon is determined also by the arrangement of the input buildings, the grouping distance, and the presence of edge features if they are used.",
          "datatype": "Linear Unit"
        },
        {
          "name": "out_feature_class",
          "explanation": "The output feature class containing built-up area polygons representing clustered arrangements of input buildings.",
          "datatype": "Feature Class"
        },
        {
          "name": "minimum_building_count(Optional)",
          "explanation": "The minimum number of buildings that must be collectively considered for representation by an output built-up area polygon. The default value is 4. The minimum building count must be greater than or equal to 0.",
          "datatype": "Long"
        }
      ],
      "summary": "Creates polygons to represent built-up areas by delineating densely clustered arrangements of buildings on small-scale maps. The boundaries—or edges—of the output polygons can be based on the location of other features such as roads or hydrology. Input buildings can be  attributed to identify those that can be replaced in maps by the built-up area polygons for a more generalized depiction.",
      "extraction_date": "2025-10-01T13:53:21.234976"
    },
    {
      "toolset": "cartography",
      "tool_name": "Merge Divided Roads",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/merge-divided-roads.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input linear road features that contain matched pairs of divided road lanes that will be merged into a single output line feature.",
          "datatype": "Feature Layer"
        },
        {
          "name": "merge_field",
          "explanation": "The field that contains road classification information. Only parallel, proximate roads of equal classification will be merged. A value of 0 (zero) locks a feature to prevent it from participating in merging. The data type must be short or long integer.",
          "datatype": "Field"
        },
        {
          "name": "merge_distance",
          "explanation": "The minimum distance apart, in the specified units, for equal-class, relatively parallel road features to be merged. This distance must be greater than zero. If the units are in  points, millimeters, centimeters, or inches,  the value is considered in page units and takes into account the reference scale.",
          "datatype": "Linear Unit"
        },
        {
          "name": "out_features",
          "explanation": "The output feature class containing single-line merged road features and all unmerged road features.",
          "datatype": "Feature Class"
        },
        {
          "name": "out_displacement_features(Optional)",
          "explanation": "The output polygon features containing the degree and direction of road displacement.",
          "datatype": "Feature Class"
        },
        {
          "name": "character_field(Optional)",
          "explanation": "A short or long integer field that indicate the character of road segments, independent of  their road classification. The tool uses these values to refine the assessment of  candidate feature pairs for merging. Use this parameter in unusual or complex road networks to improve the quality of the output. If there are null values (or if this parameter is not specified), the road character (and merge candidacy) is based only on the shapes and arrangement of features. Use value 999 to lock features from participating in a merge. Field values are assessed as follows: 0—Traffic circles or roundabouts1—Carriageways, boulevards, dual-lane highways, or other parallel trending roads2—On- or off-ramps, highway intersection connectors999—Features will not be merged",
          "datatype": "Field"
        },
        {
          "name": "out_table(Optional)",
          "explanation": "A many-to-many relationship table that links the merged  road features to their source features. This table contains two fields, OUTPUT_FID and INPUT_FID, which store the merged feature IDs and their source feature IDs, respectively. Use this table to  derive necessary attributes for the output features from their source features. No table is created when this parameter is left blank.",
          "datatype": "Table"
        }
      ],
      "summary": "Generates single-line road features in place of matched pairs of  divided road lanes. Matched pairs of roads or lanes are merged if they are the same road class, trend generally parallel to one another, and are within the merge distance apart. The road class is specified by the Merge  Field parameter. All nonmerged roads from the input collection are copied to the output feature class. Learn more about how Merge Divided Roads works This tool is frequently used to simplify a larger-scale road collection at a smaller scale when it is appropriate to depict divided highways and boulevards as a single line. At medium scales, it may be preferable to retain divided roads as separate features. In this case, you can use the Resolve Road Conflicts tool instead to ensure that symbolized lanes are displayed without symbol conflicts. If both the Resolve Road Conflicts and Merge Divided Roads tools will be run on the same collection of roads, use the Merge Divided Roads tool first.",
      "extraction_date": "2025-10-01T13:53:23.950216"
    },
    {
      "toolset": "cartography",
      "tool_name": "Simplify Building",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/simplify-building.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The building polygons to be simplified.",
          "datatype": "Feature Layer"
        },
        {
          "name": "out_feature_class",
          "explanation": "The output feature class to be created.",
          "datatype": "Feature Class"
        },
        {
          "name": "simplification_tolerance",
          "explanation": "The tolerance for building simplification. A tolerance must be specified, and it must be greater than zero. You can choose a preferred unit; the default is the feature unit.",
          "datatype": "Linear Unit"
        },
        {
          "name": "minimum_area(Optional)",
          "explanation": "The minimum area for a simplified building to be retained in feature units. The default value is zero, that is, to keep all buildings. You can specify a preferred unit; the default is the feature unit.",
          "datatype": "Areal Unit"
        },
        {
          "name": "conflict_option(Optional)",
          "explanation": "Specifies whether spatial conflicts—that is, overlapping or touching among buildings—will be identified. A SimBldFlag field is added to the output to store conflict flags. A value of 0 means no conflict; a value of 1 means conflict.NO_CHECK—Spatial conflicts will not be identified; the resulting buildings may overlap. This is the default. CHECK_CONFLICTS—Spatial conflicts will be identified and the conflicting buildings will be flagged.",
          "datatype": "Boolean"
        },
        {
          "name": "in_barriers[in_barriers,...](Optional)",
          "explanation": "The input layers containing features to act as barriers for simplification. Resulting simplified buildings will not touch or cross barrier features. For example, when simplifying buildings, the resulting simplified building areas do not cross road features defined as barriers.",
          "datatype": "Feature Layer"
        },
        {
          "name": "collapsed_point_option(Optional)",
          "explanation": "Specifies whether an output point feature class will be created to store the centers of any buildings that are removed because they are smaller than the minimum_area parameter value. The point output is derived, is named the same as the output feature class specified in the out_feature_class parameter but with a _Pnt suffix, and is located in the same folder.KEEP_COLLAPSED_POINTS— A derived output point feature class will be created to store the centers of buildings that are removed.NO_KEEP— An output point feature class will not be created. This is the default.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Simplifies the boundary or footprint of building polygons while maintaining their essential shape and size.",
      "extraction_date": "2025-10-01T13:53:26.861701"
    },
    {
      "toolset": "cartography",
      "tool_name": "Simplify Line",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/simplify-line.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input line features that will be simplified.",
          "datatype": "Feature Layer"
        },
        {
          "name": "out_feature_class",
          "explanation": "The simplified output line feature class. It will contain all the fields from the input feature class. The output line feature class is topologically correct. The tool does not introduce topology errors, but topological errors in the input data will be flagged in the output line feature class. The output feature class will include the InLine_FID and SimLnFlag fields to contain the input feature IDs and the input topological errors, respectively. A SimLnFlag value of 1 indicates that an input topological error is present; a value of 0 (zero) indicates that no input error is present.",
          "datatype": "Feature Class"
        },
        {
          "name": "algorithm",
          "explanation": "Specifies the line simplification algorithm that will be used.POINT_REMOVE—Critical points that preserve the essential shape of a line will be retained, and all other points will be removed (Douglas-Peucker). This is the default. BEND_SIMPLIFY—Critical bends will be retained, and extraneous bends will be removed from a line (Wang-Müller). WEIGHTED_AREA—Vertices that form triangles of effective area that have been weighted by triangle shape will be retained (Zhou-Jones).EFFECTIVE_AREA—Vertices that form triangles of effective area will be retained (Visvalingam-Whyatt).",
          "datatype": "String"
        },
        {
          "name": "tolerance",
          "explanation": "The degree of simplification that will be used. You can choose a preferred unit; otherwise, the units of the input will be used. The MinSimpTol and MaxSimpTol fields will be added to the output to store the tolerance that was used when processing occurred.For the POINT_REMOVE algorithm, the tolerance is the maximum allowable perpendicular distance between each vertex and the newly created line. For the BEND_SIMPLIFY algorithm, the tolerance is the diameter of a circle that approximates a significant bend.For the WEIGHTED_AREA algorithm, the square of the tolerance is the area of a significant triangle defined by three adjacent vertices. The further a triangle deviates from equilateral, the higher weight it is given, and the less likely it is to be removed.For the EFFECTIVE_AREA algorithm, the square of the tolerance is the area of a significant triangle defined by three adjacent vertices.",
          "datatype": "Linear Unit"
        },
        {
          "name": "error_resolving_option(Optional)",
          "explanation": "Legacy:This is a legacy parameter that is no longer used. It was formerly used to indicate how topological errors, possibly introduced during processing, were resolved. This parameter is still included in the tool's syntax for compatibility in scripts and models but is hidden from the Geoprocessing pane.",
          "datatype": "Boolean"
        },
        {
          "name": "collapsed_point_option(Optional)",
          "explanation": "Specifies whether an output point feature class will be created to store the endpoints of lines that are smaller than the spatial tolerance. The point output is derived; it will use the same name and location as the out_feature_class parameter value but with a _Pnt suffix.KEEP_COLLAPSED_POINTS—A derived output point feature class will be created to store the endpoints of collapsed zero length lines. This is the default. NO_KEEP—A derived output point feature class will not be created.",
          "datatype": "Boolean"
        },
        {
          "name": "error_checking_option(Optional)",
          "explanation": "Note:This is a legacy parameter that is no longer used. It was formerly used to indicate how topological errors, possibly introduced during processing, were handled. This parameter is still included in the tool's syntax for compatibility in scripts and models but is hidden from the Geoprocessing pane.",
          "datatype": "Boolean"
        },
        {
          "name": "in_barriers[in_barriers,...](Optional)",
          "explanation": "Inputs containing features to act as barriers for simplification. Resulting simplified lines will not touch or cross barrier features. For example, when simplifying contour lines, spot height features input as barriers ensure that the simplified contour lines will not simplify across these points. The output will not violate the elevation as described by measured spot heights.",
          "datatype": "Feature Layer"
        },
        {
          "name": "error_option(Optional)",
          "explanation": "Specifies how topological errors will be handled. Topological errors may be introduced in the simplification process and can include lines crossing or overlapping lines.NO_CHECK—Topological errors will not be identified. This is the default. FLAG_ERRORS—Topological errors will be flagged.RESOLVE_ERRORS—Topological errors will be resolved.",
          "datatype": "String"
        }
      ],
      "summary": "Simplifies lines by removing relatively extraneous vertices while preserving essential shape.",
      "extraction_date": "2025-10-01T13:53:29.652726"
    },
    {
      "toolset": "cartography",
      "tool_name": "Simplify Polygon",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/simplify-polygon.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input polygon features that will be simplified.",
          "datatype": "Feature Layer"
        },
        {
          "name": "out_feature_class",
          "explanation": "The simplified output polygon feature class. It will contain all the fields from the input feature class. The output polygon feature class is topologically correct. The tool does not introduce topology errors, but topological errors in the input data will be flagged in the output polygon feature class. The output feature class will include the InPoly_FID and SimPgnFlag fields to contain the input feature IDs and the input topological errors or discrepancies, respectively.  The SimPgnFlag attribute values are as follows:SimPgnFlag = 0 indicates that no errors are present.SimPgnFlag = 1 indicates a topological error is present.SimPgnFlag = 2 indicates features that have been split by a partition and are now smaller than the minimum area after simplification. The flag may appear on only one part of the split feature. These features will be retained in the output feature class. This situation occurs only when the Cartographic Partitions environment setting is used.",
          "datatype": "Feature Class"
        },
        {
          "name": "algorithm",
          "explanation": "Specifies the polygon simplification algorithm that will be used.POINT_REMOVE—Critical points that preserve the essential shape of a polygon outline will be retained, and all other points will be removed (Douglas-Peucker). This is the default. BEND_SIMPLIFY—Critical bends will be retained, and extraneous bends will be removed from a line (Wang-Müller). WEIGHTED_AREA—Vertices that form triangles of effective area that have been weighted by triangle shape will be retained (Zhou-Jones).EFFECTIVE_AREA—Vertices that form triangles of effective area will be retained (Visvalingam-Whyatt).",
          "datatype": "String"
        },
        {
          "name": "tolerance",
          "explanation": "The degree of simplification that will be used. You can choose a preferred unit; otherwise, the units of the input will be used. The MinSimpTol and MaxSimpTol fields will be added to the output to store the tolerance that was used when processing occurred.For the POINT_REMOVE algorithm, the tolerance is the maximum allowable perpendicular distance between each vertex and the newly created line. For the BEND_SIMPLIFY algorithm, the tolerance is the diameter of a circle that approximates a significant bend.For the WEIGHTED_AREA algorithm, the square of the tolerance is the area of a significant triangle defined by three adjacent vertices. The further a triangle deviates from equilateral, the higher weight it is given, and the less likely it is to be removed.For the EFFECTIVE_AREA algorithm, the square of the tolerance is the area of a significant triangle defined by three adjacent vertices.",
          "datatype": "Linear Unit"
        },
        {
          "name": "minimum_area(Optional)",
          "explanation": "The minimum area for a polygon to be retained. The default value is zero, that is, to keep all polygons. You can choose a preferred unit for the specified value; otherwise, the units of the input will be used.",
          "datatype": "Areal Unit"
        },
        {
          "name": "error_option(Optional)",
          "explanation": "Specifies how topological errors will be handled. Topological errors may be introduced in the simplification process and can include lines crossing or overlapping lines.NO_CHECK—Topological errors will not be identified. This is the default. FLAG_ERRORS—Topological errors will be flagged.RESOLVE_ERRORS—Topological errors will be resolved.",
          "datatype": "String"
        },
        {
          "name": "collapsed_point_option(Optional)",
          "explanation": "Specifies whether an output point feature class will be created to store the centers of polygons that are removed because they are smaller than the minimum_area parameter value. The point output is derived; it will use the same name and location as the out_feature_class parameter value but with a _Pnt suffix. KEEP_COLLAPSED_POINTS—A derived output point feature class will be created to store the centers of polygons that are removed because they are smaller than the minimum area. This is the default. NO_KEEP—A derived output point feature class will not be created.",
          "datatype": "Boolean"
        },
        {
          "name": "in_barriers[in_barriers,...](Optional)",
          "explanation": "The inputs containing features to act as barriers for simplification. Resulting simplified polygons will not touch or cross barrier features. For example, when simplifying forested areas, the resulting simplified forest polygons will not cross road features defined as barriers.",
          "datatype": "Feature Layer"
        }
      ],
      "summary": "Simplifies polygons by removing relatively extraneous vertices while preserving essential shape.",
      "extraction_date": "2025-10-01T13:53:32.547140"
    },
    {
      "toolset": "cartography",
      "tool_name": "Simplify Shared Edges",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/simplify-shared-edges.htm",
      "parameters": [
        {
          "name": "in_features[in_features,...]",
          "explanation": "The lines or polygons to be simplified.",
          "datatype": "Feature Layer"
        },
        {
          "name": "algorithm",
          "explanation": "Specifies the simplification algorithm.POINT_REMOVE—Retains critical points that preserve the essential shape of a polygon outline and removes all other points (Douglas-Peucker). This is the default. BEND_SIMPLIFY— Retains the critical bends and removes extraneous bends from a line (Wang-Müller). WEIGHTED_AREA—Retains vertices that form triangles of effective area that have been weighted by triangle shape (Zhou-Jones).EFFECTIVE_AREA— Retains vertices that form triangles of effective area (Visvalingam-Whyatt).",
          "datatype": "String"
        },
        {
          "name": "tolerance",
          "explanation": "Determines the degree of simplification. If a unit is not specified, the units of the input will be used.For the POINT_REMOVE algorithm, the tolerance is the maximum allowable perpendicular distance between each vertex and the new line created. For the BEND_SIMPLIFY algorithm, the tolerance is the diameter of a circle that approximates a significant bend.For the WEIGHTED_AREA algorithm, the square of the tolerance is the area of a significant triangle defined by three adjacent vertices. The further a triangle deviates from equilateral, the higher weight it is given, and the less likely it is to be removed.For the EFFECTIVE_AREA algorithm, the square of the tolerance is the area of a significant triangle defined by three adjacent vertices.",
          "datatype": "Linear Unit"
        },
        {
          "name": "shared_edge_features[shared_edge_features,...](Optional)",
          "explanation": "Line or polygon features that will be simplified along edges shared with input features. Other edges are not simplified.",
          "datatype": "Feature Layer"
        },
        {
          "name": "minimum_area(Optional)",
          "explanation": "The minimum area for a polygon to be retained. The default value is zero, which will retain all polygons. A unit can be specified; if no unit is specified, the unit of the input will be used. This parameter is available only when at least one of the inputs is a polygon feature class.",
          "datatype": "Areal Unit"
        },
        {
          "name": "in_barriers[in_barriers,...](Optional)",
          "explanation": "Point, line, or polygon features that act as barriers for the simplification. The simplified features will not touch or cross barrier features.",
          "datatype": "Feature Layer"
        }
      ],
      "summary": "Simplifies the edges of input features while maintaining the topological relationship with edges shared with other features.",
      "extraction_date": "2025-10-01T13:53:36.272493"
    },
    {
      "toolset": "cartography",
      "tool_name": "Smooth Line",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/smooth-line.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The line features to be smoothed.",
          "datatype": "Feature Layer"
        },
        {
          "name": "out_feature_class",
          "explanation": "The output feature class to be created.",
          "datatype": "Feature Class"
        },
        {
          "name": "algorithm",
          "explanation": "Specifies the smoothing algorithm.PAEK—This is the acronym for Polynomial Approximation with Exponential Kernel. A smoothed line that will not pass through the input line vertices will be calculated. This is the default. BEZIER_INTERPOLATION—Bezier curves will be fitted between vertices. The resulting\r\nlines pass through the vertices of the input lines. This algorithm\r\ndoes not require a tolerance. Bezier curves will be approximated in\r\nthe output.",
          "datatype": "String"
        },
        {
          "name": "tolerance",
          "explanation": "A tolerance used by the PAEK algorithm. A tolerance must be specified, and it must be greater than zero. You can choose a preferred unit; the default is the feature unit. You must enter a 0 as a placeholder when using the BEZIER_INTERPOLATION smoothing algorithm.",
          "datatype": "Linear Unit"
        },
        {
          "name": "endpoint_option(Optional)",
          "explanation": "This is a legacy parameter that is no\r\nlonger used. It was formerly used to specify whether endpoints of closed lines would be preserved. This\r\nparameter is still included in the tool's syntax for compatibility\r\nin scripts and models but is hidden from the tool's dialog\r\nbox.Specifies whether the endpoints of closed lines will be preserved. This option works with the PAEK algorithm only.FIXED_CLOSED_ENDPOINT—The endpoint of a closed line will be preserved. This is the default. NO_FIXED—The endpoint of a closed line will not be preserved; it will be smoothed.",
          "datatype": "Boolean"
        },
        {
          "name": "error_option(Optional)",
          "explanation": "Specifies how topological errors (possibly introduced in the process, such as line crossing or overlapping) will be handled.NO_CHECK—Topological errors will not be identified. This is the default. FLAG_ERRORS—If topological errors are found, they will be flagged. RESOLVE_ERRORS—If topological errors are found, they will be resolved.",
          "datatype": "String"
        },
        {
          "name": "in_barriers[in_barriers,...](Optional)",
          "explanation": "Inputs containing features that will act as barriers for smoothing. The resulting smoothed lines will not touch or cross barrier features. For example, when smoothing contour lines, spot height features input as barriers ensure that the smoothed contour lines will not be smooth across these points. The output will not violate the elevation as described by measured spot heights.",
          "datatype": "Feature Layer"
        }
      ],
      "summary": "Smooths sharp angles in lines to improve aesthetic or cartographic quality. Learn more about how the Smooth Line and Smooth Polygon tools work.",
      "extraction_date": "2025-10-01T13:53:38.878637"
    },
    {
      "toolset": "cartography",
      "tool_name": "Smooth Polygon",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/smooth-polygon.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The polygon features to be smoothed.",
          "datatype": "Feature Layer"
        },
        {
          "name": "out_feature_class",
          "explanation": "The output polygon feature class to be created.",
          "datatype": "Feature Class"
        },
        {
          "name": "algorithm",
          "explanation": "Specifies the smoothing algorithm.PAEK—This is the acronym for Polynomial Approximation with Exponential Kernel. A smoothed polygon that will not pass through the input polygon vertices will be calculated. This is the default. BEZIER_INTERPOLATION—Bezier curves will be fitted between vertices. The resulting\r\npolygons pass through the vertices of the input polygons. This algorithm\r\ndoes not require a tolerance. Bezier curves will be approximated in\r\nthe output.",
          "datatype": "String"
        },
        {
          "name": "tolerance",
          "explanation": "Sets a tolerance used by the PAEK algorithm. A tolerance must be specified, and it must be greater than zero. You can choose a preferred unit; the default is the feature unit. You must enter a 0 as a placeholder when using the BEZIER_INTERPOLATION smoothing algorithm.",
          "datatype": "Linear Unit"
        },
        {
          "name": "endpoint_option(Optional)",
          "explanation": "This is a legacy parameter that is no\r\nlonger used. It was formerly used to specify whether the endpoint of an isolated polygon ring would be preserved. This\r\nparameter is still included in the tool's syntax for compatibility\r\nin scripts and models but is hidden from the tool's dialog\r\nbox.Specifies whether the endpoints of isolated polygon rings will be preserved. This option works with the PAEK algorithm only.FIXED_ENDPOINT—The endpoint of an isolated polygon ring will be preserved. This is the default. NO_FIXED—The endpoint of an isolated polygon ring will not be preserved; it will be smoothed.",
          "datatype": "Boolean"
        },
        {
          "name": "error_option(Optional)",
          "explanation": "Specifies how topological errors (possibly introduced in the process, such as line crossing or overlapping) will be handled.NO_CHECK—Topological errors will not be identified. This is the default. FLAG_ERRORS—If topological errors are found, they will be flagged. RESOLVE_ERRORS—If topological errors are found, they will be resolved.",
          "datatype": "String"
        },
        {
          "name": "in_barriers[in_barriers,...](Optional)",
          "explanation": "Inputs containing features that will act as barriers for smoothing. The resulting smoothed polygons will not touch or cross barrier features.",
          "datatype": "Feature Layer"
        }
      ],
      "summary": "Smooths sharp angles in polygon outlines to improve aesthetic or cartographic quality. Learn more about how the Smooth Line and Smooth Polygon tools work.",
      "extraction_date": "2025-10-01T13:53:41.666365"
    },
    {
      "toolset": "cartography",
      "tool_name": "Smooth Shared Edges",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/smooth-shared-edges.htm",
      "parameters": [
        {
          "name": "in_features[in_features,...]",
          "explanation": "The lines or polygons to be smoothed.",
          "datatype": "Feature Layer"
        },
        {
          "name": "algorithm",
          "explanation": "Specifies the smoothing algorithm.PAEK— Calculates a smoothed polygon that will not pass through the input polygon vertices. It is the acronym for Polynomial Approximation with Exponential Kernel. This is the default. BEZIER_INTERPOLATION—Fits Bezier curves between vertices. The resulting\r\npolygons pass through the vertices of the input polygons. This algorithm\r\ndoes not require a tolerance. Bezier curves will be approximated in\r\nthe output.",
          "datatype": "String"
        },
        {
          "name": "tolerance",
          "explanation": "Determines the degree of smoothing. A unit can be specified; if no unit is specified, the unit of the input will be used. This is only used for the PAEK algorithm. The parameter will not appear on the tool dialog box when Bezier interpolation is selected and, in scripting, a value of 0 must be used.",
          "datatype": "Linear Unit"
        },
        {
          "name": "shared_edge_features[shared_edge_features,...](Optional)",
          "explanation": "Line or polygon features that will be smoothed along edges shared with input features. Other edges are not smoothed.",
          "datatype": "Feature Layer"
        },
        {
          "name": "in_barriers[in_barriers,...](Optional)",
          "explanation": "Point, line, or polygon features that act as barriers for smoothing. The smoothed features will not touch or cross barrier features.",
          "datatype": "Feature Layer"
        }
      ],
      "summary": "Smooths the edges of the input features while maintaining the topological relationship with edges shared with other features.",
      "extraction_date": "2025-10-01T13:53:45.467796"
    },
    {
      "toolset": "cartography",
      "tool_name": "Thin Road Network",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/thin-road-network.htm",
      "parameters": [
        {
          "name": "in_features[in_features,...]",
          "explanation": "The input linear roads that will be thinned to create a simplified collection for display at smaller scales.",
          "datatype": "Feature Layer"
        },
        {
          "name": "minimum_length",
          "explanation": "An indication of the shortest road segment that is sensible to display at the output scale. This controls the resolution, or density, of the resulting road collection.  If the units are in points, millimeters, centimeters, or inches, the value is considered in page units and the reference scale is taken into account.",
          "datatype": "Linear Unit"
        },
        {
          "name": "invisibility_field",
          "explanation": "The field that stores the results of the tool. Features that participate in the resulting simplified road collection have a  value of 0 (zero). Those that are extraneous have a value of 1. A layer definition query can be used to display the resulting road collection. This field must be present and named the same for each input feature class. The data type must be short or long integer.",
          "datatype": "String"
        },
        {
          "name": "hierarchy_field",
          "explanation": "The field that contains hierarchical ranking of feature importance in which 1 is very important and larger integers reflect decreasing importance. A value of 0 forces the feature to remain visible in the output collection. This field must be present and named the same for each input feature class. The data type must be short or long integer. Hierarchy values equal to NULL are not accepted and will produce an error.",
          "datatype": "String"
        }
      ],
      "summary": "Generates a simplified road network that retains connectivity and general character for display at a smaller scale. This tool does not generate new output. It assigns values in the input data's Invisibility Field parameter value to identify features that are extraneous. These features can then be removed from view to result in a simplified, yet representative, collection of roads. No feature geometry is altered or deleted. Features are not actually deleted by Thin Road Network. To actually remove features, consider using the Trim Line tool. The resulting simplified road collection  is determined by feature significance, importance, and density. Segments that participate in very long itineraries across the extent of the data  are more significant than those required only for local travel. Road classification, or importance, is specified by the Hierarchy Field parameter. The density of the resulting street network is determined by the Minimum Length parameter, which corresponds to the shortest segment that is visually sensible to show at scale. See How Thin Road Network works to learn more and review a table of recommended minimum length values to use as a starting point. A warning is issued if the input features are not in a projected coordinate system. This tool relies on  linear distance units, which will create unexpected results in an unprojected coordinate system. It is recommended that you run this tool on data in a projected coordinate system to ensure valid results. An error occurs and the tool will not process if the coordinate system is missing or unknown.",
      "extraction_date": "2025-10-01T13:53:48.058614"
    },
    {
      "toolset": "cartography",
      "tool_name": "Generalizing large datasets using partitions",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/generalizing-large-datasets-using-partitions.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T13:53:50.689647"
    },
    {
      "toolset": "cartography",
      "tool_name": "Automating conflict resolution and generalization workflows with geoprocessing",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/conflict-resolution-and-generalization-with-geoprocessing.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T13:53:54.281715"
    },
    {
      "toolset": "cartography",
      "tool_name": "Understanding conflict resolution and generalization",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/understanding-conflict-resolution-and-generalization.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T13:53:58.117618"
    },
    {
      "toolset": "cartography",
      "tool_name": "Detect Graphic Conflict",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/detect-graphic-conflict.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input feature layer containing symbolized features. CAD, coverage, or VPF annotation, and dimensions, charts, dot-density or proportional symbols, raster layers, network datasets, and 3D symbols are not acceptable inputs.",
          "datatype": "Layer"
        },
        {
          "name": "conflict_features",
          "explanation": "The feature layer containing symbolized features potentially in conflict with symbolized features  in the input layer.",
          "datatype": "Layer"
        },
        {
          "name": "out_feature_class",
          "explanation": "The output feature class to be created to store conflict polygons. It cannot be one of the feature classes associated with the input layers.",
          "datatype": "Feature Class"
        },
        {
          "name": "conflict_distance(Optional)",
          "explanation": "The area where input and conflict symbology is closer than a certain distance. Temporary buffers one-half the size of the conflict distance value\r\nare created around symbols in both the\r\ninput and conflict layers. Conflict polygons will be generated\r\nwhere these buffers overlap. Conflict distance is measured in page units (points, inches, millimeters,  or centimeters). If you enter a conflict distance in map units, it will be converted to page units using the reference scale. The default conflict distance is 0, where no buffers are created and only symbols that physically overlap one another are detected as conflicts.",
          "datatype": "Linear Unit"
        },
        {
          "name": "line_connection_allowance(Optional)",
          "explanation": "The radius of a circle, centered where lines join, within which graphic overlaps won't be detected. This parameter is only considered when the input layer and the conflict layer are identical. Zero allowance will detect a conflict at each line join (if end caps are overlapping). Line connection allowance is calculated in page units (points, inches, millimeters, or centimeters). If you enter an allowance in map units, it will be converted to page units using the reference scale. The value cannot be negative; the default value is 1 point.",
          "datatype": "Linear Unit"
        }
      ],
      "summary": "Creates polygons where two or more symbolized features graphically conflict.",
      "extraction_date": "2025-10-01T13:54:02.562296"
    },
    {
      "toolset": "cartography",
      "tool_name": "Propagate Displacement",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/propagate-displacement.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input feature layer containing features that may be in conflict. May be point, line, or polygon.",
          "datatype": "Feature Layer"
        },
        {
          "name": "displacement_features",
          "explanation": "The displacement polygon features created by the Resolve Road Conflicts or the Merge Divided Roads tools that contain the degree and direction of road displacement that took place. These polygons dictate the amount of displacement that will be propagated to the input features.",
          "datatype": "Feature Layer"
        },
        {
          "name": "adjustment_style",
          "explanation": "Defines the type of adjustment that will be used when displacing input features. AUTO—The tool will decide for each input feature whether a SOLID or an ELASTIC adjustment is most appropriate. In general, features with orthogonal shapes will have SOLID adjustment applied, while organically shaped features will have ELASTIC adjustment applied. This is the default. SOLID—The feature will be translated. All vertices will move the same distance and direction. Topological errors may be introduced. This option is most useful when input features have regular geometric shapes. ELASTIC—The vertices of the feature may be moved independently to best fit the feature to the road network. The shape of the feature may be modified slightly. Topological errors are less likely to be introduced. This option only applies to line and polygon input features. This option is most useful for organically shaped input features.",
          "datatype": "String"
        }
      ],
      "summary": "Propagates the displacement resulting from road adjustment in the Resolve Road Conflicts  and Merge Divided Roads tools to adjacent features to reestablish spatial relationships. An optional output of both the Resolve Road Conflicts  and Merge Divided Roads tools is a displacement feature class. Displacement features store the amount and direction of change from the initial state of the data before these tools are run. Displacement information can then be  applied to nearby features from different themes to ensure that spatial relationships are retained using this tool. For example, if roadways are separated by the Resolve Road Conflicts tool, it is often necessary to shift adjacent buildings along the roads accordingly.",
      "extraction_date": "2025-10-01T13:54:07.064728"
    },
    {
      "toolset": "cartography",
      "tool_name": "Resolve Road Conflicts",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/resolve-road-conflicts.htm",
      "parameters": [
        {
          "name": "in_layers[in_layers,...]",
          "explanation": "The input feature layers containing symbolized road features that may be in conflict.",
          "datatype": "Layer"
        },
        {
          "name": "hierarchy_field",
          "explanation": "The field that contains hierarchical ranking of feature importance in which 1 is very important and larger integers reflect decreasing importance. A value of 0 (zero) locks the feature to ensure that it is not moved. This field must be present and named the same for all input feature classes. The data type must be short or long integer.",
          "datatype": "String"
        },
        {
          "name": "out_displacement_features(Optional)",
          "explanation": "The output polygon features containing the degree and direction of road displacement that will be used by the Propagate Displacement tool to preserve spatial relationships.",
          "datatype": "Feature Class"
        }
      ],
      "summary": "Resolves graphic conflicts among symbolized road features by adjusting portions of line segments. Learn more about how Resolve Road Conflicts works Caution:This tool does not produce output layers. Instead, it alters the geometry of the source feature classes of the input  layers. It is recommended that you make a copy of the input features before you run this tool.",
      "extraction_date": "2025-10-01T13:54:09.762559"
    },
    {
      "toolset": "cartography",
      "tool_name": "Merge Divided Roads",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/merge-divided-roads.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input linear road features that contain matched pairs of divided road lanes that will be merged into a single output line feature.",
          "datatype": "Feature Layer"
        },
        {
          "name": "merge_field",
          "explanation": "The field that contains road classification information. Only parallel, proximate roads of equal classification will be merged. A value of 0 (zero) locks a feature to prevent it from participating in merging. The data type must be short or long integer.",
          "datatype": "Field"
        },
        {
          "name": "merge_distance",
          "explanation": "The minimum distance apart, in the specified units, for equal-class, relatively parallel road features to be merged. This distance must be greater than zero. If the units are in  points, millimeters, centimeters, or inches,  the value is considered in page units and takes into account the reference scale.",
          "datatype": "Linear Unit"
        },
        {
          "name": "out_features",
          "explanation": "The output feature class containing single-line merged road features and all unmerged road features.",
          "datatype": "Feature Class"
        },
        {
          "name": "out_displacement_features(Optional)",
          "explanation": "The output polygon features containing the degree and direction of road displacement.",
          "datatype": "Feature Class"
        },
        {
          "name": "character_field(Optional)",
          "explanation": "A short or long integer field that indicate the character of road segments, independent of  their road classification. The tool uses these values to refine the assessment of  candidate feature pairs for merging. Use this parameter in unusual or complex road networks to improve the quality of the output. If there are null values (or if this parameter is not specified), the road character (and merge candidacy) is based only on the shapes and arrangement of features. Use value 999 to lock features from participating in a merge. Field values are assessed as follows: 0—Traffic circles or roundabouts1—Carriageways, boulevards, dual-lane highways, or other parallel trending roads2—On- or off-ramps, highway intersection connectors999—Features will not be merged",
          "datatype": "Field"
        },
        {
          "name": "out_table(Optional)",
          "explanation": "A many-to-many relationship table that links the merged  road features to their source features. This table contains two fields, OUTPUT_FID and INPUT_FID, which store the merged feature IDs and their source feature IDs, respectively. Use this table to  derive necessary attributes for the output features from their source features. No table is created when this parameter is left blank.",
          "datatype": "Table"
        }
      ],
      "summary": "Generates single-line road features in place of matched pairs of  divided road lanes. Matched pairs of roads or lanes are merged if they are the same road class, trend generally parallel to one another, and are within the merge distance apart. The road class is specified by the Merge  Field parameter. All nonmerged roads from the input collection are copied to the output feature class. Learn more about how Merge Divided Roads works This tool is frequently used to simplify a larger-scale road collection at a smaller scale when it is appropriate to depict divided highways and boulevards as a single line. At medium scales, it may be preferable to retain divided roads as separate features. In this case, you can use the Resolve Road Conflicts tool instead to ensure that symbolized lanes are displayed without symbol conflicts. If both the Resolve Road Conflicts and Merge Divided Roads tools will be run on the same collection of roads, use the Merge Divided Roads tool first.",
      "extraction_date": "2025-10-01T13:54:12.444071"
    },
    {
      "toolset": "cartography",
      "tool_name": "Resolve Building Conflicts",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/resolve-building-conflicts.htm",
      "parameters": [
        {
          "name": "in_buildings[in_buildings,...]",
          "explanation": "The input layers containing building features that may be in conflict or smaller than allowable size. Buildings can be either points or polygons. Buildings will be modified to resolve conflicts with other buildings and with barrier features. When point building layers are used as inputs, the Angle property of the marker symbol layer must be set to a field in the feature class. This field will  store the rotation adjustments. If multiple marker symbol layers in the same point symbol have the Angle property connected to the same field, the Rotate clockwise setting must match in each of those marker symbol layers.",
          "datatype": "Layer"
        },
        {
          "name": "invisibility_field",
          "explanation": "The short or long integer field that stores the invisibility values that can be used to remove some buildings from display to resolve symbol conflicts. Buildings with a value of 1 will be removed from display; those with a value of 0 will not be removed. Use a definition query on the layer to display visible buildings only. No features are deleted.",
          "datatype": "String"
        },
        {
          "name": "in_barriers[[Layer, Boolean, Linear Unit],...]",
          "explanation": "The layers containing the linear or polygon features that are conflict barriers for input building features. Buildings will be modified to resolve conflicts between buildings and barriers. The orient value is Boolean, specifying whether buildings will be oriented to the barrier layer. Gap specifies the distance that buildings will move toward or away from the barrier layer. A unit must be provided with the value. A gap value of 0 will snap buildings directly to the edge of the barrier line or outline symbology.A null (unspecified) gap value means that buildings will not be moved toward or away from barrier lines or outlines except movement required by conflict resolution.  Note:If no unit is provided with the gap value (that is, 10 instead of 10 meters), the linear unit from the input feature's coordinate system will be used.",
          "datatype": "Value Table"
        },
        {
          "name": "building_gap",
          "explanation": "The minimum allowable distance between symbolized buildings at scale. Buildings that are closer together will be displaced or hidden to enforce this distance. The minimum allowable distance is set relative to the reference scale (that is, 15 meters at 1:50,000 scale). The value is 0 if the reference scale is not set.",
          "datatype": "Linear Unit"
        },
        {
          "name": "minimum_size",
          "explanation": "The minimum allowable size of the shortest side of a rotated best-fit bounding box around the symbolized building feature drawn at the reference scale. Buildings with a bounding box side smaller than this value will be enlarged to meet it. Resizing may occur nonproportionally, resulting in a change to the building morphology.",
          "datatype": "Linear Unit"
        },
        {
          "name": "hierarchy_field(Optional)",
          "explanation": "The short or long integer field that contains hierarchical ranking of feature importance in which 1 is very important and larger integers reflect decreasing importance. A value of 0 causes the building to  retain visibility, although it may be moved somewhat to resolve conflicts. If this parameter is not used, feature importance will be assessed by the tool based on perimeter length and proximity to barrier features.",
          "datatype": "String"
        }
      ],
      "summary": "Resolves symbol conflicts among buildings with respect to linear barrier features by moving, resizing, or hiding buildings.",
      "extraction_date": "2025-10-01T13:54:15.173919"
    },
    {
      "toolset": "cartography",
      "tool_name": "Calculate Adjacent Fields",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/calculate-adjacent-fields.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The polygon grid index features that will be appended with adjacent field data.",
          "datatype": "Feature Layer"
        },
        {
          "name": "in_field",
          "explanation": "The field whose values will be used to populate adjacent field data.",
          "datatype": "Field"
        }
      ],
      "summary": "Creates fields and calculates values for the neighboring pages (polygon) of a grid polygon feature class. The most common use case for this tool is to populate fields that can be used to label the adjacent pages in a map book. This tool appends eight new fields (each field representing one of the eight points of the compass: North, Northeast, East, Southeast, South, Southwest, West, and Northwest) to the input feature class and calculates values that identify the adjacent (neighboring) polygons, in each cardinal direction, for each feature in the input feature class.",
      "extraction_date": "2025-10-01T13:54:19.541867"
    },
    {
      "toolset": "cartography",
      "tool_name": "Calculate Central Meridian and Parallels",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/calculate-central-meridian-and-parallels.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input feature layer.",
          "datatype": "Feature Layer"
        },
        {
          "name": "in_field",
          "explanation": "The text field where the coordinate system string will be stored.",
          "datatype": "Field"
        },
        {
          "name": "standard_offset(Optional)",
          "explanation": "The percentage of the height of the input feature used to offset the standard parallels from the center latitude of the input feature. The default is 25 percent or 0.25. Negative values and values greater than 1 are acceptable inputs.",
          "datatype": "Double"
        }
      ],
      "summary": "Calculates the central meridian and optional standard parallels based on the center point of a feature's extent; stores this coordinate system as a spatial reference string in a specified text field; and repeats this for a set, or subset, of features. This field can be used with a spatial map series  to update the data frame coordinate system for each page.",
      "extraction_date": "2025-10-01T13:54:22.103470"
    },
    {
      "toolset": "cartography",
      "tool_name": "spatial map series",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/layouts/spatial-map-series.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T13:54:24.554537"
    },
    {
      "toolset": "cartography",
      "tool_name": "Calculate Grid Convergence Angle",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/calculate-grid-convergence-angle.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input feature class (points, multipoints, lines, and polygons).",
          "datatype": "Feature Layer"
        },
        {
          "name": "angle_field",
          "explanation": "The existing field that will be populated with the true north calculation value in decimal degrees.",
          "datatype": "Field"
        },
        {
          "name": "rotation_method(Optional)",
          "explanation": "Specifies the method used to calculate the rotation value.GEOGRAPHIC—The angle is calculated clockwise with 0 at the top. This is the default.ARITHMETIC—The angle is calculated counterclockwise with 0 at the right.GRAPHIC—The angle is calculated counterclockwise with 0 at the top.",
          "datatype": "String"
        },
        {
          "name": "coordinate_sys_field(Optional)",
          "explanation": "The field containing a projection engine string for a projected coordinate system to be used for angle calculation. The angle calculation for each feature will be based on the projected coordinate system projection engine string for the specific feature. In cases of an invalid value, the tool will use the cartographic coordinate system specified in the Cartography environment settings. The default is none, or no field specified. When no field is specified, the projected coordinate system used for calculation will be taken from the Cartography environment settings.",
          "datatype": "Field"
        }
      ],
      "summary": "Calculates the rotation angle for true north based on the center point of each feature in a feature class and populates this value in a specified field. This field can be used in conjunction with a spatial map series to rotate each map to true north.",
      "extraction_date": "2025-10-01T13:54:26.955329"
    },
    {
      "toolset": "cartography",
      "tool_name": "Calculate UTM Zone",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/calculate-utm-zone.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input feature layer.",
          "datatype": "Feature Layer"
        },
        {
          "name": "in_field",
          "explanation": "The string field that stores the spatial reference string for the coordinate system. The field should have sufficient length (more than 600 characters) to hold the spatial reference string.",
          "datatype": "Field"
        }
      ],
      "summary": "Calculates the UTM zone of each feature based on the center point and stores this spatial reference string in a specified field. This field can be used with a spatial map series  to update the spatial reference to the correct UTM zone for each map.",
      "extraction_date": "2025-10-01T13:54:29.371467"
    },
    {
      "toolset": "cartography",
      "tool_name": "Grid Index Features",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/grid-index-features.htm",
      "parameters": [
        {
          "name": "out_feature_class",
          "explanation": "The resulting feature class of polygon index features. The coordinate system of the output feature class is determined in the following order:If a coordinate system is specified by the Output Coordinate System environment, the output feature class will use this coordinate system.If a coordinate system is not specified by the Output Coordinate System environment, the output feature class will use the coordinate system of the active map (ArcGIS Pro is open).If a coordinate system is not specified by the Output Coordinate System environment, and there is no active map (ArcGIS Pro is not open), the output feature class will use the coordinate system of the first input feature.If a coordinate system is not specified by the Output Coordinate System environment, there is no active map (ArcGIS Pro is not open), and there are no specified input features, the coordinate system of the output feature class will be unknown.",
          "datatype": "Feature Class"
        },
        {
          "name": "in_features[in_features,...](Optional)",
          "explanation": "The input features to be used to define the extent of the polygon grid that will be created.",
          "datatype": "Feature Layer; Raster Layer"
        },
        {
          "name": "intersect_feature(Optional)",
          "explanation": "Limits the output grid feature class to areas that intersect input feature layers or datasets. The intersection of input features will be used to create index features.INTERSECTFEATURE—Limits the output grid feature class to areas that intersect input feature layers or datasets. When input features are specified, this is the default.NO_INTERSECTFEATURE—An output grid feature class is created using specified coordinates, rows, and columns.",
          "datatype": "Boolean"
        },
        {
          "name": "use_page_unit(Optional)",
          "explanation": "Specifies whether index polygon size input is in page units.USEPAGEUNIT—Index polygon height and width are calculated in page units.NO_USEPAGEUNIT—Index polygon height and width are calculated in map units. This is the default.",
          "datatype": "Boolean"
        },
        {
          "name": "scale(Optional)",
          "explanation": "The map scale. The scale must be specified if the index polygon height and width are to be calculated in page units. If the tool is used outside an active ArcGIS Pro session, the default scale value is 1.",
          "datatype": "Long"
        },
        {
          "name": "polygon_width(Optional)",
          "explanation": "The width of the index polygon specified in either map or page units. If page units are used, the default value is 1 inch. If map units are used, the default value is 1 degree.",
          "datatype": "Linear Unit"
        },
        {
          "name": "polygon_height(Optional)",
          "explanation": "The height of the index polygon specified in either map or page units. If page units are used, the default value is 1 inch. If map units are used, the default value is 1 degree.",
          "datatype": "Linear Unit"
        },
        {
          "name": "origin_coord(Optional)",
          "explanation": "The coordinate value for the lower left origin of the output grid feature class. If input features are specified, the default value is determined by the extent of the union of extents for these features. If there are no input features specified, the default coordinates are 0 and 0.",
          "datatype": "Point"
        },
        {
          "name": "number_rows(Optional)",
          "explanation": "The number of rows to create in the y direction from the point of origin. The default is 10.",
          "datatype": "Long"
        },
        {
          "name": "number_columns(Optional)",
          "explanation": "The number of columns to create in the x direction from the point of origin. The default is 10.",
          "datatype": "Long"
        },
        {
          "name": "starting_page_number(Optional)",
          "explanation": "Each grid index feature is assigned a sequential page number starting with a specified starting page number. The default is 1.",
          "datatype": "Long"
        },
        {
          "name": "label_from_origin(Optional)",
          "explanation": "Specifies where page numbers (labels) begin.LABELFROMORIGIN—Page numbers (labels) begin with the polygon feature in the lower left corner of the output grid.NO_LABELFROMORIGIN—Page numbers (labels) begin with the polygon feature  in the upper left corner of the output grid. This is the default.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Creates a grid of rectangular polygon features that can be used as an index to specify pages in a spatial map series. A grid can be created that includes only polygon features that intersect another feature layer.",
      "extraction_date": "2025-10-01T13:54:32.052916"
    },
    {
      "toolset": "cartography",
      "tool_name": "Strip Map Index Features",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/strip-map-index-features.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input polyline features defining the path of the strip map index features.",
          "datatype": "Feature Layer"
        },
        {
          "name": "out_feature_class",
          "explanation": "The output feature class of polygon index features.",
          "datatype": "Feature Class"
        },
        {
          "name": "use_page_unit(Optional)",
          "explanation": "Specifies whether index feature size input is in page units.USEPAGEUNIT—Index polygon height and width are calculated in page units.NO_USEPAGEUNIT—Index polygon height and width are calculated in map units. This is the default.",
          "datatype": "Boolean"
        },
        {
          "name": "scale(Optional)",
          "explanation": "Map scale must be specified if index feature lengths (along the line and perpendicular to the line) are to be calculated in page units. If  you're using ArcGIS Pro, the default value will be the scale of the active data frame; otherwise, the default will be 1.",
          "datatype": "Long"
        },
        {
          "name": "length_along_line(Optional)",
          "explanation": "The length of the polygon index feature along the input line feature specified in either map or page units. The default value is determined by the spatial reference of the input line feature or features. This value will be 1/100 of the input feature class extent along the x axis.",
          "datatype": "Linear Unit"
        },
        {
          "name": "page_orientation(Optional)",
          "explanation": "Specifies the orientation of the input line features on the layout page.VERTICAL—The direction of the strip map series on the page is top to bottom.HORIZONTAL—The direction of the strip map series on the page is left to right. This is the default.",
          "datatype": "String"
        },
        {
          "name": "overlap_percentage(Optional)",
          "explanation": "The approximate percentage of geographic overlap between an individual map page and its adjoining pages in the series. The default is 10.",
          "datatype": "Double"
        },
        {
          "name": "starting_page_number(Optional)",
          "explanation": "The page number of the starting page. Each grid index feature is assigned a sequential page number beginning with the specified starting page number. The default is 1.",
          "datatype": "Long"
        },
        {
          "name": "direction_type(Optional)",
          "explanation": "Specifies the initial direction of the strip maps.WE_NS—If the line's directional trend is West to East, the starting point will be at the westernmost end of the line, or if the line's direction trend is North to South, the starting point will be at the northernmost end of the line. This is the default.WE_SN—If the line's directional trend is West to East, the starting point will be at the westernmost end of the line, or if the line's direction trend is South to North, the starting point will be at the southernmost end of the line.EW_NS—If the line's directional trend is East to West, the starting point will be at the easternmost end of the line, or if the line's direction trend is North to South, the starting point will be at the northernmost end of the line.EW_SN—If the line's directional trend is East to West, the starting point will be at the easternmost end of the line, or if the line's direction trend is South to North, the starting point will be at the southernmost end of the line.",
          "datatype": "String"
        }
      ],
      "summary": "Creates a series of rectangular polygons, or index features, that follow a single linear feature or a group of linear features. These index features can be used with spatial map series to define pages in a strip map or a set of maps that follow a linear feature. The resulting index features contain attributes that can be used to rotate and orient the map on the page and determine which index features, or pages, are next to the current page (to the left and right or to the top and bottom).",
      "extraction_date": "2025-10-01T13:54:34.736851"
    },
    {
      "toolset": "cartography",
      "tool_name": "Calculate Central Meridian And Parallels",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/calculate-central-meridian-and-parallels.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The input feature layer.",
          "datatype": "Feature Layer"
        },
        {
          "name": "in_field",
          "explanation": "The text field where the coordinate system string will be stored.",
          "datatype": "Field"
        },
        {
          "name": "standard_offset(Optional)",
          "explanation": "The percentage of the height of the input feature used to offset the standard parallels from the center latitude of the input feature. The default is 25 percent or 0.25. Negative values and values greater than 1 are acceptable inputs.",
          "datatype": "Double"
        }
      ],
      "summary": "Calculates the central meridian and optional standard parallels based on the center point of a feature's extent; stores this coordinate system as a spatial reference string in a specified text field; and repeats this for a set, or subset, of features. This field can be used with a spatial map series  to update the data frame coordinate system for each page.",
      "extraction_date": "2025-10-01T13:54:39.100397"
    },
    {
      "toolset": "cartography",
      "tool_name": "Map series",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/layouts/map-series.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T13:54:41.511112"
    },
    {
      "toolset": "cartography",
      "tool_name": "Cul-De-Sac Masks",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/cul-de-sac-masks.htm",
      "parameters": [
        {
          "name": "input_layer",
          "explanation": "The input line layer from which the masks will be created.",
          "datatype": "Layer"
        },
        {
          "name": "output_fc",
          "explanation": "The feature class that will contain the mask features.",
          "datatype": "Feature Class"
        },
        {
          "name": "reference_scale",
          "explanation": "The reference scale used for calculating the masking geometry when masks are specified in page units. This is typically the reference scale of the map.",
          "datatype": "Double"
        },
        {
          "name": "spatial_reference",
          "explanation": "The spatial reference of the map in which the masking polygons will be created. This is not the spatial reference that will be assigned to the output feature class. It is the spatial reference of the map in which the masking polygons will be used, since the position of symbology may change when features are projected.",
          "datatype": "Spatial Reference"
        },
        {
          "name": "margin",
          "explanation": "The space in page units surrounding the symbolized input features used to create the mask polygons. Typically, masking polygons are created with a small margin around the symbol to improve visual appearance. Margin values are specified in either page units or map units. Most of the time, you will specify your margin distance value in page units. The margin cannot be negative.",
          "datatype": "Linear Unit"
        },
        {
          "name": "attributes(Optional)",
          "explanation": "Specifies the attributes that will be transferred from the input features to the output features.ONLY_FID—Only the FID field from the input features will be transferred to the output features. This is the default. NO_FID—All the attributes except the FID from the input features will be transferred to the output features. ALL—All the attributes from the input features will be transferred to the output features.",
          "datatype": "String"
        }
      ],
      "summary": "Creates a feature class of polygon masks from a symbolized input line layer.",
      "extraction_date": "2025-10-01T13:54:45.736428"
    },
    {
      "toolset": "cartography",
      "tool_name": "Feature Outline Masks",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/feature-outline-masks.htm",
      "parameters": [
        {
          "name": "input_layer",
          "explanation": "The symbolized input layer from which the masks will be created.",
          "datatype": "Annotation Layer"
        },
        {
          "name": "output_fc",
          "explanation": "The feature class that will contain the mask features.",
          "datatype": "Feature Class"
        },
        {
          "name": "reference_scale",
          "explanation": "The reference scale that will be used for calculating the masking geometry when masks are specified in page units. This is typically the reference scale of the map.",
          "datatype": "Double"
        },
        {
          "name": "spatial_reference",
          "explanation": "The spatial reference of the map in which the masking polygons will be created. This is not the spatial reference that will be assigned to the output feature class. It is the spatial reference of the map in which the masking polygons will be used, since the position of symbology may change when features are projected.",
          "datatype": "Spatial Reference"
        },
        {
          "name": "margin",
          "explanation": "The space in page units surrounding the symbolized input features used to create the mask polygons. Typically, masking polygons are created with a small margin around the symbol to improve visual appearance. Margin values can be specified in either page units or map units. The margin cannot be negative.",
          "datatype": "Linear Unit"
        },
        {
          "name": "method",
          "explanation": "Specifies the type of masking geometry that will be created. BOX—A polygon representing the extent of the symbolized feature will be created. CONVEX_HULL—The convex hull of the symbolized geometry of the feature will be created. This is the default. EXACT_SIMPLIFIED—A generalized polygon representing the exact shape of the symbolized feature will be created. Polygons created with this method will have a significantly smaller number of vertices compared to polygons created with the EXACT option. EXACT—A polygon representing the exact shape of the symbolized feature will be created.",
          "datatype": "String"
        },
        {
          "name": "mask_for_non_placed_anno",
          "explanation": "Specifies whether masks for unplaced annotation will be created. This parameter is only used when masking geodatabase annotation layers.ALL_FEATURES—Masks will be created for all annotation features. This is the default.ONLY_PLACED—Masks will only be created for features with a status of placed.",
          "datatype": "String"
        },
        {
          "name": "attributes(Optional)",
          "explanation": "Specifies the attributes that will be transferred from the input features to the output features.ONLY_FID—Only the FID field from the input features will be transferred to the output features. This is the default. NO_FID—All attributes except the FID field from the input features will be transferred to the output features.ALL— All attributes from the input features will be transferred to the output features.",
          "datatype": "String"
        },
        {
          "name": "preserve_small_sized_features(Optional)",
          "explanation": "Specifies whether small mask features will be included in the output feature class.DO_NOT_PRESERVE_SMALL_SIZED_FEATURES—Small mask features will not be included in the output feature class. This is the\r\ndefault.PRESERVE_SMALL_SIZED_FEATURES—All mask features will be included in the output feature class.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Creates mask polygons at a specified distance and shape around the symbolized features in the input layer. Learn more about how Feature Outline Masks and Intersecting Layers Masks work",
      "extraction_date": "2025-10-01T13:54:48.398705"
    },
    {
      "toolset": "cartography",
      "tool_name": "Intersecting Layers Masks",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/intersecting-layers-masks.htm",
      "parameters": [
        {
          "name": "masking_layer",
          "explanation": "The symbolized input layer that will intersect the masked layer to create masking polygons. This is the layer that will be displayed when masking is applied to the masked layer.",
          "datatype": "Annotation Layer"
        },
        {
          "name": "masked_layer",
          "explanation": "The symbolized input layer that will be masked. This is the layer that will be obscured by the masking polygons.",
          "datatype": "Annotation Layer"
        },
        {
          "name": "output_fc",
          "explanation": "The feature class that will contain the mask features.",
          "datatype": "Feature Class"
        },
        {
          "name": "reference_scale",
          "explanation": "The reference scale that will be used for calculating the masking geometry when masks are specified in page units. This is typically the reference scale of the map.",
          "datatype": "Double"
        },
        {
          "name": "spatial_reference",
          "explanation": "The spatial reference of the map in which the masking polygons will be created. This is not the spatial reference that will be assigned to the output feature class. It is the spatial reference of the map in which the masking polygons will be used, since the position of symbology may change when features are projected.",
          "datatype": "Spatial Reference"
        },
        {
          "name": "margin",
          "explanation": "The space in page units surrounding the symbolized input features used to create the mask polygons. Typically, masking polygons are created with a small margin around the symbol to improve visual appearance. Margin values can be specified in either page units or map units. Most of the time margin distance values are specified in page units. The margin cannot be negative.",
          "datatype": "Linear Unit"
        },
        {
          "name": "method",
          "explanation": "Specifies the type of masking geometry that will be created. BOX—A polygon representing the extent of the symbolized feature will be created. CONVEX_HULL—The convex hull of the symbolized geometry of the feature will be created. This is the default. EXACT_SIMPLIFIED—A generalized polygon representing the exact shape of the symbolized feature will be created. Polygons created with this method will have a significantly smaller number of vertices compared to polygons created with the EXACT option. EXACT—A polygon representing the exact shape of the symbolized feature will be created.",
          "datatype": "String"
        },
        {
          "name": "mask_for_non_placed_anno",
          "explanation": "Specifies whether masks for unplaced annotation will be created. This parameter is only used when masking geodatabase annotation layers.ALL_FEATURES—Masks will be created for all annotation features. This is the default.ONLY_PLACED—Masks will only be created for features with a status of placed.",
          "datatype": "String"
        },
        {
          "name": "attributes(Optional)",
          "explanation": "Specifies the attributes that will be transferred from the input features to the output features.ONLY_FID—Only the FID field from the input features will be transferred to the output features. This is the default.NO_FID—All the attributes except the FID from the input features will be transferred to the output features.ALL—All the attributes from the input features will be transferred to the output features.",
          "datatype": "String"
        }
      ],
      "summary": "Creates masking polygons at a specified shape and size at the intersection of two symbolized input layers: the masking layer and the masked layer. Learn more about how Feature Outline Masks and Intersecting Layers Masks work",
      "extraction_date": "2025-10-01T13:54:51.073544"
    },
    {
      "toolset": "cartography",
      "tool_name": "How Feature Outline Masks and Intersecting Layers Masks work",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/cartography/how-feature-outline-masks-and-intersecting-layers-masks-work.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T13:54:53.553496"
    },
    {
      "toolset": "cartography",
      "tool_name": "Mask features",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/mapping/layer-properties/use-a-masking-layer.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T13:54:55.945445"
    }
  ]
}