{
  "extraction_info": {
    "date": "2025-10-01T14:55:06.016050",
    "total_toolsets": 1,
    "total_tools": 34,
    "toolbox": "network-analyst"
  },
  "tools": [
    {
      "toolset": "network-analyst",
      "tool_name": "Add Field To Analysis Layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/add-field-to-analysis-layer.htm",
      "parameters": [
        {
          "name": "in_network_analysis_layer",
          "explanation": "The network analysis layer to which the new field will be added.",
          "datatype": "Network Analyst Layer"
        },
        {
          "name": "sub_layer",
          "explanation": "The sublayer of the network analysis layer to which the new field will be added.",
          "datatype": "String"
        },
        {
          "name": "field_name",
          "explanation": "The name of the field that will be added to the specified sublayer of the network analysis layer.",
          "datatype": "String"
        },
        {
          "name": "field_type",
          "explanation": "Specifies the field type that will be used in the creation of the new field.LONG—The field type will be long. Long fields support whole numbers between -2,147,483,648 and 2,147,483,647.TEXT—The field type will be text. Text fields support a string of characters.FLOAT—The field type will be float. Float fields support fractional numbers between -3.4E38 and 1.2E38.DOUBLE—The field type will be double. Double fields support fractional numbers between -2.2E308 and 1.8E308.SHORT—The field type will be short. Short fields support whole numbers between -32,768 and 32,767.DATE—The field type will be date. Date fields support date and  time values. BLOB—The field type will be BLOB. BLOB fields support data stored as a long sequence of binary numbers. You need  a custom loader or viewer or a third-party\r\napplication to load items into a BLOB field or view the contents of\r\na BLOB field.\r\nGUID—The field type will be GUID. GUID fields store registry-style strings consisting of 36 characters enclosed in curly brackets.BIGINTEGER—The field type will be big integer. Big integer fields support whole numbers between -(253) and 253.TIMEONLY—The field type will be time only. Time only fields support time values with no date values.DATEONLY—The field type will be date only. Date only fields support date values with no time values.TIMESTAMPOFFSET—The field type will be timestamp offset. Timestamp offset fields support a date, time, and offset from a UTC value.",
          "datatype": "String"
        },
        {
          "name": "field_precision(Optional)",
          "explanation": "Legacy:This parameter is deprecated and maintained only for backward compatibility.",
          "datatype": "Long"
        },
        {
          "name": "field_scale(Optional)",
          "explanation": "Legacy:This parameter is deprecated and maintained only for backward compatibility.",
          "datatype": "Long"
        },
        {
          "name": "field_length(Optional)",
          "explanation": "The length of the field. This sets the maximum number of allowable characters for each record of the field. If no field length is provided, a length of 255 will be used.The field length applies only to text fields.",
          "datatype": "Long"
        },
        {
          "name": "field_alias(Optional)",
          "explanation": "The alternate name for the field. This name is used to describe cryptic field names. This parameter only applies to geodatabases.",
          "datatype": "String"
        },
        {
          "name": "field_is_nullable(Optional)",
          "explanation": "Specifies whether the field can contain null values. Null values are different from zero or empty fields and are only supported for fields in a geodatabase.NULLABLE—The field can contain null values. This is the default. NON_NULLABLE—The field cannot contain null values.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Adds a field to a sublayer of a network analysis layer.",
      "extraction_date": "2025-10-01T14:52:35.340401"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Add Locations",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/add-locations.htm",
      "parameters": [
        {
          "name": "in_network_analysis_layer",
          "explanation": "The network analysis layer to which the network analysis objects will be added.",
          "datatype": "Network Analyst Layer"
        },
        {
          "name": "sub_layer",
          "explanation": "The name of the sublayer of the network analysis layer to which the network analysis objects will be added.",
          "datatype": "String"
        },
        {
          "name": "in_table",
          "explanation": "The feature class or table containing the locations to be added to the network analysis sublayer.",
          "datatype": "Table View"
        },
        {
          "name": "field_mappings(Optional)",
          "explanation": "The mapping between the input fields of the network analysis sublayer to which locations will be added  and the fields in the input data or specified constants.Input sublayers of network analysis layers have a set of input fields that can be populated to modify or control analysis behavior. When adding locations to the sublayer, you can use this parameter to map field values from the input table to these fields in the sublayer. You can also use field mappings to specify a constant default value for each property.If neither the Field value nor the Default value is specified for a property, the resulting network analysis objects will have null values for that property. A complete list of input fields for each sublayer for each network analysis layer type is available in the documentation for each layer. For example, examine the Route layer's Stops sublayer's input fields.\r\n\r\n\r\n\r\n\r\n\r\n\r\nAn NAClassFieldMappings object obtained from the NAClassFieldMappings class is used to specify the parameter value. The NAClassFieldMappings object is a collection of NAClassFieldMap objects that allow you to specify the default values or map a field name from the input features for the properties of the network analysis object. If the data being loaded contains network locations or location ranges based on the network dataset used for the analysis, map the network location fields from the input features to the network location properties. Specifying the network location fields in the field mappings is similar to using the Use Network Location Fields option on the tool dialog box.\r\nLearn more about network location fieldsNote:  ArcGIS Online  and some ArcGIS Enterprise portals do not support using network location fields.   For network analysis layers that use one of these portals  as the network data source, all inputs will be located at solve time, and any  mapped location fields will be ignored.",
          "datatype": "Network Analyst Class FieldMap"
        },
        {
          "name": "search_tolerance(Optional)",
          "explanation": "The maximum search distance that will be used when locating the input features on the network. Features that are outside the search tolerance will be left unlocated. The parameter includes a value and units.The default value for this parameter is determined based on location properties stored in the input network analysis layer. If the network analysis layer has location settings overrides for the selected sublayer, those settings will be used. Otherwise, the network analysis layer's default location settings will be used. Setting a nondefault value for this parameter updates the network analysis layer's location settings overrides for the selected sublayer.The parameter is not used when adding locations to sublayers with line or polygon geometry, such as Line Barriers and Polygon Barriers.This parameter is not used when adding locations using existing network location fields.Legacy:This parameter is not used when the network analysis layer's network data source is a portal running a version of ArcGIS Enterprise earlier than 11.0.",
          "datatype": "Linear Unit"
        },
        {
          "name": "sort_field(Optional)",
          "explanation": "The field on which the network analysis objects will be sorted as they are added to the network analysis layer. The default is the ObjectID field in the input feature class or table.",
          "datatype": "Field"
        },
        {
          "name": "search_criteria[[Source, SnapType],...](Optional)",
          "explanation": "The edge and junction sources in the network dataset that will be searched when locating inputs on the network. For example, if the network dataset references separate feature classes representing streets and sidewalks, you can locate inputs on streets but not on sidewalks.The parameter value is specified as a list with nested lists. The nested lists are composed of two values indicating the name and snap type of each network source.The following are the available snap type options for each network source:NONE—The point will not locate on elements in this network source.SHAPE—The point will locate on the closest point of an element in this network source.For example, a parameter value of [[\"Streets\",\"SHAPE\"],[\"Streets_ND_Junctions\",\"NONE\"]] specifies that the search can locate on the shape of the Streets source but not on the Streets_ND_Junctions source.Any network edge or junction source that is not included in this list will use its default snap type. It is recommended that you include all network sources in your list and explicitly set the snap type for each.Legacy:Historically, the tool supported the snap type options MIDDLE, END, and MIDDLE_END. These options are deprecated and maintained for backward compatibility only. If one of these options is specified, the tool reverts to the SHAPE option for that network source.Caution:For a waste collection analysis, the solve operation will fail if any stops are located on junctions. Do not configure this parameter to allow locating on junction sources when adding stops to a waste collection analysis layer. The default value for this parameter is determined based on location properties stored in the input network analysis layer. If the network analysis layer has location settings overrides for the selected sublayer, those settings will be used. Otherwise, the network analysis layer's default location settings will be used. Setting a nondefault value for this parameter updates the network analysis layer's location settings overrides for the selected sublayer.This parameter is not used when adding locations using existing network location fields.This parameter is not used when the network analysis layer's network data source is ArcGIS Online.Legacy:This parameter is not used when the network analysis layer's network data source is a portal running a version of ArcGIS Enterprise earlier than 11.0.",
          "datatype": "Value Table"
        },
        {
          "name": "match_type(Optional)",
          "explanation": "Legacy:This parameter is deprecated and maintained only for backward compatibility. Inputs will always be matched to the closest network source among all the sources used for locating, corresponding to a parameter value of MATCH_TO_CLOSEST or True.",
          "datatype": "Boolean"
        },
        {
          "name": "append(Optional)",
          "explanation": "Specifies whether new network analysis objects will be appended to existing objects.\r\nAPPEND—The new network analysis objects will be appended to the existing set of objects in the selected sublayer. This is the default. CLEAR—The existing network analysis objects will be deleted and replaced with the new objects.",
          "datatype": "Boolean"
        },
        {
          "name": "snap_to_position_along_network(Optional)",
          "explanation": "Specifies whether the inputs will be snapped to their calculated  network locations or represented at their original geographic location.To use curb approach in the analysis to control which side of the road a vehicle must use to approach a location, do not snap the inputs to their network locations, or use a snap offset to ensure that the point remains clearly to one side of the road.The parameter is not used when adding locations to sublayers with line or polygon geometry, such as Line Barriers and Polygon Barriers.This parameter is not used when the input network analysis layer's network data source is a portal service.\r\nNO_SNAP— The geometries of the network locations will be based on the geometries of the input features. This is the default.SNAP—The geometries of the network locations will be snapped to their network locations.",
          "datatype": "Boolean"
        },
        {
          "name": "snap_offset(Optional)",
          "explanation": "An offset distance that will be applied when snapping a point to the network. An offset distance of zero means the point will be coincident with the network feature (typically a line). To offset the point from the network feature, enter an offset distance. The offset is in relation to the original point location; that is, if the original point was on the left side, its new location will be offset to the left. If it was originally on the right side, its new location will be offset to the right.\r\n\r\nThe default is 5 meters. However, this parameter is ignored if snap_to_position_along_network is set to NO_SNAP.The parameter is not used when adding locations to sublayers with line or polygon geometry, such as Line Barriers and Polygon Barriers.This parameter is not used when the input network analysis layer's network data source is a portal service.",
          "datatype": "Linear Unit"
        },
        {
          "name": "exclude_restricted_elements(Optional)",
          "explanation": "Legacy:This parameter is deprecated and maintained only for backward compatibility. Analysis inputs will never be located on network elements that are restricted, corresponding to a parameter value of EXCLUDE or True.",
          "datatype": "Boolean"
        },
        {
          "name": "search_query[[Source, Expression],...](Optional)",
          "explanation": "A query that restricts the search to a subset of the features within a source feature class. This is useful if you don't want to find features that may be unsuited for a network location. For example, if you don't want to locate on highway ramps, you can define a query to exclude them. A separate SQL expression can be specified per edge or junction source feature class of the network dataset.The parameter value is specified as a list with nested lists, with one entry per network source. Each inner list is composed of two values indicating the name of the network source and the SQL expression used as the query for that source. An empty string, \"\", indicates no query for a particular source.  \r\n\r\n\r\nFor example, the value [[\"Streets\", \"ROAD_CLASS &lt;&gt; 3\"], [\"Streets_ND_Junctions\", \"\"]] specifies an SQL expression for the Streets source feature class and no expression for the Streets_ND_Junctions source feature class. If a network source is not included in the list, it is interpreted to have no query. The value [[\"Streets\", \"ROAD_CLASS &lt;&gt; 3\"]]  is equivalent to [[\"Streets\", \"ROAD_CLASS &lt;&gt; 3\"], [\"Streets_ND_Junctions\", \"\"]].For more information about SQL syntax, see SQL reference for query expressions used in ArcGIS.The default value for this parameter is determined based on location properties stored in the input network analysis layer. If the network analysis layer has location settings overrides for the selected sublayer, those settings will be used. Otherwise, the network analysis layer's default location settings will be used. Setting a nondefault value for this parameter updates the network analysis layer's location settings overrides for the selected sublayer.This parameter is not used when adding locations using existing network location fields.This parameter is not used when the network analysis layer's network data source is ArcGIS Online.Legacy:This parameter is not used when the network analysis layer's network data source is a portal running a version of ArcGIS Enterprise earlier than 11.0.",
          "datatype": "Value Table"
        },
        {
          "name": "allow_auto_relocate(Optional)",
          "explanation": "Specifies whether inputs with existing network location fields can be automatically relocated at solve time to ensure valid, routable location fields for the analysis.\r\n\r\nALLOW— Points located on restricted network elements and points affected by barriers will be relocated at solve time to the closest routable location. This is the default.NO_ALLOW—Network location fields will be used at solve time as is, even if the points are unreachable, and this may cause the solve to fail.\r\nThe default value for this parameter is determined based on location properties stored in the input network analysis layer. If the network analysis layer has location settings overrides for the selected sublayer, those settings will be used. Otherwise, the network analysis layer's default location settings will be used. Setting a nondefault value for this parameter updates the network analysis layer's location settings overrides for the selected sublayer.Even if the automatic relocating at solve time is not allowed, inputs with no location fields or incomplete location fields will be located at solve time.This parameter is not used when the network analysis layer's network data source is ArcGIS Online.This parameter is not used when the network analysis layer's network data source is   an ArcGIS Enterprise portal that does not support using network location fields.Legacy:This parameter is not used when the network analysis layer's network data source is a portal running a version of ArcGIS Enterprise earlier than 11.0.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Adds input features or records to a network analysis layer. The inputs are added to specific sublayers such as stops and barriers. When the network analysis layer references a network dataset as its network data source, the tool calculates the network locations of the inputs, unless precalculated network location fields are mapped from the inputs. Learn more about how the Add Locations tool locates analysis  inputs on the network",
      "extraction_date": "2025-10-01T14:52:38.939622"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Add Fleet Routing Breaks",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/add-vehicle-routing-problem-breaks.htm",
      "parameters": [
        {
          "name": "in_vrp_layer",
          "explanation": "The vehicle routing problem analysis layer to which the breaks will be added.",
          "datatype": "Network Analyst Layer"
        },
        {
          "name": "target_route(Optional)",
          "explanation": "The route the breaks will apply to.  If this parameter is not specified, breaks will be created for\r\neach existing route.",
          "datatype": "String"
        },
        {
          "name": "break_type(Optional)",
          "explanation": "Specifies the type of breaks that will be added.TIME_WINDOW_BREAK— Breaks will take place during a specific time window. This is the default.MAXIMUM_TRAVEL_TIME_BREAK— Breaks will take place after a certain amount of travel time. These values are either the amount of time until the first break or the amount of time between breaks.MAXIMUM_WORK_TIME_BREAK— Breaks will take place after a certain amount of cumulative time. These values are an amount of elapsed time since the start of the route.",
          "datatype": "String"
        },
        {
          "name": "time_window_properties[time_window_properties,...](Optional)",
          "explanation": "Specifies a time range within which the break will begin. To set up a time window break, use two time-of-day values.The properties below are enabled when the Break Type parameter is set to Time Window Break.Is Paid—A Boolean value indicating whether the break is paid.Break Duration—The duration of the break in the units of the layer's Time Field Units property. This property can't contain null values and has a default value of 60.Time Window Start—The start time of the time window.Time Window End—The end time of the time window.Maximum Violation Time—The maximum allowable violation time for a time window break in the units of the layer's Time Field Units property. A time window is considered violated if the arrival time falls outside the time range. A zero value indicates that the time window cannot be violated, that is, the time window is hard. A nonzero value indicates the maximum delay time. For example, the break can begin up to 30 minutes beyond the end of its time window, but the delay is penalized pursuant to the Time Window Importance setting, which rates the importance of honoring time windows without causing\r\nviolations.",
          "datatype": "Value Table"
        },
        {
          "name": "travel_time_properties[travel_time_properties,...](Optional)",
          "explanation": "Specifies how long a person can travel before the break is required.\r\nThe properties below are enabled when the Break Type parameter is set to Maximum Travel Time Break.Is Paid—A Boolean value indicating whether the break is paid.Break Duration—The duration of the break in the units of the layer's Time Field Units property. This property can't contain null values and has a default value of 60.Maximum Travel Time Between Breaks—The maximum amount of travel time that can be accumulated before the break is taken in the units of the layer's Time Field Units property. The travel time is accumulated either from the end of the previous break or, if a break has not yet been taken, from the start of the route.If this is the route's final break, The MaxTravelTimeBetweenBreaks field also indicates the maximum travel time that can be accumulated from the final break to the end depot. This field limits how long a person can drive until a break is required. For example, if the layer's Time Field Units property is set to Minutes, and the MaxTravelTimeBetweenBreaks field has a value of 120, the driver will get a break after two hours of driving. To assign a second break after two additional hours of driving, the second break's MaxTravelTimeBetweenBreaks field value must be 120.",
          "datatype": "Value Table"
        },
        {
          "name": "work_time_properties[work_time_properties,...](Optional)",
          "explanation": "Specifies how long a person can work before a break is required.\r\nThe properties below are enabled when the Break Type parameter is set to Maximum Work Time Break.Is Paid—A Boolean value indicating whether the break is paid.Break Duration—The duration of the break in the units of the layer's Time Field Units property. This property can't contain null values and has a default value of 60. Maximum Cumulative Work Time—The maximum amount of work time that can be accumulated before the break is taken in the units of the layer's Time Field Units property. Work time is accumulated from the beginning of the route. Work time is the sum of travel time and service times at orders, depots, and breaks. However, it excludes wait time, which is the time a route (or driver) spends waiting at an order or depot for a time window to begin. The MaxCumulWorkTime field also indicates the maximum amount of work time that can be accumulated before the break is taken.This field limits how long a person can work until a break is required. For example, if the Time Field Units parameter (time_units in Python) is set to Minutes,   the MaxCumulWorkTime field has a value of 120, and the ServiceTime field has a value of 15, the driver will get a 15-minute break after 2 hours of work.Continuing with this example, assume a second break is needed after 3 additional hours of work. To specify this break, you would enter 315 (5 hours and 15 minutes) as the second break's MaxCumulWorkTime field value. This number includes the MaxCumulWorkTime and ServiceTime field values of the preceding break, along with the 3 additional hours of work time before granting the second break. To avoid taking maximum work time breaks prematurely, remember that work time is accumulated from the beginning of the route and it includes the service time at previously visited depots, orders, and breaks.",
          "datatype": "Value Table"
        },
        {
          "name": "append_to_existing_breaks(Optional)",
          "explanation": "Specifies whether new breaks will be appended to the existing breaks attribute table.APPEND—New breaks will be\r\nappended to the existing set in the breaks attribute\r\ntable. This is the default.CLEAR—Existing breaks will be replaced with new breaks.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Creates breaks in a Vehicle Routing Problem (VRP) layer.",
      "extraction_date": "2025-10-01T14:52:41.918031"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Vehicle Routing Problem (VRP) layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/vehicle-routing-problem-analysis-layer.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:52:45.942096"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Add Fleet Routing Routes",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/add-vehicle-routing-problem-routes.htm",
      "parameters": [
        {
          "name": "in_vrp_layer",
          "explanation": "The  vehicle routing problem, last mile delivery, or waste collection analysis layer to which routes will be added.",
          "datatype": "Network Analyst Layer"
        },
        {
          "name": "number_of_routes(Optional)",
          "explanation": "The number of routes that will be added.",
          "datatype": "Long"
        },
        {
          "name": "route_name_prefix(Optional)",
          "explanation": "A qualifier that will be added to the name of every route. For example, a route name prefix of WeekdayRoute would be used as the starting text for every route’s name with an incrementing numerical suffix appended to it (for example, WeekdayRoute1, WeekdayRoute2, and so on).",
          "datatype": "String"
        },
        {
          "name": "start_depot_name(Optional)",
          "explanation": "The name of the starting depot for the route.If this value is null, the route will begin from the first order assigned. Omitting the start depot is useful when the vehicle's starting location is unknown or irrelevant to the problem.For vehicle routing problem layers, when this value is null, the end_depot_name parameter value cannot also be null.  Both start and end depots can be null for last mile delivery and waste collection layers.Virtual start depots are not allowed if orders or depots are in multiple time zones.",
          "datatype": "String"
        },
        {
          "name": "end_depot_name(Optional)",
          "explanation": "The name of the ending depot for the route.If this value is null, the route will end at the last order assigned.For vehicle routing problem layers, when this value is null, the start_depot_name parameter value cannot also be null. Both start and end depots can be null for last mile delivery and waste collection layers.",
          "datatype": "String"
        },
        {
          "name": "earliest_start_time(Optional)",
          "explanation": "The earliest allowable start time for the route in a vehicle routing problem layer.This parameter is used by the solver in conjunction with the time window of the starting depot provided in the Depots sublayer by the TimeWindowStart field for determining feasible route start times. This parameter has a default time-only value of 8:00:00 a.m., which is interpreted as 8:00:00 a.m. on the date provided by the Default Date property of the analysis layer.  If no value is specified, the default value is used.This parameter is only applicable if the input layer is a vehicle routing problem layer. The value is ignored if the input layer has a different solver type.",
          "datatype": "Date"
        },
        {
          "name": "latest_start_time(Optional)",
          "explanation": "The latest allowable start time for the route in a vehicle routing problem layer.This parameter has a default time-only value of 10:00:00 a.m., which is interpreted as 10:00:00 a.m. on the date provided by the Default Date property of the analysis layer. If no value is specified, the default value is used.This parameter is only applicable if the input layer is a vehicle routing problem layer. It is ignored if the input layer has a different solver type.",
          "datatype": "Date"
        },
        {
          "name": "max_order_count(Optional)",
          "explanation": "The maximum allowable number of orders on the route. The default value is 30 for vehicle routing problem layers and null for last mile delivery layers. If no value is specified, the default value is used.This parameter is not applicable and its value is ignored if the input layer is a waste collection layer.",
          "datatype": "Long"
        },
        {
          "name": "capacities[capacities,...](Optional)",
          "explanation": "The maximum amount (volume, weight, quantity, and so on) that can be carried by the vehicle. A\r\nnull value is the same as zero.  A maximum of nine\r\ncapacity fields are allowed, but use only the number necessary to model the needs\r\nof the vehicles.\r\nThis parameter is not applicable and its value is ignored if the input layer is a waste collection layer.",
          "datatype": "Value Table"
        },
        {
          "name": "route_constraints[route_constraints,...](Optional)",
          "explanation": "The constraints that will be placed on routes to limit total time, total travel time, and total distance.Max Total Time—The maximum allowable route duration. The route duration includes travel times as well as service and wait times at orders, depots, and breaks.  Specify the value in the input layer's time units.Max Total Travel Time—The maximum allowable travel time for the route. The travel time includes only the time spent driving on the network and does not include service or wait times. This field value can't be larger than the MaxTotalTime  field value. Specify the value in the input layer's time units.Max Total Distance—The maximum allowable travel distance for the route. Specify the value in the input layer's distance units.\r\nThis parameter is not applicable and its value is ignored if the input layer is a waste collection layer.",
          "datatype": "Value Table"
        },
        {
          "name": "costs[costs,...](Optional)",
          "explanation": "The costs that may be incurred by the route in a solution.Fixed Cost—A fixed monetary cost that is incurred only if the route is used in a solution (that is, it has orders assigned to it).  Cost Per Unit Time—The monetary cost incurred per unit of work time for the total route duration, including travel times and service and wait times at orders, depots, and breaks. The default is 1.Cost Per Unit Distance—The monetary cost incurred per unit of distance traveled for the route length (total travel distance).Overtime Start Time—The duration of regular work time before overtime computation begins.Cost Per Unit Overtime—The monetary cost incurred per time unit of overtime work. This field can contain null values; a null value indicates that the Cost Per Unit Overtime value is the same as the Cost Per Unit Time value.\r\nThis parameter is not applicable and its value is ignored if the input layer is a waste collection layer.",
          "datatype": "Value Table"
        },
        {
          "name": "additional_route_time[additional_route_time,...](Optional)",
          "explanation": "Additional route time options.Start Depot Service Time—The service time at the starting depot. This can be used to model the time spent loading the vehicle.  End Depot Service Time—The service time at the ending depot. This can be used to model the time spent unloading the vehicle. Arrive/Depart Delay—The amount of travel time needed to accelerate the vehicle to normal travel speeds, decelerate it to a stop, and move it off and on the network (for example, in and out of parking). By including an Arrive/Depart Delay value, the solver is deterred from sending many routes to service physically coincident orders.\r\nThis parameter is not applicable and its value is ignored if the input layer is a waste collection layer.",
          "datatype": "Value Table"
        },
        {
          "name": "append_to_existing_routes(Optional)",
          "explanation": "Specifies whether new routes will be appended to the existing routes attribute table.APPEND—New routes will be\r\nappended to the existing set in the routes attribute\r\ntable. This is the default.CLEAR—Existing routes will be deleted and replaced with new routes.",
          "datatype": "Boolean"
        },
        {
          "name": "date_and_time[date_and_time,...](Optional)",
          "explanation": "Additional date and time properties for a last mile delivery layer. Earliest Route Start Date—The earliest start date for added routes. If this property is not specified, the routes will use the layer's default earliest route start date. Earliest Route Start Time—The earliest start time of day for added routes.  If this property is not specified, the routes will use the layer's default earliest route start time.  Route Start Flexibility—Indicates how long after the earliest allowed route start time the route can start. The value can be null or zero, which means that there is no flexibility in the starting time, or a positive number. Specify the value in the input layer's time units.\r\nSpecify the Earliest Route Start Date property using a datetime.date object and the Earliest Route Start Time property using a datetime.time object.This parameter is only applicable if the input layer is a last mile delivery layer. The value is ignored if the input layer has a different solver type.",
          "datatype": "Value Table"
        },
        {
          "name": "waste_capacities[waste_capacities,...](Optional)",
          "explanation": "The capacities for routes in a waste collection layer. MaxBins_1—The maximum number of waste bins for fraction 1 that the vehicle can collect before it must be emptied.MaxWeight_1—The maximum physical weight for fraction 1 that the vehicle can collect before it must be emptied. Any weight units can be used for this value as long as the same units are used for all weight fields. MaxVolume_1—The maximum volume for fraction 1 that  the vehicle can collect before it must be emptied. Any volume units can be used for this value as long as the same units are used for all volume fields. MaxBins_2—The maximum number of waste bins for fraction 2 that the vehicle can collect before it must be emptied.MaxWeight_2—The maximum physical weight for fraction 2 that the vehicle can collect before it must be emptied. Any weight units can be used for this value as long as the same units are used for all weight fields. MaxVolume_2—The maximum volume for fraction 2 that the vehicle can collect before it must be emptied. Any volume units can be used for this value as long as the same units are used for all volume fields.\r\nThis parameter is only applicable if the input layer is a waste collection layer. The value is ignored if the input layer has a different solver type.",
          "datatype": "Value Table"
        },
        {
          "name": "start_time[start_time,...](Optional)",
          "explanation": "Additional date and time properties for a waste collection layer. Start Time—The starting time for the route.  If this property is not specified, the routes will use the layer's default start time. Overtime Start Time—The duration of regular work time before overtime computation begins. A null value indicates that overtime does not apply. Specify the value in the input layer's time units.\r\nSpecify the Start Time property using a datetime.time object.This parameter is only applicable if the input layer is a waste collection layer. The value is ignored if the input layer has a different solver type.",
          "datatype": "Value Table"
        },
        {
          "name": "route_time_distance_constraints[route_time_distance_constraints,...](Optional)",
          "explanation": "The constraints that will be placed on routes to limit total time and distance.Max Total Time—The maximum allowable route duration. The route duration includes travel times as well as service and wait times at stops, depots, and renewals. Specify the value in the input layer's time units.Max Total Distance—The maximum allowable travel distance for the route. Specify the value in the input layer's distance units.\r\nThis parameter is only applicable if the input layer is a waste collection layer. The value is ignored if the input layer has a different solver type.",
          "datatype": "Value Table"
        },
        {
          "name": "depot_service_time[depot_service_time,...](Optional)",
          "explanation": "Additional route time properties.Start Depot Service Time—The service time at the starting depot. This can be used to model the time spent loading the vehicle.  End Depot Service Time—The service time at the ending depot. This can be used to model the time spent unloading the vehicle. \r\nThis parameter is only applicable if the input layer is a waste collection layer. The value is ignored if the input layer has a different solver type.",
          "datatype": "Value Table"
        }
      ],
      "summary": "Creates routes in a vehicle routing problem, last mile delivery, or waste collection analysis layer. This tool will append rows to the Routes sublayer and can add rows with specific settings while creating a unique name field.",
      "extraction_date": "2025-10-01T14:52:48.836160"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "vehicle routing problem",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/vehicle-routing-problem-analysis-layer.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:52:52.360810"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "last mile delivery",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/lmd-layer.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:52:55.559369"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "waste collection",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/waste-collection-analysis-layer.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:52:58.345982"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Calculate Locations",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/calculate-locations.htm",
      "parameters": [
        {
          "name": "in_point_features",
          "explanation": "The input features for which the network locations will be calculated.  For line and polygon features, since the network location information is stored in a BLOB field, only geodatabase feature classes are supported.",
          "datatype": "Table View"
        },
        {
          "name": "in_network_dataset(Optional)",
          "explanation": "The network dataset that will be used to calculate the locations.\r\nThis parameter is required unless a sublayer of a network analysis layer is used as input features. In that case, don't specify a value for this parameter or  set it to the network dataset referenced by the network analysis layer.",
          "datatype": "Network Dataset Layer"
        },
        {
          "name": "search_tolerance(Optional)",
          "explanation": "The maximum search distance that will be used when locating the input features on the network. Features that are outside the search tolerance will be left unlocated. The parameter includes a value and units.\t\t\t\t\t\tThe default is 5000 meters.\t\t\t\t\tIf the input features are a sublayer of a network analysis layer, the default value for this parameter is determined based on location properties stored in the input network analysis layer. If the network analysis layer has location settings overrides for the selected sublayer, those settings will be used. Otherwise, the network analysis layer's default location settings will be used. Setting a nondefault value for this parameter updates the network analysis layer's location settings overrides for the selected sublayer.The parameter is not used when calculating locations for line or polygon features.",
          "datatype": "Linear Unit"
        },
        {
          "name": "search_criteria[[Source, SnapType],...](Optional)",
          "explanation": "The edge and junction sources in the network dataset that will be searched when locating inputs on the network. For example, if the network dataset references separate feature classes representing streets and sidewalks, you can locate inputs on streets but not on sidewalks.The parameter value is specified as a list with nested lists. The nested lists are composed of two values indicating the name and snap type of each network source.The following are the available snap type options for each network source:NONE—The point will not locate on elements in this network source.SHAPE—The point will locate on the closest point of an element in this network source.For example, a parameter value of [[\"Streets\",\"SHAPE\"],[\"Streets_ND_Junctions\",\"NONE\"]] specifies that the search can locate on the shape of the Streets source but not on the Streets_ND_Junctions source.Any network edge or junction source that is not included in this list will use its default snap type. It is recommended that you include all network sources in your list and explicitly set the snap type for each.Legacy:Historically, the tool supported the snap type options MIDDLE, END, and MIDDLE_END. These options are deprecated and maintained for backward compatibility only. If one of these options is specified, the tool reverts to the SHAPE option for that network source. The default value is  to locate on all network sources except override junctions created by running the Dissolve Network tool and system junctions.Caution:For a waste collection analysis, the solve operation will fail if any stops are located on junctions. Do not configure this parameter to allow locating on junction sources when adding stops to a waste collection analysis layer. If the input features are a sublayer of a network analysis layer, the default value for this parameter is determined based on location properties stored in the input network analysis layer. If the network analysis layer has location settings overrides for the selected sublayer, those settings will be used. Otherwise, the network analysis layer's default location settings will be used. Setting a nondefault value for this parameter updates the network analysis layer's location settings overrides for the selected sublayer.",
          "datatype": "Value Table"
        },
        {
          "name": "match_type(Optional)",
          "explanation": "Legacy:This parameter is deprecated and maintained only for backward compatibility. Inputs will always be matched to the closest network source among all the sources used for locating, corresponding to a parameter value of MATCH_TO_CLOSEST or True.",
          "datatype": "Boolean"
        },
        {
          "name": "source_ID_field(Optional)",
          "explanation": "The name of the field to be created or updated that will be populated with the  ID of the network dataset source feature class  for the input feature's computed network location. The default value is SourceID.The parameter is not used when calculating locations for line or polygon features.Do not use this parameter when the input features are a sublayer of a network analysis layer. Network locations in a sublayer must be stored in location fields with the default names or they will not be used when the layer is solved.",
          "datatype": "Field"
        },
        {
          "name": "source_OID_field(Optional)",
          "explanation": "The name of the field to be created or updated that will be populated with  the ObjectID field value of the network dataset source feature class for the input feature's  computed network location. The default value is SourceOID.The parameter is not used when calculating locations for line or polygon features.Do not use this parameter when the input features are a sublayer of a network analysis layer. Network locations in a sublayer must be stored in location fields with the default names or they will not be used when the layer is solved.",
          "datatype": "Field"
        },
        {
          "name": "position_field(Optional)",
          "explanation": "The name of the field to be created or updated describing the computed network location's percent along the network element where it was located. The default value is PosAlong.The parameter is not used when calculating locations for line or polygon features.Do not use this parameter when the input features are a sublayer of a network analysis layer. Network locations in a sublayer must be stored in location fields with the default names or they will not be used when the layer is solved.",
          "datatype": "Field"
        },
        {
          "name": "side_field(Optional)",
          "explanation": "The name of the field to be created or updated describing the side of the  network edge where the computed network location is located. The default value is  SideOfEdge.The parameter is not used when calculating locations for line or polygon features.Do not use this parameter when the input features are a sublayer of a network analysis layer. Network locations in a sublayer must be stored in location fields with the default names or they will not be used when the layer is solved.",
          "datatype": "Field"
        },
        {
          "name": "snap_X_field(Optional)",
          "explanation": "The name of the field to be created or updated with the x-coordinate of the computed network location. The default value is SnapX.The parameter is not used when calculating locations for line or polygon features.Do not use this parameter when the input features are a sublayer of a network analysis layer. Network locations in a sublayer must be stored in location fields with the default names or they will not be used when the layer is solved.",
          "datatype": "Field"
        },
        {
          "name": "snap_Y_field(Optional)",
          "explanation": "The name of the field to be created or updated with the y-coordinate of the computed network location. The default value is SnapY.The parameter is not used when calculating locations for line or polygon features.Do not use this parameter when the input features are a sublayer of a network analysis layer. Network locations in a sublayer must be stored in location fields with the default names or they will not be used when the layer is solved.",
          "datatype": "Field"
        },
        {
          "name": "distance_field(Optional)",
          "explanation": "The name of the field to be created or updated describing the distance in meters of the original point feature from its computed network location. The default value is  DistanceToNetworkInMeters.The parameter is not used when calculating locations for line or polygon features.Do not use this parameter when the input features are a sublayer of a network analysis layer. Network locations in a sublayer must be stored in location fields with the default names or they will not be used when the layer is solved.",
          "datatype": "Field"
        },
        {
          "name": "snap_Z_field(Optional)",
          "explanation": "The name of the field to be created or updated with the z-coordinate of the computed network location. The default value is SnapZ.The parameter is used only when the input network dataset supports connectivity based on z-coordinate values of the network sources.The parameter is not used when calculating locations for line or polygon features.Do not use this parameter when the input features are a sublayer of a network analysis layer. Network locations in a sublayer must be stored in location fields with the default names or they will not be used when the layer is solved.",
          "datatype": "Field"
        },
        {
          "name": "location_field(Optional)",
          "explanation": "The name of the field to be created or updated with the location ranges of the computed network locations for line or polygon features. The default value is Locations. The parameter is used only when calculating locations for line or polygon features.Do not use this parameter when the input features are a sublayer of a network analysis layer. Network locations in a sublayer must be stored in location fields with the default names or they will not be used when the layer is solved.",
          "datatype": "Field"
        },
        {
          "name": "exclude_restricted_elements(Optional)",
          "explanation": "Legacy:This parameter is deprecated and maintained only for backward compatibility. Analysis inputs will never be located on network elements that are restricted, corresponding to a parameter value of EXCLUDE or True.",
          "datatype": "Boolean"
        },
        {
          "name": "search_query[[Source, Expression],...](Optional)",
          "explanation": "A query that restricts the search to a subset of the features within a source feature class. This is useful if you don't want to find features that may be unsuited for a network location. For example, if you don't want to locate on highway ramps, you can define a query to exclude them. A separate SQL expression can be specified per edge or junction source feature class of the network dataset.The parameter value is specified as a list with nested lists, with one entry per network source. Each inner list is composed of two values indicating the name of the network source and the SQL expression used as the query for that source. An empty string, \"\", indicates no query for a particular source.  \r\n\r\n\r\nFor example, the value [[\"Streets\", \"ROAD_CLASS &lt;&gt; 3\"], [\"Streets_ND_Junctions\", \"\"]] specifies an SQL expression for the Streets source feature class and no expression for the Streets_ND_Junctions source feature class. If a network source is not included in the list, it is interpreted to have no query. The value [[\"Streets\", \"ROAD_CLASS &lt;&gt; 3\"]]  is equivalent to [[\"Streets\", \"ROAD_CLASS &lt;&gt; 3\"], [\"Streets_ND_Junctions\", \"\"]].For more information about SQL syntax, see SQL reference for query expressions used in ArcGIS.By default, no query is used for any source.If the input features are a sublayer of a network analysis layer, the default value for this parameter is determined based on location properties stored in the input network analysis layer. If the network analysis layer has location settings overrides for the selected sublayer, those settings will be used. Otherwise, the network analysis layer's default location settings will be used. Setting a nondefault value for this parameter updates the network analysis layer's location settings overrides for the selected sublayer.",
          "datatype": "Value Table"
        },
        {
          "name": "travel_mode(Optional)",
          "explanation": "The name of the travel mode that will be used.If you specify a travel mode, the travel mode settings, such as\r\nrestrictions and impedance attributes, will be considered when\r\ncalculating network location. For example, if the closest network\r\nedge to one of the input points is restricted when the selected travel mode is applied, the tool will\r\nlocate the point on the next-closest network edge that is not\r\nrestricted.The available travel modes depend on the in_network_dataset parameter value.An arcpy.na.TravelMode object and a string containing the valid JSON representation of a travel mode can also be used as input to this parameter.If a sublayer of a network analysis layer is used as input\r\nfeatures, do not set a value for this parameter. When network locations are calculated, the  network analysis layer's current travel mode will automatically be used.",
          "datatype": "String"
        }
      ],
      "summary": "Locates input features on a network and adds fields  to the input features that describe the network locations. The tool is used to precalculate the network locations of inputs that will be used in a Network Analyst workflow, improving performance of the analysis at solve time.  The tool stores the calculated network locations of the inputs in fields in the input data. Learn more about locating features on a network Learn more about precalculating network locations",
      "extraction_date": "2025-10-01T14:53:01.014773"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Copy Network Analysis Layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/copy-network-analysis-layer.htm",
      "parameters": [
        {
          "name": "in_network_analysis_layer",
          "explanation": "The network analysis layer to copy.",
          "datatype": "Network Analyst Layer"
        },
        {
          "name": "out_layer_name(Optional)",
          "explanation": "The name of the network analysis layer that will be created.",
          "datatype": "String"
        }
      ],
      "summary": "Copies a network analysis layer \r\nto a duplicate layer. The new layer will have the same analysis settings and network data source as the original layer and a copy of the original layer's analysis data.",
      "extraction_date": "2025-10-01T14:53:03.269354"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "network analysis layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/new-network-analysis-layer.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:53:05.523047"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Copy Traversed Source Features",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/copy-traversed-source-features.htm",
      "parameters": [
        {
          "name": "input_network_analysis_layer",
          "explanation": "The network analysis layer from which traversed source features will be copied. If the network analysis layer does not have a valid result, the layer will be solved to produce one.",
          "datatype": "Network Analyst Layer"
        },
        {
          "name": "output_location",
          "explanation": "The workspace where the output table and two feature classes will be saved.",
          "datatype": "Workspace; Feature Dataset"
        },
        {
          "name": "edge_feature_class_name",
          "explanation": "The name of the feature class that will contain information about the traversed edge source features. If the solved network analysis layer doesn't traverse any edge features, an empty feature class will be created.",
          "datatype": "String"
        },
        {
          "name": "junction_feature_class_name",
          "explanation": "The name of the feature class that will contain information about the traversed junction source features, including system junctions and relevant points from the input network analysis layer. If the solved network analysis layer doesn't traverse any junctions, an empty feature class will be created.",
          "datatype": "String"
        },
        {
          "name": "turn_table_name",
          "explanation": "The name of the table that will contain information about the traversed global turns and turn features that scale cost for the underlying edges. If the solved network analysis layer doesn't traverse any turns, an empty table will be created. Since restricted turns  are never traversed, they are never included in the output.",
          "datatype": "String"
        }
      ],
      "summary": "Creates two feature classes and a table, which together contain information about the edges, junctions, and turns that are traversed while solving a network analysis layer. Learn about the output from Copy Traversed Source Features",
      "extraction_date": "2025-10-01T14:53:07.987048"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Delete Network Analysis Layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/delete-network-analysis-layer.htm",
      "parameters": [
        {
          "name": "in_network_analysis_layers[in_network_analysis_layers,...]",
          "explanation": "The network analysis layer or layers to delete.",
          "datatype": "Network Analyst Layer"
        }
      ],
      "summary": "Deletes a network analysis layer and its analysis data.",
      "extraction_date": "2025-10-01T14:53:10.255532"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Directions",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/directions.htm",
      "parameters": [
        {
          "name": "in_network_analysis_layer",
          "explanation": "The network analysis layer for which directions will be generated. Directions can be generated only for route, closest facility, and vehicle routing problem network analysis layers.Caution:This tool does not support last mile delivery or waste collection analysis layers even though these layer types support directions.",
          "datatype": "Network Analyst Layer"
        },
        {
          "name": "file_type",
          "explanation": "Specifies the format that will be used for the output directions file. This parameter is ignored if the style sheet parameter has a value.XML—The output directions file will be generated as an .xml file. Apart from direction strings and the length and time information for the routes, the file will also contain information about the maneuver type and the turn angle for each direction. TEXT—The output directions file will be generated as a simple .txt file containing the direction strings, the length and, optionally, the time information for the routes.HTML—The output directions file will be generated as an .html file containing the direction strings, the length and, optionally, the time information for the routes.",
          "datatype": "String"
        },
        {
          "name": "out_directions_file",
          "explanation": "If you provide a style sheet for the stylesheet parameter, ensure that the file suffix for the out_directions_file value matches the file type the style sheet produces.",
          "datatype": "File"
        },
        {
          "name": "report_units",
          "explanation": "Specifies the linear units that will be used in the directions file. For example, even if the impedance attribute has units of meters, you can show directions in miles. \r\n\r\n\r\nFeet—The linear units will be feet.Yards—The linear units will be yards.Miles—The linear units will be miles.Meters—The linear units will be meters.Kilometers—The linear units will be kilometers.NauticalMiles—The linear units will be nautical miles",
          "datatype": "String"
        },
        {
          "name": "report_time(Optional)",
          "explanation": "Specifies whether travel time will be reported in the directions file.NO_REPORT_TIME—Travel time will not be reported in the directions file. REPORT_TIME—Travel time will be reported in the directions file. This is the default.",
          "datatype": "Boolean"
        },
        {
          "name": "time_attribute(Optional)",
          "explanation": "The time-based cost attribute that will be used to provide travel times in the directions. The cost attribute must exist on the network dataset used by the input network analysis layer. For vehicle routing problem layers and route layers that use time windows, only the travel mode's cost attribute can be used for this parameter.",
          "datatype": "String"
        },
        {
          "name": "language(Optional)",
          "explanation": "The language that will be used for driving directions.Use a two- or five-character language code representing one of the available languages for directions generation for this parameter value. In Python, you can retrieve a list of available language codes using the ListDirectionsLanguages function.",
          "datatype": "String"
        },
        {
          "name": "style_name(Optional)",
          "explanation": "Specifies the formatting style that will be used for directions.NA Desktop—Printable turn-by-turn directions will be used.NA Navigation—Turn-by-turn directions designed for an in-vehicle navigation device will be used.NA Campus—Turn-by-turn walking directions designed for pedestrian routes will be used.",
          "datatype": "String"
        },
        {
          "name": "stylesheet(Optional)",
          "explanation": "The style sheet\r\nthat will be used for generating a formatted output file type (such as PDF, Word, or HTML). The suffix of the file in the output directions file parameter must match the file type that the style sheet generates. The tool overrides the output file type parameter if this parameter contains a value.Tip:To create custom HTML and text style sheets, copy and edit the style sheets from Network Analyst. The style sheets are available in the &lt;ArcGIS installation directory&gt;\\Pro\\Resources\\NetworkAnalyst\\Directions\\Styles directory. The HTML style sheet is Dir2PHTML.xsl, and the text style sheet is Dir2PlainText.xsl.",
          "datatype": "File"
        }
      ],
      "summary": "Generates turn-by-turn directions from a network analysis layer with routes. The directions can be written to a file in text, XML, or HTML format. If you provide an appropriate style sheet, the directions can be written to any other file format.",
      "extraction_date": "2025-10-01T14:53:12.674184"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Make Closest Facility Analysis Layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/make-closest-facility-analysis-layer.htm",
      "parameters": [
        {
          "name": "network_data_source",
          "explanation": "The network dataset or service on which the network analysis will be performed.The parameter can be specified using one of the following:The catalog path to the network datasetA network dataset layer objectThe string name of the network dataset layerThe URL for ArcGIS Online or an ArcGIS Enterprise portal configured with standard routing services To use a portal URL, you must be signed in to the portal with an account that has routing privileges.Learn how to sign in to a portal in PythonLearn more about network analysis using routing services  When using ArcGIS Online or an ArcGIS Enterprise portal whose routing services are configured using\r\nArcGIS Online as the input network, solving the analysis will consume credits and will be subject to certain limits, such as the number of allowed inputs. Learn more about credit consumption and analysis limits in network analysis",
          "datatype": "Network Dataset Layer;String"
        },
        {
          "name": "layer_name(Optional)",
          "explanation": "The name of the network analysis layer that will be created.",
          "datatype": "String"
        },
        {
          "name": "travel_mode(Optional)",
          "explanation": "The name of the travel mode that will be used in the analysis. The travel mode represents a collection of network settings, such as travel restrictions and U-turn policies, that determine how a pedestrian, car, truck, or other medium of transportation moves through the network. Travel modes are defined on your network data source.An arcpy.na.TravelMode object and a string containing the valid JSON representation of a travel mode can also be used as input to this parameter.",
          "datatype": "String"
        },
        {
          "name": "travel_direction(Optional)",
          "explanation": "Specifies the direction of travel between facilities and incidents.\r\nTO_FACILITIES—Direction of travel is  from incidents to facilities. Retail stores commonly use this setting, since they are concerned with the time it takes the shoppers (incidents) to reach the store (facility). This is the default.FROM_FACILITIES—Direction of travel is from facilities to incidents. Fire departments commonly use this setting, since they are concerned with the time it takes to travel from the fire station (facility) to the location of the emergency (incident).The direction of travel may influence the facilities found if the network contains  one-way streets or  impedances based on the direction of travel. For instance, it may take 10 minutes to drive  from a particular incident to a particular facility, but the  journey may take 15 minutes traveling in the other direction, from the facility to the incident, because of one-way streets or different traffic conditions.",
          "datatype": "String"
        },
        {
          "name": "cutoff(Optional)",
          "explanation": "The  impedance value at which to stop searching for facilities for a given incident in the units of the impedance attribute used by the travel_mode value. This cutoff can be overridden on a per-incident basis by specifying individual cutoff values in the incidents sublayer when travel_direction = 'TO_FACILITIES' or on a per-facility basis by specifying individual cutoff values in the facilities sublayer when  travel_direction = 'FROM_FACILITIES'By default, no cutoff is used for the analysis.",
          "datatype": "Double"
        },
        {
          "name": "number_of_facilities_to_find(Optional)",
          "explanation": "The number of closest facilities to find per incident. This default can be overridden by specifying an individual value for the TargetFacilityCount  property in the incidents sublayer.\r\n The default number of facilities to find is one.",
          "datatype": "Long"
        },
        {
          "name": "time_of_day(Optional)",
          "explanation": "The time and date at which the routes will begin or end. \r\n The interpretation of this value  depends on whether time_of_day_usage is set to be the start time or the end time of the route.\r\nIf you chose a traffic-based impedance attribute, the solution will be generated given dynamic traffic conditions at the time of day specified here. A date and time can be specified as 5/14/2012 10:30 AM.Configure the analysis to use one of the following special dates to model a day of the week or the current date instead of a specific, static date: Today—12/30/1899Sunday—12/31/1899Monday—1/1/1900Tuesday—1/2/1900Wednesday—1/3/1900Thursday—1/4/1900Friday—1/5/1900Saturday—1/6/1900Learn more about how dates and times are used and interpreted in a network analysis",
          "datatype": "Date"
        },
        {
          "name": "time_zone(Optional)",
          "explanation": "Specifies the time zone for the time_of_day parameter.\r\nLOCAL_TIME_AT_LOCATIONS—The time_of_day parameter refers to the time zone in which the facilities or incidents are located. This is the default.If time_of_day_usage is set to START_TIME and travel_direction is set to FROM_FACILITIES, this is the time zone of the facilities. If time_of_day_usage is set to START_TIME and travel_direction is set to TO_FACILITIES, this is the time zone of the incidents.If time_of_day_usage is set to END_TIME and travel_direction is set to FROM_FACILITIES, this is the time zone of the incidents.If time_of_day_usage is set to END_TIME and travel_direction is set to TO_FACILITIES, this is the time zone of the facilities.   UTC—The time_of_day parameter refers to coordinated universal time (UTC). Choose this option if you want to find what's nearest for a specific time, such as now, but aren't certain in which time zone the facilities or incidents will be located.",
          "datatype": "String"
        },
        {
          "name": "time_of_day_usage(Optional)",
          "explanation": "Specifies whether the value of the time_of_day parameter represents the arrival or departure time for the route or routes.START_TIME—The time_of_day parameter value is interpreted as the departure time from the facility or incident. This is the default.When this setting is chosen, the time_of_day parameter indicates that the solver will find the best route given a departure time.END_TIME—The time_of_dayparameter value is interpreted as the arrival time at the facility or incident. This option is useful if you want to know the time to depart from a location so you arrive at the destination at the time specified in the time_of_day parameter.",
          "datatype": "String"
        },
        {
          "name": "line_shape(Optional)",
          "explanation": "Specifies the shape type that will be used for the route features that are output by the analysis.\r\nRegardless of the output shape type specified, the best route is always determined by the network impedance, not Euclidean distance. This means that only the route shapes are different, not the underlying traversal of the network.ALONG_NETWORK—The output routes will have the exact shape of the underlying network sources. The output includes route measurements for linear referencing. The measurements increase from the first stop and record the cumulative impedance to reach a given position.NO_LINES—No shape will be generated for the output routes. STRAIGHT_LINES—The output route shape will be a single straight line between the stops.",
          "datatype": "String"
        },
        {
          "name": "accumulate_attributes[accumulate_attributes,...](Optional)",
          "explanation": "A list of cost attributes to be accumulated during analysis. These accumulated attributes are for reference only; the solver only uses the cost attribute used by the designated travel mode when solving the analysis.For each cost attribute that is accumulated, a Total_[Impedance] property is populated in the network analysis output features. This parameter is not available if the network data source is an ArcGIS Online service or the network data source is a service on a version of Portal for ArcGIS that does not support accumulation.",
          "datatype": "String"
        },
        {
          "name": "generate_directions_on_solve(Optional)",
          "explanation": "Specifies whether directions will be generated when running the analysis.DIRECTIONS—Turn-by-turn directions will be generated on solve.NO_DIRECTIONS—Turn-by-turn directions will not be generated on solve. This is the default.For an analysis in which generating turn-by-turn directions is not needed, use the default option NO_DIRECTIONS to reduce the time it takes to solve the analysis.",
          "datatype": "Boolean"
        },
        {
          "name": "ignore_invalid_locations(Optional)",
          "explanation": "Specifies whether invalid input locations will be ignored. Typically, locations are invalid if they cannot be located on the network. When invalid locations are ignored, the solver will skip them and attempt to perform the analysis using the remaining locations.\r\nSKIP—Invalid input locations will be ignored and only valid locations will be used. This is the default.HALT—All input locations will be used. Invalid locations will cause the analysis to fail.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Makes a closest facility network analysis layer and sets its analysis properties. A closest facility analysis layer is useful in determining the closest facility or facilities to an incident based on a specified travel mode. The layer can be created using a local network dataset or a service hosted online or in a portal.",
      "extraction_date": "2025-10-01T14:53:15.305751"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "closest facility network analysis layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/closest-facility-analysis-layer.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:53:18.158697"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Make Last Mile Delivery Analysis Layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/make-last-mile-delivery-analysis-layer.htm",
      "parameters": [
        {
          "name": "network_data_source",
          "explanation": "The network dataset or service on which the network analysis will be performed.\t\t\t\t\tThe network must have at least one travel mode, one cost attribute with time units, and one cost attribute with distance units, as well as a time zone attribute.",
          "datatype": "Network Dataset Layer;String"
        },
        {
          "name": "layer_name(Optional)",
          "explanation": "The name of the network analysis layer that will be created.",
          "datatype": "String"
        },
        {
          "name": "travel_mode(Optional)",
          "explanation": "The name of the travel mode that will be used in the analysis. The travel mode represents a collection of network settings, such as travel restrictions and U-turn policies, that determine how a pedestrian, car, truck, or other medium of transportation moves through the network. Travel modes are defined on your network data source.An arcpy.na.TravelMode object and a string containing the valid JSON representation of a travel mode can also be used as input to this parameter.The travel mode's impedance attribute must have units of time.",
          "datatype": "String"
        },
        {
          "name": "time_units(Optional)",
          "explanation": "Specifies the time units that will be used by the analysis layer's properties and the temporal fields of the analysis layer's sublayers and tables (network analysis classes). This value does not need to match the units of the time cost attribute.\r\nMinutes—The time units will be minutes. This is the default.Seconds—The time units will be seconds.Hours—The time units will be hours.Days—The time units will be days.",
          "datatype": "String"
        },
        {
          "name": "distance_units(Optional)",
          "explanation": "Specifies the distance units that will be used by the analysis layer's properties and the distance fields of the analysis layer's sublayers and tables (network analysis classes). This value does not need to match the units of the optional distance cost attribute.Miles—The distance units will be miles. This is the default.Kilometers—The distance units will be kilometers.Feet—The distance units will be feet.Yards—The distance units will be yards.Meters—The distance units will be meters.Inches—The distance units will be inches.Centimeters—The distance units will be centimeters.Millimeters—The distance units will be millimeters.Decimeters—The distance units will be decimeters.NauticalMiles—The distance units will be nautical miles.Caution:The Inches, Centimeters, Millimeters, and Decimeters options are not available when the network data source is a service.",
          "datatype": "String"
        },
        {
          "name": "earliest_route_start_date(Optional)",
          "explanation": "The default earliest start date for \r\nroutes.  This date is used for all routes for which the EarliestStartDate field in the Routes sublayer is null. When no parameter value is specified, all rows in the Routes sublayer must specify a value in the EarliestStartDate field.\r\nSpecify this parameter value using a datetime.date object.Caution:Although the other Network Analyst solvers allow you to use special dates to model a day of the week or the current date instead of a specific, static date, the last mile delivery solver does not. You must choose a specific date.",
          "datatype": "Date"
        },
        {
          "name": "earliest_route_start_time(Optional)",
          "explanation": "The default earliest start time for \r\nroutes.  This time of day is used for all routes for which the EarliestStartTime field in the Routes sublayer is null. When no parameter value is specified, all rows in the Routes sublayer must specify a value in the EarliestStartTime field.\r\nSpecify this parameter value using a datetime.time object.",
          "datatype": "Date"
        },
        {
          "name": "max_route_total_time(Optional)",
          "explanation": "The maximum allowed total time for each route. The value can be any positive number.The value is used for all routes for which the MaxTotalTime field in the Routes sublayer is null. When no parameter value is specified, all rows in the Routes sublayer must specify a value in the MaxTotalTime field.The value is interpreted in the units specified in the time_units parameter.",
          "datatype": "Double"
        },
        {
          "name": "time_zone_for_time_fields(Optional)",
          "explanation": "Specifies the time zone that will be used for the input date-time fields supported by the tool. LOCAL_TIME_AT_LOCATIONS—  The date-time values associated with the orders or depots will be in the time zone in which the orders and depots are located. For routes, the date-time values are based on the time zone in which the starting depot for the route is located. If a route does not have a starting depot, all orders and depots across all the routes must be in a single time zone. This is the default.UTC—The date-time values associated with the orders, depots, and routes will be in coordinated universal time (UTC) and are not based on the time zone in which the orders or depots are located.  Specifying the date-time values in UTC is useful if you do not know the time zone in which the orders or depots are located or when you have orders and depots in multiple time zones and you want all the date-time values to start simultaneously.",
          "datatype": "String"
        },
        {
          "name": "sequence_gap(Optional)",
          "explanation": "The gap in numerical values to leave in the Sequence field in the Orders sublayer between adjacent orders when the analysis is solved.  The value acts as a multiplier for the actual sequence of orders on each route.  For example, if the gap is 5, the first order on the route will have a Sequence field value of 5, the second order on the route will have a Sequence field value of 10, the third 15, and so on.  This parameter helps support inserting orders after the initial route plan has been created because the new orders can be inserted into the sequence gaps.The value must be a positive integer.\r\nThe default is 1.The first time the analysis is solved, the Sequence field values will be populated with sequential values using the designated sequence gap.  On subsequent solves of the same analysis, the Sequence field values of existing orders will be maintained, and new orders will be inserted into the gaps using available integer values for the Sequence field that are not in use by other orders. If the sequence gap is set to 1, the sequence values will always be updated to contiguous values for every solve.",
          "datatype": "Long"
        },
        {
          "name": "ignore_invalid_order_locations(Optional)",
          "explanation": "Specifies whether invalid order locations will be ignored.\r\nSKIP—Invalid order locations will be ignored so that the analysis will succeed using only valid locations.HALT—Invalid order locations will not be ignored and will cause the analysis to fail. This is the default.",
          "datatype": "Boolean"
        },
        {
          "name": "line_shape(Optional)",
          "explanation": "Specifies the shape type that will be used for the route features that are output by the analysis.\r\nALONG_NETWORK—The output routes will have the exact shape of the underlying network sources. The output includes route measurements for linear referencing. The measurements increase from the first stop and record the cumulative impedance to reach a given position.NO_LINES—No shape will be generated for the output routes. STRAIGHT_LINES—The output route shape will be a single straight line between the stops.  This is the default.Regardless of the output shape type specified, the best route is always determined by the network impedance, not Euclidean distance. This means that only the route shapes are different, not the underlying traversal of the network.",
          "datatype": "String"
        },
        {
          "name": "generate_directions_on_solve(Optional)",
          "explanation": "Specifies whether directions will be generated when the analysis is solved.DIRECTIONS—Turn-by-turn directions will be generated on solve.NO_DIRECTIONS—Turn-by-turn directions will not be generated on solve. This is the default.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Creates a last mile delivery network analysis layer and sets its analysis properties. A last mile delivery analysis layer is useful for optimizing a set of routes using a fleet of vehicles. The layer can be created using a local network dataset or a service hosted online or in a portal.",
      "extraction_date": "2025-10-01T14:53:21.052039"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "last mile delivery network analysis layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/lmd-layer.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:53:27.313327"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Make Location-Allocation Analysis Layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/make-location-allocation-analysis-layer.htm",
      "parameters": [
        {
          "name": "network_data_source",
          "explanation": "The network dataset or service on which the network analysis will be performed.The parameter can be specified using one of the following:The catalog path to the network datasetA network dataset layer objectThe string name of the network dataset layerThe URL for ArcGIS Online or an ArcGIS Enterprise portal configured with standard routing services To use a portal URL, you must be signed in to the portal with an account that has routing privileges.Learn how to sign in to a portal in PythonLearn more about network analysis using routing services  When using ArcGIS Online or an ArcGIS Enterprise portal whose routing services are configured using\r\nArcGIS Online as the input network, solving the analysis will consume credits and will be subject to certain limits, such as the number of allowed inputs. Learn more about credit consumption and analysis limits in network analysis",
          "datatype": "Network Dataset Layer;String"
        },
        {
          "name": "layer_name(Optional)",
          "explanation": "The name of the network analysis layer that will be created.",
          "datatype": "String"
        },
        {
          "name": "travel_mode(Optional)",
          "explanation": "The name of the travel mode that will be used in the analysis. The travel mode represents a collection of network settings, such as travel restrictions and U-turn policies, that determine how a pedestrian, car, truck, or other medium of transportation moves through the network. Travel modes are defined on your network data source.An arcpy.na.TravelMode object and a string containing the valid JSON representation of a travel mode can also be used as input to this parameter.",
          "datatype": "String"
        },
        {
          "name": "travel_direction(Optional)",
          "explanation": "Specifies the direction of travel between facilities and demand points when calculating the network costs.FROM_FACILITIES—Direction of travel is from facilities to demand points. This is the default. Fire departments commonly use this setting, since they are concerned with the time it takes to travel from the fire station to the location of the emergency.TO_FACILITIES—Direction of travel is from demand points to facilities. Retail stores commonly use this setting, since they are concerned with the time it takes the shoppers to reach the store.The direction of travel may affect the allocation of the demand points to the facilities on a network with one-way restrictions and different impedances based on direction of travel. For instance, it may take 15 minutes to drive from the demand point to the facility but only 10 minutes when driving from the facility to the demand point.",
          "datatype": "String"
        },
        {
          "name": "problem_type(Optional)",
          "explanation": "The problem type that will be solved. The choice of the problem type depends on the kind of facility being located. Different kinds of facilities have different priorities and constraints.MINIMIZE_IMPEDANCE—This option solves the warehouse location problem. It selects a set of facilities so that the total sum of weighted impedances (demand at a location times the impedance to the closest facility) is minimized. This problem type is often known as the P-Median problem.  This is the default problem type.MAXIMIZE_COVERAGE—This option solves the fire station location problem. It selects facilities so that all or the greatest amount of demand is within a specified impedance cutoff.MAXIMIZE_CAPACITATED_COVERAGE—This option solves the location problem in which facilities have a finite capacity. It selects facilities so that all or the greatest amount of demand can be served without exceeding the capacity of any facility. In addition to honoring capacity, it selects facilities so that the total sum of weighted impedance (demand allocated to a facility multiplied by the impedance to or from the facility) is minimized.MINIMIZE_FACILITIES—This option solves the fire station location problem. It selects the minimum number of facilities needed to cover all or the greatest amount of demand within a specified impedance cutoff. MAXIMIZE_ATTENDANCE—This option solves the neighborhood store location problem in which the proportion of demand allocated to the nearest chosen facility falls with increasing distance. The set of facilities that maximize the total allocated demand is selected. Demand greater than the specified impedance cutoff does not affect the selected set of facilities.MAXIMIZE_MARKET_SHARE—This option solves the competitive facility location problem. It selects facilities to maximize market share in the presence of competitive facilities. Gravity model concepts are used to determine the proportion of demand allocated to each facility. The set of facilities that maximizes the total allocated demand is selected.TARGET_MARKET_SHARE—This option solves the competitive facility location problem. It selects facilities to reach a specified target market share in the presence of competitive facilities. Gravity model concepts are used to determine the proportion of demand allocated to each facility. The minimum number of facilities needed to reach the specified target market share is selected.",
          "datatype": "String"
        },
        {
          "name": "cutoff(Optional)",
          "explanation": "The maximum impedance at which a demand point can be allocated to a facility in the units of the impedance attribute used by the specified Travel Mode value. The maximum impedance is measured by the least-cost path along the network. If a demand point is outside the cutoff, it is left unallocated. This parameter can be used to model the maximum distance that people are willing to travel to visit stores or the maximum time that is permitted for a fire department to reach anyone in the community.This cutoff value can be overridden on a per-demand-point basis by specifying individual cutoff values in the demand points sublayer in the Cutoff_[Impedance] property. For example, it may show that people in rural areas are willing to travel up to 10 miles to reach a facility, while people in the city are only willing to travel up to 2 miles. You can model this behavior by setting the cutoff value of the analysis layer to 10 and setting the Cutoff_Miles value of each  demand point in urban areas to 2.By default, no cutoff value is used for the analysis.",
          "datatype": "Double"
        },
        {
          "name": "number_of_facilities_to_find(Optional)",
          "explanation": "The number of facilities that the solver will locate.  The default value is  1.The facilities with a FacilityType value of Required are always part of the solution when there are more facilities to find than required facilities; any excess facilities to choose are picked from candidate facilities.Any facilities that have a FacilityType value of Chosen before solving are treated as candidate facilities at solve time.This parameter value is not considered for the MINIMIZE_FACILITIES problem type since the solver searches for the minimum number of facilities to locate to maximize coverage.This parameter value is overridden for the TARGET_MARKET_SHARE problem type because the solver searches for the minimum number of facilities required to capture the specified market share.",
          "datatype": "Long"
        },
        {
          "name": "decay_function_type(Optional)",
          "explanation": "The equation that will be used for transforming the network cost between facilities and demand points. This parameter, along with the Decay Function Parameter Value parameter, specifies how severely the network impedance between facilities and demand points influences the solver's selection of facilities.LINEAR—The transformed network impedance between the facility and the demand point is the same as the shortest-path network impedance between them. With this option, the impedance parameter is always set to 1. This is the default.POWER—The transformed network impedance between the facility and the demand point is equal to the shortest-path network impedance raised to the power specified by the impedance parameter. Use this option with a positive impedance parameter to specify higher weight to nearby facilities. EXPONENTIAL—The transformed network impedance between the facility and the demand point is equal to the mathematical constant e raised to the power specified by the shortest-path network impedance multiplied with the impedance parameter. Use this option with a positive impedance parameter to specify a very high weight to nearby facilities.Exponential transformations are commonly used in conjunction with an impedance cutoff.Demand points have an ImpedanceTransformation property, which, if set, overrides the Decay Function Parameter Value parameter of the analysis layer on a per-demand-point basis. You may determine that the decay function should be different for urban and rural residents. You can model this by setting the impedance transformation for the analysis layer to match that of rural residents and setting the impedance transformation for the individual demand points located in urban areas to match that of urbanites.",
          "datatype": "String"
        },
        {
          "name": "decay_function_parameter_value(Optional)",
          "explanation": "A parameter value for the equations specified in the decay_function_type parameter. This parameter value is ignored when the decay_function_type parameter is set to LINEAR. For the POWER and EXPONENTIAL options, the value should not be zero.Demand points have an ImpedanceTransformation property, which, if set, overrides the decay_function_parameter_value parameter of the analysis layer on a per-demand-point basis. You may determine that the decay function should be different for urban and rural residents. You can model this by setting the impedance transformation for the analysis layer to match that of rural residents and setting the impedance transformation for the individual demand points located in urban areas to match that of urbanites.",
          "datatype": "Double"
        },
        {
          "name": "target_market_share(Optional)",
          "explanation": "The target market share, as a percentage, to solve for when the problem_type parameter is set to TARGET_MARKET_SHARE. It is the percentage of the total demand weight that you want the solution facilities to capture. The solver selects the minimum number of facilities required to capture the target market share specified by this numeric value.",
          "datatype": "Double"
        },
        {
          "name": "capacity(Optional)",
          "explanation": "The default capacity of facilities when the problem_type parameter is set to MAXIMIZE_CAPACITATED_COVERAGE. This parameter is ignored for all other problem types.\r\nFacilities have a Capacity property, which, if set to a nonnull value, overrides the capacity parameter value for that facility.",
          "datatype": "Double"
        },
        {
          "name": "time_of_day(Optional)",
          "explanation": "The time and date of  departure. The departure time can be  from facilities or demand points, depending on whether travel_direction is  set to TO_FACILITIES or FROM_FACILITIES.\r\nIf you chose a traffic-based impedance attribute, the solution will be generated given dynamic traffic conditions at the time of day specified here. A date and time can be specified as 5/14/2012 10:30 AM.Configure the analysis to use one of the following special dates to model a day of the week or the current date instead of a specific, static date: Today—12/30/1899Sunday—12/31/1899Monday—1/1/1900Tuesday—1/2/1900Wednesday—1/3/1900Thursday—1/4/1900Friday—1/5/1900Saturday—1/6/1900Learn more about how dates and times are used and interpreted in a network analysis",
          "datatype": "Date"
        },
        {
          "name": "time_zone(Optional)",
          "explanation": "The time zone of the Time of Day parameter.\r\nLOCAL_TIME_AT_LOCATIONS—The time of day parameter refers to the time zone in which the facilities or demand points are located. If the travel direction is facilities to demand points, this is the time zone of the facilities. If the travel direction is demand points to facilities, this is the time zone of the demand points. This is the default.UTC—The time of day parameter refers to coordinated universal time (UTC). Choose this option if you want the best location for a specific time, such as now, but aren't certain in which time zone the facilities or demand points will be located.",
          "datatype": "String"
        },
        {
          "name": "line_shape(Optional)",
          "explanation": "Specifies the output line shape.NO_LINES—No shape will be generated for the output of the analysis. This is useful if you are solving a very large problem and are interested only in a solution table and are not interested in visualizing the results on a map. STRAIGHT_LINES—The output line shapes will be straight lines connecting the solution facilities to their allocated demand points.  This is the default.Regardless of the output shape type specified, the best route is always determined by the network impedance, not Euclidean distance. This means that only the route shapes are different, not the underlying traversal of the network.",
          "datatype": "String"
        },
        {
          "name": "accumulate_attributes[accumulate_attributes,...](Optional)",
          "explanation": "A list of cost attributes to be accumulated during analysis. These accumulated attributes are for reference only; the solver only uses the cost attribute used by the designated travel mode when solving the analysis.For each cost attribute that is accumulated, a Total_[Impedance] property is populated in the network analysis output features. This parameter is not available if the network data source is an ArcGIS Online service or the network data source is a service on a version of Portal for ArcGIS that does not support accumulation.",
          "datatype": "String"
        },
        {
          "name": "ignore_invalid_locations(Optional)",
          "explanation": "Specifies whether invalid input locations will be ignored. Typically, locations are invalid if they cannot be located on the network. When invalid locations are ignored, the solver will skip them and attempt to perform the analysis using the remaining locations.\r\nSKIP—Invalid input locations will be ignored and only valid locations will be used. This is the default.HALT—All input locations will be used. Invalid locations will cause the analysis to fail.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Makes a location-allocation network analysis layer and sets its analysis properties. A location-allocation analysis layer is useful for choosing a given number of facilities from a set of potential locations so that a demand will be allocated to facilities in an optimal and efficient manner. The layer can be created using a local network dataset or a service hosted online or in a portal.",
      "extraction_date": "2025-10-01T14:53:30.355175"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "location-allocation network analysis layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/location-allocation-analysis-layer.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:53:34.432783"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Make OD Cost Matrix Analysis Layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/make-od-cost-matrix-analysis-layer.htm",
      "parameters": [
        {
          "name": "network_data_source",
          "explanation": "The network dataset or service on which the network analysis will be performed.The parameter can be specified using one of the following:The catalog path to the network datasetA network dataset layer objectThe string name of the network dataset layerThe URL for ArcGIS Online or an ArcGIS Enterprise portal configured with standard routing services To use a portal URL, you must be signed in to the portal with an account that has routing privileges.Learn how to sign in to a portal in PythonLearn more about network analysis using routing services  When using ArcGIS Online or an ArcGIS Enterprise portal whose routing services are configured using\r\nArcGIS Online as the input network, solving the analysis will consume credits and will be subject to certain limits, such as the number of allowed inputs. Learn more about credit consumption and analysis limits in network analysis",
          "datatype": "Network Dataset Layer;String"
        },
        {
          "name": "layer_name(Optional)",
          "explanation": "The name of the network analysis layer that will be created.",
          "datatype": "String"
        },
        {
          "name": "travel_mode(Optional)",
          "explanation": "The name of the travel mode that will be used in the analysis. The travel mode represents a collection of network settings, such as travel restrictions and U-turn policies, that determine how a pedestrian, car, truck, or other medium of transportation moves through the network. Travel modes are defined on your network data source.An arcpy.na.TravelMode object and a string containing the valid JSON representation of a travel mode can also be used as input to this parameter.",
          "datatype": "String"
        },
        {
          "name": "cutoff(Optional)",
          "explanation": "The  impedance value at which to stop searching for destinations for a given origin. This value will be in the units of the impedance attribute used by the chosen travel mode.  No destinations beyond this limit will be found. This cutoff value can be overridden on a per-origin basis by specifying individual cutoff values in the origins sublayer.\r\nBy default, no cutoff is used for the analysis.",
          "datatype": "Double"
        },
        {
          "name": "number_of_destinations_to_find(Optional)",
          "explanation": "The number of destinations to find per origin. The default can be overridden by specifying an individual value for the TargetDestinationCount property in the origins sublayer.\r\n By default, no limit is used, and all destinations are found.",
          "datatype": "Long"
        },
        {
          "name": "time_of_day(Optional)",
          "explanation": "The departure time from origins.\r\nIf you chose a traffic-based impedance attribute, the solution will be generated given dynamic traffic conditions at the time of day specified here. A date and time can be specified as 5/14/2012 10:30 AM.Configure the analysis to use one of the following special dates to model a day of the week or the current date instead of a specific, static date: Today—12/30/1899Sunday—12/31/1899Monday—1/1/1900Tuesday—1/2/1900Wednesday—1/3/1900Thursday—1/4/1900Friday—1/5/1900Saturday—1/6/1900Learn more about how dates and times are used and interpreted in a network analysis",
          "datatype": "Date"
        },
        {
          "name": "time_zone(Optional)",
          "explanation": "The time zone of the Time of Day parameter.\r\nLOCAL_TIME_AT_LOCATIONS—The Time of Day parameter refers to the time zone in which the origins are located. This is the default.  UTC—The Time of Day parameter refers to coordinated universal time (UTC). Choose this option if you want to calculate the OD cost matrix for a specific time, such as now, but aren't certain in which time zone the origins will be located.",
          "datatype": "String"
        },
        {
          "name": "line_shape(Optional)",
          "explanation": "Specifies the output line shape.NO_LINES—No shape will be generated for the output origin-destination route pair. This is useful when you have a large number of origins and destinations and are interested only in the impedance costs in the OD cost matrix table, not in visualizing the OD cost matrix on a map. STRAIGHT_LINES—The output route shape will be a single straight line between each of the origin-destination pairs. This is the default.Regardless of the output shape type specified, the best route is always determined by the network impedance, not Euclidean distance. This means that only the route shapes are different, not the underlying traversal of the network.",
          "datatype": "String"
        },
        {
          "name": "accumulate_attributes[accumulate_attributes,...](Optional)",
          "explanation": "A list of cost attributes to be accumulated during analysis. These accumulated attributes are for reference only; the solver only uses the cost attribute used by the designated travel mode when solving the analysis.For each cost attribute that is accumulated, a Total_[Impedance] property is populated in the network analysis output features. This parameter is not available if the network data source is an ArcGIS Online service or the network data source is a service on a version of Portal for ArcGIS that does not support accumulation.",
          "datatype": "String"
        },
        {
          "name": "ignore_invalid_locations(Optional)",
          "explanation": "Specifies whether invalid input locations will be ignored. Typically, locations are invalid if they cannot be located on the network. When invalid locations are ignored, the solver will skip them and attempt to perform the analysis using the remaining locations.\r\nSKIP—Invalid input locations will be ignored and only valid locations will be used. This is the default.HALT—All input locations will be used. Invalid locations will cause the analysis to fail.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Makes an origin destination (OD) cost matrix network analysis layer and sets its analysis properties. An OD cost matrix analysis layer is useful for representing a matrix of costs going from a set of origin locations to a set of destination locations. The layer can be created using a local network dataset or a service hosted online or in a portal.",
      "extraction_date": "2025-10-01T14:53:37.529145"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "origin destination (OD) cost matrix network analysis layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/od-cost-matrix-analysis-layer.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:53:40.074898"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Make Route Analysis Layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/make-route-analysis-layer.htm",
      "parameters": [
        {
          "name": "network_data_source",
          "explanation": "The network dataset or service on which the network analysis will be performed.The parameter can be specified using one of the following:The catalog path to the network datasetA network dataset layer objectThe string name of the network dataset layerThe URL for ArcGIS Online or an ArcGIS Enterprise portal configured with standard routing services To use a portal URL, you must be signed in to the portal with an account that has routing privileges.Learn how to sign in to a portal in PythonLearn more about network analysis using routing services  When using ArcGIS Online or an ArcGIS Enterprise portal whose routing services are configured using\r\nArcGIS Online as the input network, solving the analysis will consume credits and will be subject to certain limits, such as the number of allowed inputs. Learn more about credit consumption and analysis limits in network analysis",
          "datatype": "Network Dataset Layer;String"
        },
        {
          "name": "layer_name(Optional)",
          "explanation": "The name of the network analysis layer that will be created.",
          "datatype": "String"
        },
        {
          "name": "travel_mode(Optional)",
          "explanation": "The name of the travel mode to use in the analysis. The travel mode represents a collection of network settings, such as travel restrictions and U-turn policies, that determine how a pedestrian, car, truck, or other medium of transportation moves through the network. Travel modes are defined on your network data source.\t\t\t\t\tAn arcpy.na.TravelMode object and  a string containing the valid JSON representation of a travel mode can also be used as input to the parameter.",
          "datatype": "String"
        },
        {
          "name": "sequence(Optional)",
          "explanation": "Specifies whether the input stops must be visited in a particular order when calculating the optimal route. This option changes the route analysis from a shortest-path problem to a traveling salesperson problem (TSP).USE_CURRENT_ORDER—The stops will be visited in the input order. This is the default.FIND_BEST_ORDER—The stops will be reordered to find the optimal route. This option changes the route analysis from a shortest-path problem to a traveling salesperson problem (TSP). PRESERVE_BOTH—The first and last stops will be preserved by input order. The rest will be reordered to find the optimal route.PRESERVE_FIRST—The first stop will be preserved by input order. The rest will be reordered to find the optimal route.PRESERVE_LAST—The last stop will be preserved by input order. The rest will be reordered to find the optimal route.",
          "datatype": "String"
        },
        {
          "name": "time_of_day(Optional)",
          "explanation": "The start date and time for the route. Route start time is typically used to find routes based on the impedance attribute that varies with the time of the day. For example, a start time of 7:00 a.m. can be used to find a route that considers rush hour traffic. The default value for this parameter is 8:00 a.m. A date and time can be specified as 10/21/05 10:30 AM. If the route spans multiple days and only the start time is specified, the current date is used.\t\t\t\t\t\t\r\n\t\t\t\t\t\t After the solve, the start and end times of the route are populated in the output routes. These start and end times are also used when directions are generated. \t\t\t\t\t\tConfigure the analysis to use one of the following special dates to model a day of the week or the current date instead of a specific, static date: Today—12/30/1899Sunday—12/31/1899Monday—1/1/1900Tuesday—1/2/1900Wednesday—1/3/1900Thursday—1/4/1900Friday—1/5/1900Saturday—1/6/1900Learn more about how dates and times are used and interpreted in a network analysis",
          "datatype": "Date"
        },
        {
          "name": "time_zone(Optional)",
          "explanation": "Specifies the time zone of the time_of_day  parameter.\r\nLOCAL_TIME_AT_LOCATIONS—The time_of_day parameter refers to the time zone in which the first stop of a route is located. This is the default.If you are generating many routes that start in multiple times zones,  the start times are staggered in coordinated universal time (UTC). For example, a time_of_day value of 10:00 a.m., 2 January, means a start time of  10:00 a.m. eastern standard time (3:00 p.m. UTC) for routes beginning in the eastern time zone and 10:00 a.m. central standard time (4:00 p.m. UTC) for routes beginning in the central time zone. The start times are offset by one hour in UTC.The arrival and departure times and dates recorded in the output Stops feature class will refer to the local time zone of the first stop for each route.UTC—The time_of_day parameter refers to coordinated universal time (UTC). Choose this option if you want to generate a route for a specific time, such as now, but aren't certain in which time zone the first stop will be located.If you are generating many routes spanning multiple times zones,  the start times in UTC are simultaneous. For example, a time_of_day value of 10:00 a.m., 2 January, means a start time of  5:00 a.m. eastern standard time (10:00 a.m. UTC) for routes beginning in the eastern time zone and 4:00 a.m. central standard time (10:00 a.m. UTC) for routes beginning in the central time zone. Both routes start at 10:00 a.m. UTC.The arrival and departure times and dates recorded in the output Stops feature class will refer to UTC.",
          "datatype": "String"
        },
        {
          "name": "line_shape(Optional)",
          "explanation": "Specifies the shape type that will be used for the route features that are output by the analysis.\r\nALONG_NETWORK—The output routes will have the exact shape of the underlying network sources. The output includes route measurements for linear referencing. The measurements increase from the first stop and record the cumulative impedance to reach a given position.NO_LINES—No shape will be generated for the output routes. STRAIGHT_LINES—The output route shape will be a single straight line between the stops.Regardless of the output shape type specified, the best route is always determined by the network impedance, not Euclidean distance. This means that only the route shapes are different, not the underlying traversal of the network.",
          "datatype": "String"
        },
        {
          "name": "accumulate_attributes[accumulate_attributes,...](Optional)",
          "explanation": "A list of cost attributes to be accumulated during analysis. These accumulated attributes are for reference only; the solver only uses the cost attribute used by the designated travel mode when solving the analysis.For each cost attribute that is accumulated, a Total_[Impedance] property is populated in the network analysis output features. This parameter is not available if the network data source is an ArcGIS Online service or the network data source is a service on a version of Portal for ArcGIS that does not support accumulation.",
          "datatype": "String"
        },
        {
          "name": "generate_directions_on_solve(Optional)",
          "explanation": "Specifies whether directions will be generated when  running the analysis.\r\nDIRECTIONS—Turn-by-turn directions will be generated on solve. This is the default.NO_DIRECTIONS—Turn-by-turn directions will not be generated on solve. For an analysis in which generating turn-by-turn directions is not needed, using the NO_DIRECTIONS option will reduce the time it takes to solve the analysis.",
          "datatype": "Boolean"
        },
        {
          "name": "time_zone_for_time_fields(Optional)",
          "explanation": "Specifies the time zone that will be used to interpret the time fields included in the input tables, such as the fields used for time windows.\r\nLOCAL_TIME_AT_LOCATIONS—The dates and times in the time fields  for the stop will be interpreted according to the  time zone in which the stop is located. This is the default.UTC—The dates and times in the time fields  for the stop refer to coordinated universal time (UTC).",
          "datatype": "String"
        },
        {
          "name": "ignore_invalid_locations(Optional)",
          "explanation": "Specifies whether invalid input locations will be ignored. Typically, locations are invalid if they cannot be located on the network. When invalid locations are ignored, the solver will skip them and attempt to perform the analysis using the remaining locations.\r\nSKIP—Invalid input locations will be ignored and only valid locations will be used. This is the default.HALT—All input locations will be used. Invalid locations will cause the analysis to fail.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Makes a route network analysis layer and sets its analysis properties. A route network analysis layer is useful for determining the best route between a set of network locations based on a specified network cost. The layer can be created using a local network dataset or a routing service hosted online or in a portal.",
      "extraction_date": "2025-10-01T14:53:42.729439"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "route network analysis layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/route-analysis-layer.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:53:45.529584"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Make Service Area Analysis Layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/make-service-area-analysis-layer.htm",
      "parameters": [
        {
          "name": "network_data_source",
          "explanation": "The network dataset or service on which the network analysis will be performed.The parameter can be specified using one of the following:The catalog path to the network datasetA network dataset layer objectThe string name of the network dataset layerThe URL for ArcGIS Online or an ArcGIS Enterprise portal configured with standard routing services To use a portal URL, you must be signed in to the portal with an account that has routing privileges.Learn how to sign in to a portal in PythonLearn more about network analysis using routing services  When using ArcGIS Online or an ArcGIS Enterprise portal whose routing services are configured using\r\nArcGIS Online as the input network, solving the analysis will consume credits and will be subject to certain limits, such as the number of allowed inputs. Learn more about credit consumption and analysis limits in network analysis",
          "datatype": "Network Dataset Layer;String"
        },
        {
          "name": "layer_name(Optional)",
          "explanation": "The name of the network analysis layer that will be created.",
          "datatype": "String"
        },
        {
          "name": "travel_mode(Optional)",
          "explanation": "The name of the travel mode that will be used in the analysis. The travel mode represents a collection of network settings, such as travel restrictions and U-turn policies, that determine how a pedestrian, car, truck, or other medium of transportation moves through the network. Travel modes are defined on your network data source.An arcpy.na.TravelMode object and a string containing the valid JSON representation of a travel mode can also be used as input to this parameter.",
          "datatype": "String"
        },
        {
          "name": "travel_direction(Optional)",
          "explanation": "Specifies the direction of travel to or from the facilities.\r\nFROM_FACILITIES—The direction of travel is away from the facilities. This is the default.TO_FACILITIES—The direction of travel is toward the facilities.Using this parameter can result in different service areas on a network with one-way restrictions and different impedances based on direction of travel. The service area for a pizza delivery store, for example, should be created away from the facility, whereas the service area of a hospital should be created toward the facility.",
          "datatype": "String"
        },
        {
          "name": "cutoffs[cutoffs,...](Optional)",
          "explanation": "The extent of the service area to be calculated in the units of the impedance attribute used by the selected travel mode.  For example, when analyzing driving time, a cutoff value of 10  means that the resulting service area will represent the area reachable within a 10-minute drive time.Multiple cutoffs can be set to create concentric service areas. For example, to find 2-, 3-, and 5-minute service areas for the same facility, specify 2, 3, and 5 as the values for this parameter.This default cutoff value can be overridden on a per-facility basis by specifying individual break values in the facilities sublayer.",
          "datatype": "Double"
        },
        {
          "name": "time_of_day(Optional)",
          "explanation": "The time to depart from or arrive at the facilities of the service area layer. The interpretation of this value as a departure or arrival time  depends on whether travel is away from or toward the facilities.It represents the departure time if travel_direction='FROM_FACILITIES'.It represents the arrival time if travel_direction='TO_FACILITIES'. The time_of_day  parameter is most useful for finding the roads that can be reached based on a travel mode that uses an impedance attribute that varies with the time of the day, such as one based on dynamic traffic conditions.  Solving the same analysis using different time_of_day values allows you to see how a facility's reach changes over time. For example, the five-minute service area around a fire station may start out large in the early morning, diminish during the morning rush hour, grow in the late morning, and so on throughout the day.A date and time can be specified as 10/21/2015 10:30 AM.Configure the analysis to use one of the following special dates to model a day of the week or the current date instead of a specific, static date: Today—12/30/1899Sunday—12/31/1899Monday—1/1/1900Tuesday—1/2/1900Wednesday—1/3/1900Thursday—1/4/1900Friday—1/5/1900Saturday—1/6/1900Learn more about how dates and times are used and interpreted in a network analysis",
          "datatype": "Date"
        },
        {
          "name": "time_zone(Optional)",
          "explanation": "Specifies the time zone for the time of day parameter.LOCAL_TIME_AT_LOCATIONS—The time of day parameter will use the time zone or zones in which the facilities are located. The start or end times of the service areas are staggered by time zone. This is the default.For example, setting time of day to 9:00 a.m. causes service areas to be generated for 9:00 a.m. eastern time for  facilities in the eastern time zone, 9:00 a.m. central time for facilities in the central time zone, 9:00 a.m. mountain time for facilities in the mountain time zone, and so on.  If stores in a chain that span the U.S. open at 9:00 a.m. local time, choose this parameter value to find market territories at opening time for all stores in one solve. First, the stores in the eastern time zone open and a polygon is generated. An hour later, stores open in the central time zone, and so on. Nine o'clock is always in local time but staggered in real time.UTC—The time of day parameter will use coordinated universal time (UTC). All facilities are reached or departed from simultaneously, regardless of the time zone or zones in which they are located.Setting time of day to 2:00 p.m. causes service areas to be generated for 9:00 a.m. eastern standard time for facilities in the eastern time zone, 8:00 a.m. central standard time for facilities in the central time zone, 7:00 a.m. mountain standard time for facilities in the mountain time zone, and so on.Note:The scenario above assumes standard time. During daylight saving time, the eastern, central, and mountain times will each be one hour ahead (that is, 10:00, 9:00, and 8:00 a.m., respectively).One of the cases in which the UTC option is useful is to visualize emergency response coverage for a jurisdiction that is split into two time zones. The emergency vehicles are loaded as facilities. Time of day is set to now in UTC. (You need to determine what  the current time and date are  in terms of UTC to correctly use this option.) Other properties are set and the analysis is solved. Even though a time-zone boundary divides the vehicles, the results show areas that can be reached given current traffic conditions. This same process  can be used for other times as well, not just for now.",
          "datatype": "String"
        },
        {
          "name": "output_type(Optional)",
          "explanation": "Specifies the type of output to be generated.\r\nService area output can be line features representing the roads reachable before the  cutoffs are exceeded or the polygon features encompassing these lines (representing the reachable area).POLYGONS—The service area output will contain polygons only. This is the default.LINES—The service area output will contain lines only.POLYGONS_AND_LINES—The service area output will contain both polygons and lines.The  Lines and Polygons and lines output types are not available if the network\r\ndata source is a service on a version of  Portal for ArcGIS that does not support line generation.",
          "datatype": "String"
        },
        {
          "name": "polygon_detail(Optional)",
          "explanation": "Specifies the level of detail of the output polygons.\r\nSTANDARD—Polygons with a standard level of detail will be created. This is the default.GENERALIZED—Generalized polygons will be created using the network's hierarchy attribute to produce results quickly. This option is not available if the network does not have a hierarchy attribute.HIGH—Polygons with a higher level of detail will be created for applications in which precise results are important.If the analysis includes an urban area with a grid-like street network, the difference between generalized and standard polygons will be minimal. However, for mountain and rural roads, the standard and detailed polygons may present more accurate results than generalized polygons.",
          "datatype": "String"
        },
        {
          "name": "geometry_at_overlaps(Optional)",
          "explanation": "Specifies the behavior of service-area output from multiple facilities in relation to one another.OVERLAP—Individual polygons or sets of lines for each facility will be created. The polygons or lines can overlap each other. This is the default.DISSOLVE—The polygons of multiple facilities that have the same cutoff value will be joined into a single polygon. This option does not apply to line output.SPLIT—An area will be assigned to the closest facility so polygons or lines do not overlap each other.",
          "datatype": "String"
        },
        {
          "name": "geometry_at_cutoffs(Optional)",
          "explanation": "Specifies the behavior of service area output for a single  facility when multiple cutoff values are specified. This parameter does not apply to line output.RINGS—Each polygon will include only the area between consecutive cutoff values. It will not include the area between the facility and any smaller cutoffs. For example, if you create 5- and 10-minute service areas, the 5-minute service area polygon will include the area reachable in 0 to 5 minutes, and the 10-minute service area polygon will include the area reachable in 5 to 10 minutes. This is the default.DISKS—Each polygon will include the area reachable from the facility up to the cutoff value, including the area reachable within smaller cutoff values. For example, if you create 5- and 10-minute service areas, the 10-minute service area polygon will include the area under the 5-minute service area polygon.",
          "datatype": "String"
        },
        {
          "name": "polygon_trim_distance(Optional)",
          "explanation": "The service area polygon trim distance.  The polygon trim distance is the distance the service area polygon will extend from the road when no other reachable roads are nearby, similar to a line buffer size. This is useful when the network is sparse and you don't want the service area to cover large areas where there are no features. This parameter includes a value and units for the distance. The default value is 100 meters.",
          "datatype": "Linear Unit"
        },
        {
          "name": "exclude_sources_from_polygon_generation[exclude_sources_from_polygon_generation,...](Optional)",
          "explanation": "The network dataset edge sources that will be excluded when generating service area polygons. Polygons will not be generated around the excluded sources, even though they are traversed in the analysis.Excluding a network source from service area polygons does not prevent those sources from being traversed. Excluding sources from service area polygons only influences the polygon shape of the service areas. To prevent traversal of a given network source, you must create an appropriate restriction when defining the network dataset.This is useful if you have some network sources that you don't want to be included in the polygon generation because they create less-accurate polygons or are inconsequential for the service area analysis. For example, while creating a walk-time service area in a multimodal network that includes streets and metro lines, you should exclude the metro lines from polygon generation. Although the traveler can use the metro lines, they cannot stop partway along a metro line and enter a nearby building.  Instead, they must travel the full length of the metro line, exit the metro system at a station, then use the streets to walk to the building. It would be inaccurate to generate a polygon feature around a metro line.  This parameter is not available when the output geometry types do not include polygons, there are fewer than two edge sources in the network, the network data source is an ArcGIS Online service, or the network data source is a service on a version of Portal for ArcGIS that does not support excluding sources.",
          "datatype": "String"
        },
        {
          "name": "accumulate_attributes[accumulate_attributes,...](Optional)",
          "explanation": "A list of cost attributes to be accumulated during analysis. These accumulated attributes are for reference only; the solver only uses the cost attribute used by the designated travel mode when solving the analysis.For each cost attribute that is accumulated, a Total_[Impedance] property is populated in the network analysis output features. This parameter is not available if the analysis layer is not configured to output lines, the network data source is an ArcGIS Online service, or the network data source is a service on a version of Portal for ArcGIS that does not support accumulation.",
          "datatype": "String"
        },
        {
          "name": "ignore_invalid_locations(Optional)",
          "explanation": "Specifies whether invalid input locations will be ignored. Typically, locations are invalid if they cannot be located on the network. When invalid locations are ignored, the solver will skip them and attempt to perform the analysis using the remaining locations.\r\nSKIP—Invalid input locations will be ignored and only valid locations will be used. This is the default.HALT—All input locations will be used. Invalid locations will cause the analysis to fail.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Makes a service area network analysis layer and sets its analysis properties. A service area analysis layer is useful in determining the area of accessibility within a given cutoff cost from a facility location. The layer can be created using a local network dataset or a routing service hosted online or in a portal.",
      "extraction_date": "2025-10-01T14:53:48.335223"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "service area network analysis layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/service-area-analysis-layer.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:53:51.073295"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Make Vehicle Routing Problem Analysis Layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/make-vehicle-routing-problem-analysis-layer.htm",
      "parameters": [
        {
          "name": "network_data_source",
          "explanation": "The network dataset or service on which the network analysis will be performed. Use the portal URL for a service.",
          "datatype": "Network Dataset Layer; String"
        },
        {
          "name": "layer_name(Optional)",
          "explanation": "The name of the VRP network analysis layer to create.",
          "datatype": "String"
        },
        {
          "name": "travel_mode(Optional)",
          "explanation": "The name of the travel mode to use in the analysis. The travel mode represents a collection of network settings, such as travel restrictions and U-turn policies, that determine how a pedestrian, car, truck, or other medium of transportation moves through the network. Travel modes are defined on your network data source. An arcpy.na.TravelMode object and a string containing the valid JSON representation of a travel mode can also be used as input to the parameter.",
          "datatype": "String"
        },
        {
          "name": "time_units(Optional)",
          "explanation": "Specifies the time units to be used by the temporal fields of the analysis layer's sublayers and tables (network analysis classes). This value does not need to match the units of the time cost attribute.\r\nLearn more about cost attributesMinutes—The time units will be minutes. This is the default.Seconds—The time units will be seconds.Hours—The time units will be hours.Days—The time units will be days.",
          "datatype": "String"
        },
        {
          "name": "distance_units(Optional)",
          "explanation": "Specifies the distance units to be used by the distance fields of the analysis layer's sublayers and tables (network analysis classes). This value does not need to match the units of the optional distance cost attribute.Learn more about cost attributesMiles—The distance units will be miles. This is the default.Kilometers—The distance units will be kilometers.Feet—The distance units will be feet.Yards—The distance units will be yards.Meters—The distance units will be meters.Inches—The distance units will be inches.Centimeters—The distance units will be centimeters.Millimeters—The distance units will be millimeters.Decimeters—The distance units will be decimeters.NauticalMiles—The distance units will be nautical miles.",
          "datatype": "String"
        },
        {
          "name": "default_date(Optional)",
          "explanation": "The implied date for time field values that don't have a date specified with the time. If a time field for an order object, such as TimeWindowStart, has a time-only value, the date is assumed to be the default date. The default date has no effect on time field values that already have a date.Configure the analysis to use one of the following special dates to model a day of the week or the current date instead of a specific, static date: Today—12/30/1899Sunday—12/31/1899Monday—1/1/1900Tuesday—1/2/1900Wednesday—1/3/1900Thursday—1/4/1900Friday—1/5/1900Saturday—1/6/1900Learn more about how dates and times are used and interpreted in a network analysis",
          "datatype": "Date"
        },
        {
          "name": "time_zone_for_time_fields(Optional)",
          "explanation": "Specifies the time zone to be used for the input date-time fields supported by the tool. LOCAL_TIME_AT_LOCATIONS—  The date-time values associated with the orders or depots will be in the time zone in which the orders and depots are located. For routes, the date-time values are based on the time zone in which the starting depot for the route is located. If a route does not have a starting depot, all orders and depots across all the routes must be in a single time zone. For breaks, the date-time values are based on the time zone of the routes. This is the default.UTC—The date-time values associated with the orders or depots will be in coordinated universal time (UTC) and are not based on the time zone in which the orders or depots are located.  Specifying the date-time values in UTC is useful if you do not know the time zone in which the orders or depots are located or when you have orders and depots in multiple time zones and you want all the date-time values to start simultaneously. The UTC option is applicable only when your network dataset defines a time zone attribute. Otherwise, all the date-time values are treated as the time zone corresponding to that location.",
          "datatype": "String"
        },
        {
          "name": "line_shape(Optional)",
          "explanation": "Specifies the shape type that will be used for the route features that are output by the analysis.\r\nALONG_NETWORK—The output routes will have the exact shape of the underlying network sources. The output includes route measurements for linear referencing. The measurements increase from the first stop and record the cumulative impedance to reach a given position.NO_LINES—No shape will be generated for the output routes. STRAIGHT_LINES—The output route shape will be a single straight line between the stops.This option is not available if the selected network data source is a service.Regardless of the output shape type specified, the best route is always determined by the network impedance, not Euclidean distance. This means that only the route shapes are different, not the underlying traversal of the network.",
          "datatype": "String"
        },
        {
          "name": "time_window_factor(Optional)",
          "explanation": "Specifies the importance of honoring time windows without causing violations. A time window violation occurs when a route arrives at an order, depot, or break after a time window has closed. The violation is the interval between the end of the time window and the arrival time of a route.\r\nHigh—The solver searches for a solution that minimizes time window violations at the expense of increasing the overall travel time. Choose this setting if arriving on time at orders is more important than minimizing the overall solution cost. This may be the case if you are meeting customers at your orders and you don't want to inconvenience them with late arrivals (another option is to use rigid time windows that cannot be violated).Given other constraints of a vehicle routing problem, it may be impossible to visit all the orders within their time windows. In this case, even a High setting may produce violations.Medium—The solver searches for a balance between meeting time windows and reducing the overall solution cost. This is the default.Low—The solver searches for a solution that minimizes overall travel time, regardless of time windows. Choose this setting if respecting time windows is less important than reducing the overall solution cost. You may want to use this setting if you have a growing backlog of service requests. For the purpose of servicing more orders in a day and reducing the backlog, you can choose this setting even though customers may be inconvenienced with your fleet's late arrivals.",
          "datatype": "String"
        },
        {
          "name": "excess_transit_factor(Optional)",
          "explanation": "Specifies the importance of reducing excess transit time. Excess transit time is the amount of time exceeding the time required to travel directly between paired orders. The excess time results from breaks or travel to other orders or depots between visits to the paired orders.  This parameter is only relevant if you're using Order Pairs. Learn more about Order PairsHigh—The solver searches for a solution with less excess transit time between paired orders at the expense of increasing the overall travel costs. Use this setting if you are transporting people between paired orders and you want to shorten their ride time. This is characteristic of taxi services.Medium—The solver searches for a balance between reducing excess transit time and reducing the overall solution cost. This is the default.Low—The solver searches for a solution that minimizes overall solution cost, regardless of excess transit time. This setting is commonly used with courier services. Since couriers transport packages as opposed to people, ride time is not as important. Using this setting allows couriers to service paired orders in the proper sequence and minimize the overall solution cost.",
          "datatype": "String"
        },
        {
          "name": "generate_directions_on_solve(Optional)",
          "explanation": "Specifies whether directions will be generated. DIRECTIONS—Turn-by-turn directions will be generated on solve. This is the default.NO_DIRECTIONS—Turn-by-turn directions will not be generated on solve.",
          "datatype": "Boolean"
        },
        {
          "name": "spatial_clustering(Optional)",
          "explanation": "Specifies whether spatial clustering will be used.CLUSTER—The orders assigned to an individual route will be spatially clustered. Clustering orders tends to keep routes in smaller areas and reduce how often route lines intersect one another; however, clustering can increase overall travel times. This is the default.NO_CLUSTER—The solver will not prioritize spatially clustering orders and the route lines may intersect. Use this option if route zones are specified.",
          "datatype": "Boolean"
        },
        {
          "name": "ignore_invalid_locations(Optional)",
          "explanation": "Specifies whether invalid input locations will be ignored.\r\nSKIP—Invalid input locations will be ignored so that the analysis will succeed using only valid locations.HALT—Invalid locations will not be ignored and will cause the analysis to fail. This is the default.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Creates a vehicle routing problem (VRP) network analysis layer and sets its analysis properties. A VRP analysis layer is useful for optimizing a set of routes using a fleet of vehicles. The layer can be created using a local network dataset or a service hosted online or in a portal.",
      "extraction_date": "2025-10-01T14:53:53.716542"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "vehicle routing problem (VRP) network analysis layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/vehicle-routing-problem-analysis-layer.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:53:57.422554"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Make Waste Collection Analysis Layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/make-waste-collection-analysis-layer.htm",
      "parameters": [
        {
          "name": "network_data_source",
          "explanation": "The network dataset on which the network analysis will be performed.\t\t\t\t\tThe network must have at least one travel mode, one cost attribute with time units, and one cost attribute with distance units.",
          "datatype": "Network Dataset Layer;String"
        },
        {
          "name": "layer_name(Optional)",
          "explanation": "The name of the network analysis layer that will be created.",
          "datatype": "String"
        },
        {
          "name": "travel_mode(Optional)",
          "explanation": "The name of the travel mode that will be used in the analysis. The travel mode represents a collection of network settings, such as travel restrictions and U-turn policies, that determine how a pedestrian, car, truck, or other medium of transportation moves through the network. Travel modes are defined on your network data source.An arcpy.na.TravelMode object and a string containing the valid JSON representation of a travel mode can also be used as input to this parameter.The travel mode's impedance attribute must have units of time.For waste collection analysis, U-turns must be allowed at dead ends. If the travel mode does not allow any U-turns, the solver will relax the travel mode's U-turn policy to allow U-turns at dead ends.",
          "datatype": "String"
        },
        {
          "name": "time_units(Optional)",
          "explanation": "Specifies the time units that will be used by the analysis layer's properties and the temporal fields of the analysis layer's sublayers and tables (network analysis classes). This value does not need to match the units of the time cost attribute.\r\nMinutes—The time units will be minutes. This is the default.Seconds—The time units will be seconds.Hours—The time units will be hours.Days—The time units will be days.",
          "datatype": "String"
        },
        {
          "name": "distance_units(Optional)",
          "explanation": "Specifies the distance units that will be used by the analysis layer's properties and the distance fields of the analysis layer's sublayers and tables (network analysis classes). This value does not need to match the units of the optional distance cost attribute.Miles—The distance units will be miles. This is the default.Kilometers—The distance units will be kilometers.Feet—The distance units will be feet.Yards—The distance units will be yards.Meters—The distance units will be meters.Inches—The distance units will be inches.Centimeters—The distance units will be centimeters.Millimeters—The distance units will be millimeters.Decimeters—The distance units will be decimeters.NauticalMiles—The distance units will be nautical miles.",
          "datatype": "String"
        },
        {
          "name": "route_start_time(Optional)",
          "explanation": "The default start time for \r\nroutes.  This time of day is used for all routes for which the StartTime field in the Routes sublayer is null. When no parameter value is specified, all rows in the Routes sublayer must specify a value in the StartTime field.\r\nSpecify this parameter value using a datetime.time object.",
          "datatype": "Date"
        },
        {
          "name": "max_route_total_time(Optional)",
          "explanation": "The maximum allowed total time for each route. The value can be any positive number.This value will be used for all routes for which the MaxTotalTime field in the Routes sublayer is null. When no value is specified, all rows in the Routes sublayer must specify a value in the MaxTotalTime field.The value is interpreted in the units specified in the time_units parameter.",
          "datatype": "Double"
        },
        {
          "name": "stop_collection_mode(Optional)",
          "explanation": "Specifies the default stop collection mode for each stop.  This value can be one of the options listed below, or it can be left blank (the default).This value will be used for all stops for which the CollectionMode field in the Stops sublayer is null. When no value is specified, all rows in the Stops sublayer must specify a value in the CollectionMode field.ONE_SIDE—The two sides of the street on which this stop is located will be collected separately with different passes down the street edge.BOTH_SIDES—Both sides of the street on which this stop is located will be collected at once with a single pass down the street edge.",
          "datatype": "String"
        }
      ],
      "summary": "Creates a waste collection network analysis layer and sets its analysis properties. A waste collection analysis layer is useful for optimizing a set of routes using a fleet of vehicles to pick up municipal waste. The layer can be created using a network dataset.",
      "extraction_date": "2025-10-01T14:53:59.820416"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "waste collection network analysis layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/waste-collection-analysis-layer.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:54:02.754968"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Share As Route Layers",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/share-as-route-layers.htm",
      "parameters": [
        {
          "name": "in_network_analysis_layer",
          "explanation": "The network analysis layer from which the route layer items will be created. The network analysis layer should already be solved.Route, Closest facility, Vehicle routing problem, and Last mile delivery network analysis layers are supported as valid inputs to this parameter.The input can also be a .zip file containing route data created by the saveRouteData() method of the arcpy.nax solver result objects or the service parameter in the REST API that return a zipped geodatabase of route data with the correct schema.",
          "datatype": "File; Network Analyst Layer"
        },
        {
          "name": "summary(Optional)",
          "explanation": "The summary that will be used by the route layer items. The summary is displayed as part of the item information for the route layer item. If no value is provided, default summary text—Route and directions for &lt;route name&gt;—is used in which &lt;route name&gt; is replaced with the name of the route represented by the route layer.",
          "datatype": "String"
        },
        {
          "name": "tags(Optional)",
          "explanation": "The tags that will be used to describe and identify the route layer items. Individual tags are separated with commas. The route name is always included as a tag even when no other value is provided.",
          "datatype": "String"
        },
        {
          "name": "route_name_prefix(Optional)",
          "explanation": "A qualifier that will be added to the title of every route\r\nlayer item. For example, a route name prefix of Monday morning deliveries can be used to group all route layer items created from a route analysis performed by deliveries that will be run on Monday morning. If no\r\nvalue is specified, the title of the\r\nroute layer item will be created using only the route name.",
          "datatype": "String"
        },
        {
          "name": "portal_folder_name(Optional)",
          "explanation": "The folder in your personal online\r\nworkspace where the route layer items will be created. If a\r\nfolder with the provided name does not exist, a folder will be\r\ncreated. If a folder with the provided name exists, the items will\r\nbe created in the existing folder. If no value is provided, the route layer\r\nitems will be created in the root folder of your online\r\nworkspace.",
          "datatype": "String"
        },
        {
          "name": "share_with(Optional)",
          "explanation": "Specifies who can access the route layer items.EVERYBODY— The route layer items will be public and can be accessed by anyone with the URL to the items.MYCONTENT— The route layer items will only be shared with the owner of the item (the user connected to the portal when the tool is run). As a result, only the item owner can access the route layers. This is the default.MYGROUPS— The route layer items will be shared with groups the connected user belongs to and its members. The groups are specified using the groups parameter.MYORGANIZATION— The route layer items will be shared with all authenticated users in your organization.",
          "datatype": "String"
        },
        {
          "name": "groups[groups,...](Optional)",
          "explanation": "The list of groups with which the route layer items will be shared. This parameter is applicable only when the share_with parameter is set to MYGROUPS.",
          "datatype": "String"
        }
      ],
      "summary": "Shares the results of network analyses as route layer items in a portal.  A route layer includes all the information for a route such as the stops assigned to the route or the orders serviced by a route, as well as the travel directions. A route layer item can be used by various applications, such as ArcGIS Navigator to provide route guidance for mobile workers, the Directions pane in Map Viewer Classic to further customize the route contained in the route layer, and ArcGIS Pro to create a route analysis layer from a route layer.",
      "extraction_date": "2025-10-01T14:54:05.090638"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Solve",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/solve.htm",
      "parameters": [
        {
          "name": "in_network_analysis_layer",
          "explanation": "The network analysis layer on which the analysis will be computed.",
          "datatype": "Network Analyst Layer"
        },
        {
          "name": "ignore_invalids(Optional)",
          "explanation": "Specifies whether invalid input locations will be ignored. Typically, locations are invalid if they cannot be located on the network. When invalid locations are ignored, the solver will skip them and attempt to perform the analysis using the remaining locations.SKIP—Invalid input locations will be ignored and only valid locations will be used.HALT—All input locations will be used. Any invalid locations will cause the solve to fail.\r\nThe default value will match the ignoreInvalidLocations property of the designated in_network_analysis_layer value.",
          "datatype": "Boolean"
        },
        {
          "name": "terminate_on_solve_error(Optional)",
          "explanation": "Specifies whether the tool will stop running and terminate if an error is encountered during the solve.TERMINATE—The tool will stop running and terminate when the solver encounters an error. This is the default. When you use this option, the Result object is not created when the tool terminates due to a solver error. Review the geoprocessing messages from the ArcPy object. CONTINUE—The tool will not fail and will continue to run when the solver encounters an error. All error messages returned by the solver will be converted to warning messages. When you use this option, the Result object is always created and the maxSeverity property of the Result object is set to 1. Use the getOutput method of the Result object with an index value of 1 to determine if the solve was successful.",
          "datatype": "Boolean"
        },
        {
          "name": "simplification_tolerance(Optional)",
          "explanation": "The tolerance that determines the degree of simplification for the output geometry. If a tolerance is specified, it must be greater than zero. You\r\ncan choose a preferred unit; the default unit is decimal degrees.Specifying a simplification tolerance tends to reduce the time it takes to render routes or service areas. The drawback, however, is that simplifying geometry removes vertices, which may lessen the spatial accuracy of the output at larger scales.Because a line with only two vertices cannot be simplified any further, this parameter has no effect on drawing times for single-segment output, such as straight-line routes,   OD cost matrix lines, and location-allocation lines.",
          "datatype": "Linear Unit"
        },
        {
          "name": "overrides(Optional)",
          "explanation": "Note:This parameter is for internal use only.",
          "datatype": "String"
        }
      ],
      "summary": "Solves the network analysis layer problem based on its network locations and properties.",
      "extraction_date": "2025-10-01T14:54:07.464640"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "deprecated",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/appendices/what-is-a-deprecated-tool.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:54:09.643398"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Select Data",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/modelbuilder-toolbox/select-data.htm",
      "parameters": [],
      "summary": "Selects data in a parent data element such as a folder, geodatabase, or feature dataset. The tool allows access to the data stored inside a parent container, such as feature classes or tables inside a geodatabase. Learn how Select Data works in ModelBuilder",
      "extraction_date": "2025-10-01T14:54:11.832024"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Select Layer By Location",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/data-management/select-layer-by-location.htm",
      "parameters": [
        {
          "name": "in_layer[in_layer,...]",
          "explanation": "The features that will be evaluated using the select_features parameter values.  The selection will be applied to these features.",
          "datatype": "Feature Layer; Raster Layer; Mosaic Layer"
        },
        {
          "name": "overlap_type(Optional)",
          "explanation": "Specifies the spatial relationship that will be evaluated.INTERSECT—The features in the input layer will be selected if they intersect a selecting feature. This is the default. INTERSECT_3D—The features in the input layer will be selected if they intersect a selecting feature in three-dimensional space (x, y, and z).INTERSECT_DBMS—The features in the input layer will be selected if they intersect a selecting feature.This option applies to enterprise geodatabases only. The selection will be processed in the enterprise geodatabase DBMS rather than on the client when all requirements are met (see usage notes).This option may provide better performance than performing the selection on the client.WITHIN_A_DISTANCE—The features in the input layer will be selected if they are within the specified distance (using Euclidean distance) of a selecting feature. Use the search_distance parameter to specify the distance.WITHIN_A_DISTANCE_3D—The features in the input layer will be selected if they are within a specified distance of a selecting feature in three-dimensional space. Use the search_distance parameter to specify the distance.WITHIN_A_DISTANCE_GEODESIC—This spatial relationship is the same as the WITHIN_A_DISTANCE option except that geodesic distance is used rather than planar distance.  Distance between features will be calculated using a geodesic formula that takes into account the curvature of the spheroid and correctly handles data near and across the dateline and poles. Choose this option if the data covers a large geographic extent or the coordinate system of the inputs is unsuitable for distance calculations. Use the search_distance parameter to specify the distance.CONTAINS—The features in the input layer will be selected if they contain a selecting feature.COMPLETELY_CONTAINS—The features in the input layer will be selected if they completely contain a selecting feature.CONTAINS_CLEMENTINI—This spatial relationship produces the same results as the CONTAINS option except that if the selecting feature is entirely on the boundary of the input feature (no part is properly inside or outside), the feature will not be selected.Clementini defines the boundary polygon as the line separating inside and outside, the boundary of a line is defined as its end points, and the boundary of a point is always empty.WITHIN—The features in the input layer will be selected if they are within a selecting feature.COMPLETELY_WITHIN—The features in the input layer will be selected if they are completely within or contained by a selecting feature.WITHIN_CLEMENTINI—The result will be identical to the WITHIN option result except that if the entirety of the feature in the input layer is on the boundary of the feature in the selecting layer, the feature will not be selected.Clementini defines the boundary polygon as the line separating inside and outside, the boundary of a line is defined as its end points, and the boundary of a point is always empty.ARE_IDENTICAL_TO—The features in the input layer will be selected if they are identical (in geometry) to a selecting feature.BOUNDARY_TOUCHES—The features in the input layer will be selected if they have a boundary that touches a selecting feature.  When the input  features are lines or polygons, the boundary of the input feature can only touch the boundary of the selecting feature, and no part of the input feature can cross the boundary of the selecting feature.SHARE_A_LINE_SEGMENT_WITH—The features in the input layer will be selected if they share a line segment with a selecting feature. The input and selecting features must be line or polygon.CROSSED_BY_THE_OUTLINE_OF—The features in the input layer will be selected if they are crossed by the outline of a selecting feature. The input and selecting features must be lines or polygons. If polygons are used for the input or selecting layer, the polygon's boundary (line) will be used. Lines that cross at a point will be selected; lines that share a line segment will not be selected.HAVE_THEIR_CENTER_IN—The features in the input layer will be selected if their center falls within a selecting feature. The center of the feature is calculated as follows: for polygon and multipoint, the geometry's centroid is used; for line input, the geometry's midpoint is used.",
          "datatype": "String"
        },
        {
          "name": "select_features(Optional)",
          "explanation": "The features in the Input Features parameter will be selected based on their relationship to the features from this layer or feature class.",
          "datatype": "Feature Layer"
        },
        {
          "name": "search_distance(Optional)",
          "explanation": "The distance that will be searched. This parameter is only valid if the overlap_type  parameter is set to INTERSECT, INTERSECT_3D, WITHIN_A_DISTANCE, WITHIN_A_DISTANCE_3D, WITHIN_A_DISTANCE_GEODESIC, CONTAINS, or  HAVE_THEIR_CENTER_IN.If the WITHIN_A_DISTANCE_GEODESIC option is specified, use a linear unit such as kilometers or miles.",
          "datatype": "Linear Unit"
        },
        {
          "name": "selection_type(Optional)",
          "explanation": "Specifies how the selection will be applied to the input and how it will be combined with an existing selection.  This tool does not include an option to clear an existing selection; use the  Select Layer By Attribute tool with the selection_type parameter set to CLEAR_SELECTION to do that.NEW_SELECTION—The resulting selection will replace any existing selection. This is the default.ADD_TO_SELECTION—The resulting selection will be added to an existing selection. If no selection exists, this is the same as the NEW_SELECTION option.REMOVE_FROM_SELECTION—The resulting selection will be removed from an existing selection. If no selection exists, the operation will have no effect.SUBSET_SELECTION—The resulting selection will be combined with the existing selection. Only records that are common to both will remain selected.SWITCH_SELECTION—The selection will be switched. All records that were selected will be removed from the selection, and all records that were not selected will be added to the selection.The select_features and overlap_type parameters are ignored when this option is specified.",
          "datatype": "String"
        },
        {
          "name": "invert_spatial_relationship(Optional)",
          "explanation": "Specifies whether the spatial relationship evaluation result or the opposite result will be used.  For example, this parameter can be used to get a list of features that do not intersect or are not within a given distance of features in another dataset.NOT_INVERT—The evaluation result will be used. This is the default.INVERT—The opposite of the evaluation result will be used.  If the selection_type parameter is set, the reversal of the selection will occur before it is combined with existing selections.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Selects features  based on a spatial relationship to features in another dataset or the same dataset. Each feature in the Input Features parameter is evaluated using the features in the  Selecting Features parameter. If the specified Relationship parameter value is met, the input feature is selected. Learn more about Select By Location including image examples of relationships",
      "extraction_date": "2025-10-01T14:54:14.490481"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Copy Features",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/data-management/copy-features.htm",
      "parameters": [
        {
          "name": "in_features",
          "explanation": "The features to be copied.",
          "datatype": "Feature Layer"
        },
        {
          "name": "out_feature_class",
          "explanation": "The feature class which will be created and to which the features will be copied.",
          "datatype": "Feature Class"
        },
        {
          "name": "config_keyword(Optional)",
          "explanation": "Geodatabase configuration keyword to be applied if the output is a geodatabase.",
          "datatype": "String"
        },
        {
          "name": "spatial_grid_1(Optional)",
          "explanation": "This parameter has been deprecated in ArcGIS Pro.  Any value you enter is ignored.",
          "datatype": "Double"
        },
        {
          "name": "spatial_grid_2(Optional)",
          "explanation": "This parameter has been deprecated in ArcGIS Pro.  Any value you enter is ignored.",
          "datatype": "Double"
        },
        {
          "name": "spatial_grid_3(Optional)",
          "explanation": "This parameter has been deprecated in ArcGIS Pro.  Any value you enter is ignored.",
          "datatype": "Double"
        }
      ],
      "summary": "Copies features from the input feature class or layer to a new feature class.",
      "extraction_date": "2025-10-01T14:54:16.814013"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Introduction to the ArcGIS Network Analyst extension",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/what-is-network-analyst-.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:54:19.256144"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Build Network",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/build-network.htm",
      "parameters": [
        {
          "name": "in_network_dataset",
          "explanation": "The network dataset to be built.",
          "datatype": "Network Dataset Layer"
        },
        {
          "name": "force_full_build(Optional)",
          "explanation": "Specifies whether the full network will be built or only the parts of the network in dirty areas.\r\nFORCE_FULL_BUILD—The full network will be built.NO_FORCE_FULL_BUILD—Only the parts of the network that have been changed since the last build will be built. This is the default.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Reconstructs the network connectivity and attribute information of a network dataset. The network dataset must be rebuilt after edits are made to the attributes or the features of a participating source feature class. After the source features are edited, the tool establishes the network connectivity only in the areas that have been edited to speed up the build process; however, when the network attributes are edited, the entire extent of the network dataset is rebuilt. This may be a slow operation on a large network dataset. Learn more about which network dataset edits require a rebuild",
      "extraction_date": "2025-10-01T14:54:23.391371"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Create Network Dataset",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/create-network-dataset.htm",
      "parameters": [
        {
          "name": "feature_dataset",
          "explanation": "The feature dataset where the network dataset\r\nwill be created. The feature dataset should contain the source feature classes that will participate in the network dataset.If the feature dataset is in an enterprise geodatabase, the feature dataset\r\nand all source feature classes cannot be versioned.",
          "datatype": "Feature Dataset"
        },
        {
          "name": "out_name",
          "explanation": "The name of the network dataset to be created. The feature_dataset parameter value and its parent geodatabase must not already contain a network dataset with this name.",
          "datatype": "String"
        },
        {
          "name": "source_feature_class_names[source_feature_class_names,...]",
          "explanation": "The names of the feature classes to be included in the network dataset as network source features. Specify this parameter as a list of strings.You must choose at least one line feature class that is not a turn feature class. This line feature class will act as an edge source in the network dataset. You can optionally choose point feature classes to act as junction sources in the network dataset and turn feature classes to act as turn sources. Learn more about network dataset source feature classesAll source feature classes must reside in the feature_dataset parameter value and must not already participate in a geometric network, a utility network, or another network dataset. Source feature classes cannot have 64-bit object identifier (OID) fields.",
          "datatype": "String"
        },
        {
          "name": "elevation_model",
          "explanation": "Specifies the model that will be used to control vertical connectivity in the network dataset.\r\nLearn more about vertical connectivityELEVATION_FIELDS— Coincident endpoints with the same elevation field values will be considered connected in the network dataset. This is the default.Z_COORDINATES—The z-coordinate values in the line feature geometry will be used to determine vertical connectivity. Coincident points are considered connected only if they have matching z-coordinate values.NO_ELEVATION— Network dataset connectivity will be  determined only by horizontal coincidence.",
          "datatype": "String"
        }
      ],
      "summary": "Creates a network dataset in an existing feature dataset. The network dataset can be used to perform network analysis on the data in the feature dataset.",
      "extraction_date": "2025-10-01T14:54:25.751962"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "network dataset",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/what-is-network-dataset-.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:54:27.912564"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Create Network Dataset From Template",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/create-network-dataset-from-template.htm",
      "parameters": [
        {
          "name": "network_dataset_template",
          "explanation": "The  template file (.xml)  created by the Create Template From Network Dataset tool containing the schema of the output network dataset to be created.",
          "datatype": "File"
        },
        {
          "name": "output_feature_dataset",
          "explanation": "The feature dataset containing the feature classes that will take part in the network dataset being created.\r\nThe network will be created in this dataset using the name specified in the network dataset template.",
          "datatype": "Feature Dataset"
        }
      ],
      "summary": "Creates a new network dataset with the schema contained in the input template file (.xml). All the feature classes and input tables required for creating the network dataset must already exist before this tool is executed.",
      "extraction_date": "2025-10-01T14:54:30.291346"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Create Template From Network Dataset",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/create-template-from-network-dataset.htm",
      "parameters": [
        {
          "name": "network_dataset",
          "explanation": "The network dataset whose schema will be written to the output template file.",
          "datatype": "Network Dataset Layer"
        },
        {
          "name": "output_network_dataset_template",
          "explanation": "The output file (.xml) that will contain the schema of the input network dataset.",
          "datatype": "File"
        }
      ],
      "summary": "Creates a file containing the schema of an existing network dataset. This template file can then be used to create a new network dataset with the same schema.",
      "extraction_date": "2025-10-01T14:54:32.650359"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Dissolve Network",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/dissolve-network.htm",
      "parameters": [
        {
          "name": "in_network_dataset",
          "explanation": "The network dataset to be dissolved.  The input network dataset must be a file or personal geodatabase network dataset with exactly one edge source. Any number of junction sources and turn sources is allowed. The edge source must have:End point connectivity policyAn elevation policy of either None or Elevation Fields The input network dataset must be built before it can be used in this tool.",
          "datatype": "Network Dataset Layer"
        },
        {
          "name": "out_workspace_location",
          "explanation": "The geodatabase workspace in which to create the dissolved network dataset. The workspace must be an ArcGIS 10 geodatabase or later, and it must be a different geodatabase than the one where the input network dataset resides.",
          "datatype": "Workspace"
        }
      ],
      "summary": "Creates a network dataset that minimizes the number of line features required to correctly model the input network dataset. The more efficient output network dataset reduces the time required to solve analyses, draw results, and generate driving directions. This tool outputs a new network dataset and source feature classes; the input network dataset and its source features remain unchanged.",
      "extraction_date": "2025-10-01T14:54:35.065365"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Make Network Dataset   Layer",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/make-network-dataset-layer.htm",
      "parameters": [
        {
          "name": "in_network_dataset",
          "explanation": "The network dataset from which to make the new layer.",
          "datatype": "Network Dataset Layer"
        },
        {
          "name": "output_layer",
          "explanation": "The name of the network dataset layer to be\r\ncreated. The layer can be used as an input\r\nto any geoprocessing tool that accepts a network dataset layer as\r\ninput.\r\nNote:The output layer  created is temporary and will not persist after the  session ends. To save the layer to the disk, run the Save To Layer File tool.",
          "datatype": "Network Dataset Layer"
        },
        {
          "name": "draw_elements[draw_elements,...](Optional)",
          "explanation": "This parameter is not yet supported in ArcGIS Pro.",
          "datatype": "String"
        }
      ],
      "summary": "Creates a network dataset layer from a network  dataset. A network dataset is opened each time the network dataset is used as input to a geoprocessing tool. Opening a network dataset is expensive, as they contain advanced data structures and tables that are read and cached. A network dataset layer, which opens the dataset only a single time, will perform better in subsequent tools than reusing the network dataset.",
      "extraction_date": "2025-10-01T14:54:37.493175"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Integrate",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/data-management/integrate.htm",
      "parameters": [
        {
          "name": "in_features[[Feature Layer, Long],...]",
          "explanation": "The feature classes that will be integrated. When the distance between features is small in comparison to the tolerance, the vertices or points will be clustered (moved to be coincident).The feature class or layer with the lower rank will snap to the feature from the feature class or layer with the higher rank (with 1 being a higher rank than 2). Features in the feature class with a rank of 1 may move when a large x,y tolerance is used.  For more information, see Priority ranks and geoprocessing tools.",
          "datatype": "Value Table"
        },
        {
          "name": "cluster_tolerance(Optional)",
          "explanation": "The distance that determines the range in which feature vertices are made coincident. To minimize undesired movement of vertices, the x,y tolerance should be small. If no value is provided, the x,y tolerance from the first dataset in the list of inputs will be used.Caution:  Changing this parameter's value may cause failure or unexpected results.  It is recommended that you do not modify this parameter. It has been removed from view on the tool dialog box.  By default, the input feature class's spatial reference x,y tolerance property is used.",
          "datatype": "Linear Unit"
        }
      ],
      "summary": "Analyzes the coordinate locations of feature vertices among features in one or more feature classes. Those that fall within a specified distance of one another are assumed to represent the same location and are assigned a common coordinate value (in other words, they are colocated). The tool also adds vertices where feature vertices are within the x,y tolerance of an edge and where line segments intersect. Integrate performs\r\nthe following processing tasks: Vertices within the x,y tolerance of one another will be assigned the same coordinate location.When a vertex of one feature is within the x,y tolerance of an edge of any other feature, a new vertex will be inserted on the edge.When line segments intersect, a vertex will be inserted at the point of intersection for each feature involved in the intersection. An alternate tool is available for vector data integration. See the Pairwise Integrate documentation for details.",
      "extraction_date": "2025-10-01T14:54:40.113485"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Introduction to the ArcGIS Network Analyst extension",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/what-is-network-analyst-.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:54:42.553056"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Create Turn Feature Class",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/create-turn-feature-class.htm",
      "parameters": [
        {
          "name": "out_location",
          "explanation": "The  file, workgroup, or enterprise geodatabase, or the folder where the output turn feature class will be created. The workspace must already exist.",
          "datatype": "Workspace; Feature Dataset"
        },
        {
          "name": "out_feature_class_name",
          "explanation": "The name of the turn feature class the will be created.",
          "datatype": "String"
        },
        {
          "name": "maximum_edges(Optional)",
          "explanation": "The maximum number of edges that turns in the new turn feature class can model. The default value is 5. The maximum value is 50.",
          "datatype": "Long"
        },
        {
          "name": "in_network_dataset(Optional)",
          "explanation": "The network dataset in which the turn feature class will participate. The resulting turn feature class will be added as a turn source to the network dataset. If no network dataset is provided, the turn feature class will be created as not participating in a network dataset.",
          "datatype": "Network Dataset Layer"
        },
        {
          "name": "in_template_feature_class(Optional)",
          "explanation": "The feature class that will be used as a template to define the attribute schema of the new turn feature class.If the template feature class has the following fields, they will not be created in the output turn feature class: NODE_, NODE#, JUNCTION, F_EDGE, T_EDGE, F-EDGE, T-EDGE, ARC1_, ARC2_, ARC1#, ARC2#, ARC1-ID, ARC2-ID, AZIMUTH, and ANGLE.",
          "datatype": "Feature Layer"
        },
        {
          "name": "spatial_reference(Optional)",
          "explanation": "The spatial reference that will be applied to the output turn feature class. This parameter is ignored if the output location is a geodatabase feature dataset, as the output turn feature class will inherit the spatial reference of the feature dataset.\r\nTo import the spatial reference from an existing feature class, specify its path as the parameter value.",
          "datatype": "Spatial Reference"
        },
        {
          "name": "config_keyword(Optional)",
          "explanation": "The configuration keyword that will determine the storage parameters of the new turn feature class. This parameter is used only if the output location is a workgroup or enterprise geodatabase.",
          "datatype": "String"
        },
        {
          "name": "spatial_grid_1(Optional)",
          "explanation": "This parameter is not supported.  Any value provided will be ignored.",
          "datatype": "Double"
        },
        {
          "name": "spatial_grid_2(Optional)",
          "explanation": "This parameter is not supported.  Any value provided will be ignored.",
          "datatype": "Double"
        },
        {
          "name": "spatial_grid_3(Optional)",
          "explanation": "This parameter is not supported.  Any value provided will be ignored.",
          "datatype": "Double"
        },
        {
          "name": "has_z(Optional)",
          "explanation": "Specifies whether the coordinates in the turn feature class with have elevation (z) values.ENABLED—The coordinates in the turn feature class will have elevation (z) values. Use this value if the input network dataset is specified and it supports connectivity based on z-coordinate values of the network sources.DISABLED—The coordinates in the turn feature class will not have elevation (z) values.",
          "datatype": "Boolean"
        }
      ],
      "summary": "Creates a turn feature class to store turn features that model turning movements in a network dataset.",
      "extraction_date": "2025-10-01T14:54:46.895798"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Increase Maximum Edges",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/increase-maximum-edges.htm",
      "parameters": [
        {
          "name": "in_turn_features",
          "explanation": "The turn feature class that is having its maximum number of edges raised.",
          "datatype": "Feature Layer"
        },
        {
          "name": "maximum_edges",
          "explanation": "The new maximum number of edges in the input turn feature class. The value must be at least one higher than the existing maximum number of edges and cannot be greater than 50.",
          "datatype": "Long"
        }
      ],
      "summary": "Increases the maximum number of edges per turn in a turn feature class.",
      "extraction_date": "2025-10-01T14:54:49.323761"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Populate Alternate ID Fields",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/populate-alternate-id-fields.htm",
      "parameters": [
        {
          "name": "in_network_dataset",
          "explanation": "The network dataset whose turn feature classes will receive alternate ID fields. The fields will be created on all of the turn feature classes added as a turn source to the network dataset.",
          "datatype": "Network Dataset Layer"
        },
        {
          "name": "alternate_ID_field_name",
          "explanation": "The name of the alternate ID field on the edge feature sources of the network dataset. All edge feature sources referenced by turns must have the same name for the alternate ID field.",
          "datatype": "String"
        }
      ],
      "summary": "Creates and populates additional fields on the turn feature classes that reference the edges in the network  by alternate IDs. The alternate IDs help maintain the integrity of the turn features if the edge sources are edited in such a way that their ObjectID values change. Learn more about turns in a network dataset",
      "extraction_date": "2025-10-01T14:54:51.775344"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Turn Table To Turn Feature Class",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/turn-table-to-turn-feature-class.htm",
      "parameters": [
        {
          "name": "in_turn_table",
          "explanation": "The .dbf file or INFO turn table from which the new turn feature class will be created.\r\nINFO tables do not support mixed case path names on Linux and Solaris.",
          "datatype": "Table View"
        },
        {
          "name": "reference_line_features",
          "explanation": "The line feature class to which the input turn table refers. The feature class must be a source in a network dataset.",
          "datatype": "Feature Class"
        },
        {
          "name": "out_feature_class_name",
          "explanation": "The name of the new turn feature class to create.",
          "datatype": "String"
        },
        {
          "name": "reference_nodes_table(Optional)",
          "explanation": "The nodes.dbf table in the .nws folder containing the original ArcView GIS network in which the input turn table participated.This parameter is ignored if the input turn table is an INFO table.If the input turn table is a .dbf table and this parameter is omitted, then U-turns and turns that traverse between edges connected to each other at both ends will not be created in the output turn feature class.Errors will be reported in an error file written to the directory defined by the TEMP system variable. The full path name to the error file is reported as a warning message.",
          "datatype": "dBASE Table"
        },
        {
          "name": "maximum_edges(Optional)",
          "explanation": "The maximum number of edges per turn in the new turn feature class. The default value is 5. The maximum value is 50.",
          "datatype": "Long"
        },
        {
          "name": "config_keyword(Optional)",
          "explanation": "Specifies the configuration keyword that determines the storage parameters of the output turn feature class. This parameter is used only if the output turn feature class is created in a workgroup or enterprise geodatabase.",
          "datatype": "String"
        },
        {
          "name": "spatial_grid_1(Optional)",
          "explanation": "This parameter has been deprecated in ArcGIS Pro.  Any value you enter is ignored.",
          "datatype": "Double"
        },
        {
          "name": "spatial_grid_2(Optional)",
          "explanation": "This parameter has been deprecated in ArcGIS Pro.  Any value you enter is ignored.",
          "datatype": "Double"
        },
        {
          "name": "spatial_grid_3(Optional)",
          "explanation": "This parameter has been deprecated in ArcGIS Pro.  Any value you enter is ignored.",
          "datatype": "Double"
        }
      ],
      "summary": "Converts an ArcView turn table or ArcInfo Workstation coverage turn table to an ArcGIS turn feature class.",
      "extraction_date": "2025-10-01T14:54:54.101578"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Update By Alternate ID Fields",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/update-by-alternate-id-fields.htm",
      "parameters": [
        {
          "name": "in_network_dataset",
          "explanation": "The network dataset whose turn feature classes will be updated by their alternate ID fields.",
          "datatype": "Network Dataset Layer"
        },
        {
          "name": "alternate_ID_field_name",
          "explanation": "The name of the alternate ID field on the edge feature sources of the network dataset. All edge feature sources referenced by turns must have the same name for the alternate ID field.",
          "datatype": "String"
        }
      ],
      "summary": "Updates all the edge references in turn feature classes using an alternate ID field to identify the corresponding edge features for each turn. Use this tool after making edits to the edge source feature classes that alter ObjectID values. Learn more about turns in a network dataset",
      "extraction_date": "2025-10-01T14:54:56.499451"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Update By Geometry",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/tool-reference/network-analyst/update-by-geometry.htm",
      "parameters": [
        {
          "name": "in_turn_features",
          "explanation": "The turn feature class to be updated.",
          "datatype": "Feature Layer"
        }
      ],
      "summary": "Updates all the edge references in the turn feature class using the geometry of the turn features. This tool is useful when the IDs listed for the turn can no longer find the edges participating in the turn due to edits to the underlying edges.",
      "extraction_date": "2025-10-01T14:54:58.837392"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Introduction to the ArcGIS Network Analyst extension",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/what-is-network-analyst-.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:55:01.310051"
    },
    {
      "toolset": "network-analyst",
      "tool_name": "Introduction to the ArcGIS Network Analyst extension",
      "help_url": "https://pro.arcgis.com/en/pro-app/3.5/help/analysis/networks/what-is-network-analyst-.htm",
      "parameters": [],
      "summary": "",
      "extraction_date": "2025-10-01T14:55:04.624539"
    }
  ]
}